{
    "version": "https://jsonfeed.org/version/1",
    "title": "专注技术分享",
    "subtitle": "醒醒，别做梦了",
    "icon": "http://yrmlnf.coding-pages.com/images/favicon.ico",
    "description": "",
    "home_page_url": "http://yrmlnf.coding-pages.com",
    "items": [
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/PySpider-%E7%88%AC%E5%8F%96Shopfiy%E5%BA%94%E7%94%A8/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/PySpider-%E7%88%AC%E5%8F%96Shopfiy%E5%BA%94%E7%94%A8/",
            "title": "PySpider-爬取Shopify应用",
            "date_published": "2021-04-22T03:22:00.000Z",
            "content_html": "<h1 id=\"操作系统\"><a class=\"anchor\" href=\"#操作系统\">#</a> 操作系统</h1>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\">  Windows</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\">  MAC</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\">  Linux</label></li>\n</ul>\n<h1 id=\"软件依赖\"><a class=\"anchor\" href=\"#软件依赖\">#</a> 软件依赖</h1>\n<p><span class=\"label info\">^ Lastest</span> <span class=\"label info\">~ minimum</span></p>\n<ul>\n<li>Python@3.6^</li>\n<li>Pip@~</li>\n<li>node.js@~</li>\n</ul>\n<h1 id=\"实验环境\"><a class=\"anchor\" href=\"#实验环境\">#</a> 实验环境</h1>\n<ul>\n<li>Windows10</li>\n<li>python@3.68</li>\n<li>pip@19.2.3</li>\n</ul>\n<h1 id=\"什么是pyspider\"><a class=\"anchor\" href=\"#什么是pyspider\">#</a> 什么是 PySpider</h1>\n<p>pyspider 是支持 WebUI 的，支持任务监控，项目管理，以及多种数据库的一个强大的爬虫框架</p>\n<ul>\n<li>\n<p>pyspider 的优点，它有这么几个优点</p>\n<ol>\n<li>提供 WebUI 界面，调试爬虫很方便。</li>\n<li>可以很方便的进行爬取的流程监控和爬虫项目管理。</li>\n<li>支持常见的数据库。</li>\n<li>支持使用 PhantomJS，可以抓取 JavaScript 页面。</li>\n<li>支持优先级定制和定时爬取等功能。</li>\n</ol>\n</li>\n<li>\n<p>和 Scrapy 的比较</p>\n<ol>\n<li>pyspider 提供 WebUI,Scrapy 它采用的是代码和命令行操作，但可以通过对接 Portia 现可视化配置。</li>\n<li>pyspider 支持 PhantomJS 来进行 JavaScript 谊染页面的采集 Scrapy 可以对接 Sc rapy-Splash 组件，这需要额外配置。</li>\n<li>pyspider 中内置 pyquery 作为选择器而 Scrapy 接了 XPath 对接 css 选择器和正则匹配。</li>\n<li>pyspider 的可扩展程度不高，Scrapy 可以通过对接其他的模块实现强大的功能，模块之间的耦合度低。</li>\n</ol>\n</li>\n<li>\n<p>总结：</p>\n<p>所以如果要快速实现一个页面的抓取，推荐使用 pyspider, 开发更加便捷，如果要应对反爬程度很强、超大规模的抓取，推荐使用 Scrapy。</p>\n</li>\n</ul>\n<p>pyspider 的架构相对简单分为这么几个部分：scheduler（调度器）、fetcher（抓取器）、processor（脚本执行）任务由 scheduler 发起调度，fetcher 抓取网页内容， processor 执行预先编写的 py 脚本，输出结果或产生新的提链任务（scheduler)、整个爬取的过程受，Monitor（监控器）的监控，结果保存在 Result Worker（结果处理器）中。<br />\n2. 每个 pyspider 的项目对应一个 Python 脚本，该脚本中定义了一个 Handler 类，它有 on_start (）方法 爬取首先调用 on_start （）方法生成最初的抓取任务，然后发送给 Scheduler 进行调度。</p>\n<p>执行流程：</p>\n<ol>\n<li>scheduler 将抓取任务分发给 Fetcher 进行抓取， Fetcher 执行并得到响应，随后将响应发送给 Processer<br />\nProcesser 处理响应并提取 url，新的 URL 生成新的抓取任务，然后通过消息队列的方式通知 Schduler 当前抓取任务执行情况，并将新生成的抓取任务发送 Scheduler 如果生成了提取结果，则将其发送到结果队列等待 Result Worker 处理</li>\n<li>Scheduler 接收到新的抓取任务，然后查询数据库，判断其如果是新的抓取任务或者是需要重试的任务就继续进行调度，然后将其发送回 Fetcher 进行抓取<br />\n不断重复以上流程实现抓取</li>\n</ol>\n<h1 id=\"pyspider安装\"><a class=\"anchor\" href=\"#pyspider安装\">#</a> PySpider 安装</h1>\n<ol>\n<li>\n<p>创建虚拟环境</p>\n<p>作者使用的是 Anaconda 虚拟环境，可以在 Anaconda 官网下载并安装。这里必须指定 python3.6 版本，若用 python3.7 会报错，需要修改源码</p>\n<details class=\"warning\"><summary>python3.7修改源码</summary><div>\n<pre><code> 解决办法是将这个关键字替换掉。主要有两个文件：\n Python\\Lib\\site-packages\\pyspider\\run.py 和 \n Python\\Lib\\site-packages\\pyspider\\fetcher\\tornado_fetcher.py 中的async全部替换成shark\n</code></pre>\n</div></details>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda create -n pys <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.6</span></pre></td></tr></table></figure><details class=\"info\"><summary>windows下Anaconda的常用命令</summary><div>\n<ul>\n<li>创建虚拟环境，虚拟环境名为 pys<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda create -n pys</pre></td></tr></table></figure></li>\n<li>删除 pys 虚拟环境</li>\n</ul>\n<pre><code>```bash\n  conda remove -n pys\n```\n</code></pre>\n<ul>\n<li>进入 pys 虚拟环境</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda activate pys</pre></td></tr></table></figure><ul>\n<li>退出 pys 虚拟环境</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda deactivate pys</pre></td></tr></table></figure></div></details>\n</li>\n<li>\n<p>安装 pyspider</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda activate pys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip <span class=\"token function\">install</span> pyspider</pre></td></tr></table></figure></li>\n<li>\n<p>安装 PHantomJS</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9waGFudG9tanMub3JnL2Rvd25sb2FkLmh0bWw=\">下载 PHantomJS</span><br />\n 下载对应系统的安装包，作者下载的是 windows 系统的<br />\n<img data-src=\"1.png\" alt=\"下载PHantomJS\" /><br />\n 解压文件夹后，将 bin 目录下的 phantomjs.exe 放入当前环境的 pyspider 包根目录下<br />\n<img data-src=\"2.png\" alt=\"下载PHantomJS\" /><br />\n 我的虚拟环境目录是在 J:\\Anaconda3\\envs\\pys<br />\n 所以要将该文件放入 J:\\Anaconda3\\envs\\pys<br />\n<img data-src=\"3.png\" alt=\"下载PHantomJS\" /></p>\n</li>\n<li>\n<p>修改 werkzeug 版本<br />\n werkzeug 的版本为 1.0.0，这个版本中没有 DispatcherMiddleware 方法，所以还是降低版本。<br />\n注意降低版本不能低于 0.15 版本，因为我们的 pyspider 要求大于 0.15 版本以上</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python -m pip uninstall werkzeug</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> python -m pip <span class=\"token function\">install</span> <span class=\"token assign-left variable\">werkzeug</span><span class=\"token operator\">==</span><span class=\"token number\">0.16</span>.0</pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"pyspider启动\"><a class=\"anchor\" href=\"#pyspider启动\">#</a> PySpider 启动</h1>\n<p>进入虚拟环境后，通过命令启动 PySpider</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda activate pys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pyspider</pre></td></tr></table></figure><p>如果发现 PySpider 卡在 result_worker starting... 不动，请关闭公网防火墙</p>\n<p>或则按下面操作步骤操作</p>\n<ol>\n<li>打开一个 cmd 窗口，启动 pyspider，等待 10 秒左右</li>\n<li>保持第一个 cmd 窗口，再打开一个新的 cmd 窗口启动 pyspider</li>\n<li>第二个 cmd 窗口成功 pyspider 后关闭第一个 cmd 窗口</li>\n</ol>\n<p>服务启动后，在浏览器访问 localhost:5000，即可进入界面</p>\n<h1 id=\"界面介绍\"><a class=\"anchor\" href=\"#界面介绍\">#</a> 界面介绍</h1>\n<p><img data-src=\"4.png\" alt=\"界面介绍\" /></p>\n<ul>\n<li>定时任务：当前设置的定时任务</li>\n<li>组：可以将爬虫分成不同组，然后按组调用。设置 group 为 delete 和状态 STOP，等待 24 小时将可以删除爬虫</li>\n<li>爬虫：爬虫程序</li>\n<li>任务状态：\n<ul>\n<li>TODO - 创建一个脚本来编写</li>\n<li>STOP- 您可以将项目标记为 STOP 您希望它停止（= =）。</li>\n<li>CHECKING- 修改正在运行的项目时，为防止不完整修改，项目状态将 CHECKING 自动设置。</li>\n<li>DEBUG/ RUNNING- 这两种状态对蜘蛛没有区别。但是将它标记为 DEBUG 第一次运行然后将其更改 RUNNING 为检查后是很好的。</li>\n</ul>\n</li>\n<li>rate：<br />\n爬取的速率，rate - 一秒钟内有多少请求，burst - 考虑到这种情况，<br />\nrate/burst = 0.1/3 这意味着蜘蛛每 10 秒抓一页。所有任务都已完成，项目每分钟检查最后更新的项目。假设找到 3 个新项目，pyspider 将 “爆发” 并抓取 3 个任务而不等待 3 * 10 秒。但是，第四项任务需要等待 10 秒。</li>\n<li>avg time：平均时间</li>\n<li>progress：表示每 5 分钟，每小时，每天和总体的请求次数</li>\n</ul>\n<h1 id=\"编写爬虫\"><a class=\"anchor\" href=\"#编写爬虫\">#</a> 编写爬虫</h1>\n<p>本文目标是爬取 Shopify 的 app 信息</p>\n<ol>\n<li>\n<p>目标网址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHBzLnNob3BpZnkuY29tL2Jyb3dzZS9hbGw/cGFnZT0x\">https://apps.shopify.com/browse/all?page=1</span><br />\n<img data-src=\"5.png\" alt=\"目标网址\" /></p>\n</li>\n<li>\n<p>新建爬虫<br />\n<img data-src=\"6.png\" alt=\"目标网址\" /></p>\n</li>\n<li>\n<p>将下面代码复制进右边编辑栏</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/env python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pyspider<span class=\"token punctuation\">.</span>libs<span class=\"token punctuation\">.</span>base_handler <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> pyspider<span class=\"token punctuation\">.</span>database<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>mysql <span class=\"token keyword\">import</span> SQL</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">(</span>BaseHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    crawl_config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>base_url <span class=\"token operator\">=</span> <span class=\"token string\">'https://apps.shopify.com/browse/all?page=%s'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>page_num <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>total_num <span class=\"token operator\">=</span> <span class=\"token number\">202</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@every</span><span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span><span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">on_start</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">while</span> self<span class=\"token punctuation\">.</span>page_num <span class=\"token operator\">&lt;=</span> self<span class=\"token punctuation\">.</span>total_num<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            url <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>base_url <span class=\"token operator\">%</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>page_num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            self<span class=\"token punctuation\">.</span>crawl<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>index_page<span class=\"token punctuation\">,</span>validate_cert<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            self<span class=\"token punctuation\">.</span>page_num <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@config</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">=</span><span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">index_page</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>doc<span class=\"token punctuation\">(</span><span class=\"token string\">'.grid--equal-height > div > div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>             dic<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                 <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> each<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                 <span class=\"token string\">\"developer\"</span><span class=\"token punctuation\">:</span> each<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'div[class=\"ui-app-card__developer-name\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                 <span class=\"token string\">\"description\"</span><span class=\"token punctuation\">:</span> each<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'p[class=\"ui-app-card__details\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                 <span class=\"token string\">\"rate\"</span><span class=\"token punctuation\">:</span> each<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'span[class=\"ui-star-rating__rating\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                 <span class=\"token string\">'reviews'</span><span class=\"token punctuation\">:</span> each<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'span[class=\"ui-review-count-summary\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                 <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">:</span> each<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'div[class=\"ui-app-card__pricing\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>             <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>             data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>dic<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">on_result</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        sql <span class=\"token operator\">=</span> SQL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">if</span> result<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                sql<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token string\">'shopify'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">**</span>data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>点击 save 和 run 后，会出现 202 条 follow，这是因为在代码中设置了从第一页爬取到 202 页，在这个页面能帮我们看到爬虫将要爬取的链接，点击每条 follow 的箭头则会启动那一个 url，想要一次爬取 202 条则需要在首页里面执行爬虫</p>\n</li>\n<li>\n<p>保存数据</p>\n<p>安装 MySQL，并创建表 shopify</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token punctuation\">`</span>shopify<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token punctuation\">`</span>title<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">`</span>developer<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">`</span>description<span class=\"token punctuation\">`</span> <span class=\"token keyword\">text</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">`</span>rate<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">`</span>reviews<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">`</span>price<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">4817</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1teXNxbC1sbjJoeTFxZjIzYWk5bS5weQ==\">创建文件 mysql.py</span></p>\n<p>写入下面代码，修改数据库连接相关信息</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/env python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\">#-*- encoding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">from</span> six <span class=\"token keyword\">import</span> itervalues</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token keyword\">import</span> pymysql</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SQL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     <span class=\"token comment\">#数据库初始化</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token comment\">#数据库连接相关信息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         hosts    <span class=\"token operator\">=</span> <span class=\"token string\">'localhost'</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         username <span class=\"token operator\">=</span> <span class=\"token string\">'root'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         password <span class=\"token operator\">=</span> <span class=\"token string\">'6113535'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         database <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         charsets <span class=\"token operator\">=</span> <span class=\"token string\">'utf8'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>         self<span class=\"token punctuation\">.</span>connection <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>         <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>             self<span class=\"token punctuation\">.</span>conn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host <span class=\"token operator\">=</span> hosts<span class=\"token punctuation\">,</span>user <span class=\"token operator\">=</span> username<span class=\"token punctuation\">,</span>passwd <span class=\"token operator\">=</span> password<span class=\"token punctuation\">,</span>db <span class=\"token operator\">=</span> database<span class=\"token punctuation\">,</span>charset <span class=\"token operator\">=</span> charsets<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>             self<span class=\"token punctuation\">.</span>cursor <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>             self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"set names \"</span><span class=\"token operator\">+</span>charsets<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>             self<span class=\"token punctuation\">.</span>connection <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>         <span class=\"token keyword\">except</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cannot Connect To Mysql!/n\"</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>     <span class=\"token keyword\">def</span> <span class=\"token function\">escape</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token string\">'%s'</span> <span class=\"token operator\">%</span> string</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     <span class=\"token comment\">#插入数据到数据库   </span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     <span class=\"token keyword\">def</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>tablename<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span><span class=\"token operator\">**</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>         <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>connection<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>             tablename <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>escape<span class=\"token punctuation\">(</span>tablename<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>             <span class=\"token keyword\">if</span> values<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                 _keys <span class=\"token operator\">=</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>escape<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> values<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                 _values <span class=\"token operator\">=</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'%s'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                 sql_query <span class=\"token operator\">=</span> <span class=\"token string\">\"insert into %s (%s) values (%s)\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>tablename<span class=\"token punctuation\">,</span>_keys<span class=\"token punctuation\">,</span>_values<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>             <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                 sql_query <span class=\"token operator\">=</span> <span class=\"token string\">\"replace into %s default values\"</span> <span class=\"token operator\">%</span> tablename</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>             <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                 <span class=\"token keyword\">if</span> values<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                     self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql_query<span class=\"token punctuation\">,</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>itervalues<span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                 <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>       </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                     self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql_query<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                 self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                 <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>             <span class=\"token keyword\">except</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                 <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"An Error Occured: \"</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                 <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr></table></figure><p>将文件放到当前环境的 pyspider\\database\\mysql 文件夹下<br />\n<img data-src=\"8.png\" alt=\"mysql\" /><br />\n 爬虫代码中的用 return 返回了数据后就会自动执行 on_result () 函数，这个函数就是调用该文件来把数据保存到 MySQL</p>\n</li>\n<li>\n<p>执行爬虫</p>\n</li>\n</ol>\n<p>回到首页，将爬虫的状态设为 running，然后点击运行<br />\n<img data-src=\"9.png\" alt=\"执行爬虫\" /><br />\n然后就会看到后台飞快的执行，执行完成后可以看见 process 的 all 显示为 204（有两次是测试）</p>\n",
            "tags": [
                "计算机科学",
                "网络爬虫",
                "python",
                "pyspider"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/IT%E8%BF%90%E7%BB%B4/MySQL-%E5%9C%A8%E5%90%84%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/IT%E8%BF%90%E7%BB%B4/MySQL-%E5%9C%A8%E5%90%84%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85/",
            "title": "MySQL-在各系统下安装",
            "date_published": "2021-04-17T02:09:00.000Z",
            "content_html": "<blockquote>\n<p>MySQL 是一个功能齐全的关系数据库管理系统（RDBMS），可以与 Oracle DB 和 Microsoft 的 SQL Server 竞争。MySQL 由瑞典公司 MySQL AB 赞助，该公司由 Oracle 公司拥有。</p>\n</blockquote>\n<h1 id=\"windows\"><a class=\"anchor\" href=\"#windows\">#</a> Windows</h1>\n<ol>\n<li>下载 mysql，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv\">点击进入下载</span><br />\n第一个是在线下载版，第二个是安装版<br />\n我选择第二个<br />\n<img data-src=\"1.png\" alt=\"image\" /></li>\n<li>选择 No thanks 跳过登录<br />\n<img data-src=\"2.png\" alt=\"image\" /></li>\n<li>下载完成后打开安装包<br />\n根据需求选择，这里选择 develop<br />\n<img data-src=\"3.png\" alt=\"image\" /></li>\n<li>next<br />\n<img data-src=\"4.png\" alt=\"image\" /></li>\n<li>安装<br />\n<img data-src=\"5.png\" alt=\"image\" /></li>\n<li>安装完成<br />\n<img data-src=\"6.png\" alt=\"image\" /></li>\n<li>next<br />\n<img data-src=\"7.png\" alt=\"image\" /></li>\n<li>选择高可用，这里选择单机模式<br />\n<img data-src=\"8.png\" alt=\"image\" /></li>\n<li>选择 mysql 端口，这里选择默认的 3306<br />\n<img data-src=\"9.png\" alt=\"image\" /></li>\n<li>选择密码认证方式，这里选择默认的第一个选择<br />\n<img data-src=\"10.png\" alt=\"image\" /></li>\n<li>输入数据库管理员密码<br />\n<img data-src=\"11.png\" alt=\"image\" /></li>\n<li>是否开机启动<br />\n<img data-src=\"12.png\" alt=\"image\" /></li>\n<li>开始自动 mysql<br />\n<img data-src=\"13.png\" alt=\"image\" /></li>\n<li>完成配置<br />\n<img data-src=\"14.png\" alt=\"image\" /></li>\n<li>next<br />\n<img data-src=\"15.png\" alt=\"image\" /></li>\n<li>是否启动 boostrap，这里直接 next<br />\n<img data-src=\"16.png\" alt=\"image\" /></li>\n<li>连接数据库，输入之前输入的密码，点击 check<br />\n<img data-src=\"17.png\" alt=\"image\" /></li>\n<li>执行<br />\n<img data-src=\"18.png\" alt=\"image\" /></li>\n<li>完成<br />\n<img data-src=\"19.png\" alt=\"image\" /></li>\n<li>下一步<br />\n<img data-src=\"20.png\" alt=\"image\" /></li>\n<li>将 mysql 添加到开始菜单<br />\n<img data-src=\"21.png\" alt=\"image\" /></li>\n<li>点击开始菜单，打开 mysql 客户端<br />\n<img data-src=\"22.png\" alt=\"image\" /></li>\n<li>输入密码，若连接成功则安装完成<br />\n<img data-src=\"23.png\" alt=\"image\" /></li>\n</ol>\n<h1 id=\"linux\"><a class=\"anchor\" href=\"#linux\">#</a> Linux</h1>\n<h2 id=\"centos\"><a class=\"anchor\" href=\"#centos\">#</a> CentOS</h2>\n<ol>\n<li>下载 mysql repo 源，否则 yum 没有 mysql-server 的源</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">wget</span> http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</pre></td></tr></table></figure><ol start=\"2\">\n<li>安装 mysql repo 源</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">rpm</span> -ivh mysql-community-release-el7-5.noarch.rpm</pre></td></tr></table></figure><ol start=\"3\">\n<li>安装 Mysql</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ yum <span class=\"token function\">install</span> -y mysql-server mysql mysql-deve</pre></td></tr></table></figure><ol start=\"4\">\n<li>运行 Mysql 服务，第一次运行</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">service</span> mysqld start</pre></td></tr></table></figure><ol start=\"5\">\n<li>重置密码</li>\n</ol>\n<pre><code>$ mysql -u root\n&gt;use mysql;\n&gt;update user set password=password(&quot;123456&quot;) where user=&quot;root&quot;;\n&gt;exit;\n</code></pre>\n<h2 id=\"ubuntu\"><a class=\"anchor\" href=\"#ubuntu\">#</a> Ubuntu</h2>\n<ol>\n<li>依次执行下面命令<br />\n安装过程会提示设置 mysql root 用户的密码，设置完成后等待自动安装即可</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> mysql-server</pre></td></tr></table></figure><ol start=\"2\">\n<li>检查是否安装完成</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">netstat</span> -tap <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> mysql</pre></td></tr></table></figure><h1 id=\"macos\"><a class=\"anchor\" href=\"#macos\">#</a> MacOS</h1>\n<p>留坑</p>\n",
            "tags": [
                "计算机科学",
                "IT运维",
                "devops",
                "mysql"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/",
            "title": "Redis-基本概念与解决方案",
            "date_published": "2021-04-17T01:03:00.000Z",
            "content_html": "<h1 id=\"什么是redis\"><a class=\"anchor\" href=\"#什么是redis\">#</a> 什么是 Redis</h1>\n<p>Redis 是一个开源的使用 ANSI C 语言编写、遵守 BSD 协议、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库，并提供多种语言的 API 的非关系型数据库。</p>\n<p>传统数据库遵循 ACID 规则。而 Nosql（Not Only SQL 的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称） 一般为分布式而分布式一般遵循 CAP 定理。</p>\n<p>redis 底层实际上是个 hashtable</p>\n<details class=\"info\"><summary>CAP定理</summary><div>\n<div class=\"note info\">\n<p>一个分布式系统不可能同时满足以下三种，一致性（C:Consistency）, 可用性（A:Available）, 分区容错性（P:Partition Tolerance）. 在此 ZooKeeper 保证的是 CP，ZooKeeper 不能保证每次服务请求的可用性，在极端环境下，ZooKeeper 可能会丢弃一些请求，消费者程序需要重新请求才能获得结果。另外在进行 leader 选举时集群都是不可用，所以说，ZooKeeper 不能保证服务可用性。（Base 理论 CA 强一致性和最终一致性）</p>\n</div>\n</div></details>\n<h1 id=\"redis的应用场景\"><a class=\"anchor\" href=\"#redis的应用场景\">#</a> Redis 的应用场景</h1>\n<ul>\n<li>消息队列</li>\n<li>缓存</li>\n<li>共享 session</li>\n<li>分布式锁</li>\n</ul>\n<h1 id=\"单线程的redis为什么快\"><a class=\"anchor\" href=\"#单线程的redis为什么快\">#</a> 单线程的 Redis 为什么快</h1>\n<ul>\n<li>合理高效的数据结构</li>\n<li>基于内存操作</li>\n<li>采用了非阻塞 I/O 多路复用机制</li>\n<li>单线程操作，避免了上下文的切换</li>\n</ul>\n<details class=\"info\"><summary>I/O机制</summary><div>\n<div class=\"note info\">\n<ol>\n<li>阻塞 I/O<br />\n 首先，要从你常用的 IO 操作谈起，比如 read 和 write，通常 IO 操作都是阻塞 I/O 的，也就是说当你调用 read 时，如果没有数据收到，那么线程或者进程就会被挂起，直到收到数据。阻塞的意思，就是一直等着。阻塞 I/O 就是等着数据过来，进行读写操作。应用的函数进行调用，但是内核一直没有返回，就一直等着。应用的函数长时间处于等待结果的状态，我们就称为阻塞 I/O。每个应用都得等着，每个应用都在等着，浪费啊！很像现实中的情况。大家都不干活，等着数据过来，过来工作一下，没有的话继续等着</li>\n<li>非阻塞 I/O<br />\n 非阻塞 IO 很简单，通过 fcntl（POSIX）或 ioctl（Unix）设为非阻塞模式，这时，当你调用 read 时，如果有数据收到，就返回数据，如果没有数据收到，就立刻返回一个错误，如 EWOULDBLOCK。这样是不会阻塞线程了，但是你还是要不断的轮询来读取或写入。相当于你去查看有没有数据，告诉你没有，过一会再来吧！应用过一会再来问，有没有数据？没有数据，会有一个返回。但是依旧很不好。应用必须得过一会来一下，问问内核有木有数据啊。这和现实很像啊！好多情况都得去某些地方问问好了没有？木有，明天再过来。明天，好了木有？木有，后天再过来。。。。。忙碌的应用。。。。</li>\n<li>I/O 多路复用<br />\n多路复用是指使用一个线程来检查多个文件描述符（Socket）的就绪状态，比如调用 select 和 poll 函数，传入多个文件描述符（FileDescription，简称 FD），如果有一个文件描述符（FileDescription）就绪，则返回，否则阻塞直到超时。得到就绪状态后进行真正的操作可以在同一个线程里执行，也可以启动线程执行（比如使用线程池）。虾米意思？就是派一个代表，同时监听多个文件描述符是否有数据到来。等着等着，如有有数据，就告诉某某你的数据来啦！赶紧来处理吧。有没有很感动，一个人待着，帮了很多人。医院的黄牛，一个人排队，大家只要把钱给它，它就会把号给需要的人，开个玩笑。。。。</li>\n</ol>\n</div>\n</div></details>\n<h1 id=\"redis的数据结构及使用场景\"><a class=\"anchor\" href=\"#redis的数据结构及使用场景\">#</a> Redis 的数据结构及使用场景</h1>\n<ol>\n<li>String（基本类型）<br />\n字符串：字符串类型是 Redis 最基础的数据结构，首先键都是字符串类型，而且 其他几种数据结构都是在字符串类型基础上构建的，我们常使用的 set key value 命令就是字符串。常用在缓存、计数、共享 Session、限速等</li>\n<li>Hash（基本类型）<br />\n哈希：在 Redis 中，哈希类型是指键值本身又是一个键值对结构，哈希可以用来存放用户信息，比如实现购物车</li>\n<li>List（基本类型）<br />\n列表类型是用来存储多个有序的字符串。可以做简单的消息队列的功能。</li>\n<li>Set（基本类型）<br />\n集合类型也是用来保存多个的字符串元素，但和列表类型不一 样的是，集合中不允许有重复元素，并且集合中的元素是无序的，不能通过索引下标获取元素。利用 Set 的交集、并集、差集等操作，可以计算共同喜好，全部的喜好，自己独有的喜好等功能。</li>\n<li>Sorted Set（基本类型）<br />\n有序集合多了一个权重参数 Score，集合中的元素能够按 Score 进行排列。可以做排行榜应用，取 TOP N 操作。</li>\n<li>Bitmap<br />\n 位图是支持按 bit 位来存储信息，可以用来实现 布隆过滤器（BloomFilter）和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2N0d2N0dy9hcnRpY2xlL2RldGFpbHMvMTA1MDEzODE3\">统计某用户登录天数</span></li>\n</ol>\n<h1 id=\"redis的过期策略\"><a class=\"anchor\" href=\"#redis的过期策略\">#</a> Redis 的过期策略</h1>\n<p><ins>Redis 过期策略采用定时删除 + 惰性删除策略</ins></p>\n<ul>\n<li>\n<p>定时删除<br />\n Redis 启用一个定时器定时监视所有的 key，判断 key 是否过期，过期则将其删除。这种策略可以保证过期的 key 全部被删除，但是每次都需要遍历内存中的数据，非常消耗 cpu 的资源，并且当 key 已过期，而定时器还处于未唤醒状态时，key 仍可以使用</p>\n</li>\n<li>\n<p>惰性删除<br />\n在获取 key 时，先判断 key 是否已经过期，如已经过期则删除。这种策略有一个缺点，就是如果 key 一直没被使用，则会一直保存在内存中</p>\n</li>\n</ul>\n<p>这两种策略天然互补，当两种策略结合起来用后，定时删除策略就会发生变化，定时删除将不再扫描内存里全部的数据，而是抽取一部分 key 进行检查，这样就降低了 cpu 资源的消耗，惰性删除策略互补了未抽取检查的 key，基本满足了所有的要求。但是有时候就是那么巧，既没有被定时器抽取，也没有被使用，这些数据该如何从内存中消息呢？没关系，Redis 还有内存淘汰机制，当内存不够用时，将会触发内存淘汰机制</p>\n<h1 id=\"redis内存淘汰机制\"><a class=\"anchor\" href=\"#redis内存淘汰机制\">#</a> Redis 内存淘汰机制</h1>\n<p>内存淘汰机制有以下几种：</p>\n<ul>\n<li>当内存不足以容纳新写入数据时，新写入操作会报错。（Redis 默认策略）</li>\n<li>当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的 Key。（LRU 推荐使用）</li>\n<li>当内存不足以容纳新写入数据时，在键空间中，随机移除某个 Key。</li>\n<li>当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的 Key。这种情况一般是把 Redis 既当缓存，又做持久化存储的时候才用。</li>\n<li>当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个 Key。</li>\n<li>当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的 Key 优先移除。</li>\n</ul>\n<p>Redis 的 LRU (Least Recently Used) 具体实现:<br />\n 传统的 LRU 是使用栈的形式，每次都将最新使用的移入栈顶，但是用栈的形式会导致执行 select * 的时候大量非热点数据占领头部数据，所以需要改进。Redis 每次按 key 获取一个值的时候，都会更新 value 中的 lru 字段为当前秒级别的时间戳。Redis 初始的实现算法很简单，随机从 dict 中取出五个 key, 淘汰一个 lru 字段值最小的。在 3.0 的时候，又改进了一版算法，首先第一次随机选取的 key 都会放入一个 pool 中 (pool 的大小为 16),pool 中的 key 是按 lru 大小顺序排列的。接下来每次随机选取的 keylru 值必须小于 pool 中最小的 lru 才会继续放入，直到将 pool 放满。放满之后，每次如果有新的 key 需要放入，需要将 pool 中 lru 最大的一个 key 取出。淘汰的时候，直接从 pool 中选取一个 lru 最小的值然后将其淘汰。</p>\n<h1 id=\"redis持久化机制\"><a class=\"anchor\" href=\"#redis持久化机制\">#</a> Redis 持久化机制</h1>\n<p>Redis 为了保证效率，数据缓存在了内存中，但是会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件中，以保证数据的持久化。Redis 有两种持久化机制：RDB (Redis DataBase) 和 AOF (Append Only File)</p>\n<ul>\n<li>\n<p>RDB<br />\n 快照形式是直接把内存中的数据保存到一个 dump 的文件中，定时保存，保存策略。当 Redis 需要做持久化时，Redis 会 fork 一个子进程，子进程将数据写到磁盘上一个临时 RDB 文件中。当子进程完成写临时文件后，将原来的 RDB 替换掉。</p>\n</li>\n<li>\n<p>AOF<br />\n 把所有的对 Redis 的服务器进行修改的命令都存到一个文件里，命令的集合。使用 AOF 做持久化，每一个写命令都通过 write 函数追加到 appendonly.aof 中。aof 的默认策略是每秒钟 fsync 一次，在这种配置下，就算发生故障停机，也最多丢失一秒钟的数据。缺点是对于相同的数据集来说，AOF 的文件体积通常要大于 RDB 文件的体积。根据所使用的 fsync 策略，AOF 的速度可能会慢于 RDB。<br />\nAOD 写入保存：<br />\nWRITE：根据条件，将 aof_buf 中的缓存写入到 AOF 文件<br />\n SAVE：根据条件，调用 fsync 或 fdatasync 函数，将 AOF 文件保存到磁盘中<br />\n存储结构:<br />\n 内容是 redis 通讯协议 (RESP) 格式的命令文本存储。</p>\n</li>\n<li>\n<p>比较</p>\n<ol>\n<li>aof 文件比 rdb 更新频率高，优先使用 aof 还原数据。</li>\n<li>aof 比 rdb 更安全也更大</li>\n<li>rdb 性能比 aof 好</li>\n<li>如果两个都配了优先加载 AOF</li>\n</ol>\n</li>\n</ul>\n<p>Redis 默认是快照 RDB 的持久化方式。对于 redis 服务重启，会优先加载 AOF,AOF 没找到的话再找 RDB，因为 AOF 文件的数据要全于 RDB。对于主从同步来说，主从刚刚连接的时候，进行全量同步（RDB）；全同步结束后，进行增量同步 (AOF)</p>\n<h1 id=\"redis的resp协议\"><a class=\"anchor\" href=\"#redis的resp协议\">#</a> Redis 的 RESP 协议</h1>\n<p>该协议是用于与 Redis 服务器通信的，用的较多的是 Redis-cli 通过 pipe 与 Redis 服务器联系；<br />\n协议如下：</p>\n<ol>\n<li>客户端以规定格式的形式发送命令给服务器；</li>\n<li>服务器在执行最后一条命令后，返回结果。</li>\n</ol>\n<p>客户端发送命令的格式 (类型)：5 种类型</p>\n<ul>\n<li>简单字符串 Simple Strings, 以 &quot;+&quot; 加号 开头</li>\n<li>错误 Errors, 以 &quot;-&quot; 减号 开头</li>\n<li>整数型 Integer， 以 &quot;:&quot; 冒号开头</li>\n<li>大字符串类型 Bulk Strings, 以 &quot;$&quot; 美元符号开头，长度限制 512M</li>\n<li>数组类型 Arrays，以 &quot;*&quot; 星号开头</li>\n</ul>\n<h1 id=\"redis的管道pipeline\"><a class=\"anchor\" href=\"#redis的管道pipeline\">#</a> Redis 的管道 pipeline</h1>\n<p>对于单线程阻塞式的 Redis，Pipeline 可以满足批量的操作，把多个命令连续的发送给 Redis Server，然后一一解析响应结果。Pipelining 可以提高批量处理性能，提升的原因主要是 TCP 连接中减少了 “交互往返” 的时间。pipeline 底层是通过把所有的操作封装成流，redis 有定义自己的出入输出流。在 sync () 方法执行操作，每次请求放在队列里面，解析响应包。</p>\n<h1 id=\"redis常见架构\"><a class=\"anchor\" href=\"#redis常见架构\">#</a> Redis 常见架构</h1>\n<ul>\n<li>\n<p>单机版<br />\n<img data-src=\"1.png\" alt=\"单机版\" /><br />\n特点：简单</p>\n</li>\n<li>\n<p>主从复制<br />\n<img data-src=\"2.jpeg\" alt=\"主从复制\" /><br />\n Redis 的复制（replication）功能允许用户根据一个 Redis 服务器来创建任意多个该服务器的复制品，其中被复制的服务器为主服务器（master），而通过复制创建出来的服务器复制品则为从服务器（slave）。 只要主从服务器之间的网络连接正常，主从服务器两者会具有相同的数据，主服务器就会一直将发生在自己身上的数据更新同步 给从服务器，从而一直保证主从服务器的数据相同。<br />\n特点：</p>\n<ol>\n<li>master/slave 角色</li>\n<li>master/slave 数据相同</li>\n<li>降低 master 读压力在转交从库</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>无法保证高可用</li>\n<li>没有解决 master 写的压力</li>\n</ol>\n</li>\n<li>\n<p>哨兵模式<br />\n<img data-src=\"3.jpeg\" alt=\"哨兵模式\" /><br />\n Redis sentinel 是一个分布式系统中监控 redis 主从服务器，并在主服务器下线时自动进行故障转移。其中三个特性：<br />\n监控（Monitoring）： Sentinel 会不断地检查你的主服务器和从服务器是否运作正常。<br />\n提醒（Notification）： 当被监控的某个 Redis 服务器出现问题时， Sentinel 可以通过 API 向管理员或者其他应用程序发送通知。<br />\n自动故障迁移（Automatic failover）： 当一个主服务器不能正常工作时， Sentinel 会开始一次自动故障迁移操作。<br />\n特点：</p>\n<ol>\n<li>保证高可用</li>\n<li>监控各个节点</li>\n<li>自动故障迁移</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>主从模式，切换需要时间丢数据</li>\n<li>没有解决 master 写的压力</li>\n</ol>\n</li>\n<li>\n<p>集群（proxy 型）<br />\n<img data-src=\"4.jpeg\" alt=\"集群（proxy 型）\" /><br />\nTwemproxy 是一个 Twitter 开源的一个 redis 和 memcache 快速 / 轻量级代理服务器；Twemproxy 是一个快速的单线程代理程序，支持 Memcached ASCII 协议和 redis 协议。<br />\n特点：</p>\n<ol>\n<li>多种 hash 算法：MD5、CRC16、CRC32、CRC32a、hsieh、murmur、Jenkins</li>\n<li>支持失败节点自动删除</li>\n<li>后端 Sharding 分片逻辑对业务透明，业务方的读写方式和操作单个 Redis 一致</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>增加了新的 proxy，需要维护其高可用</li>\n<li>failover 逻辑需要自己实现，其本身不能支持故障的自动转移可扩展性差，进行扩缩容都需要手动干预</li>\n</ol>\n</li>\n<li>\n<p>集群（直连型）<br />\n<img data-src=\"4.jpeg\" alt=\"集群（proxy 型）\" /><br />\n从 redis 3.0 之后版本支持 redis-cluster 集群，Redis-Cluster 采用无中心结构，每个节点保存数据和整个集群状态，每个节点都和其他所有节点连接。<br />\n特点：</p>\n<ol>\n<li>无中心架构（不存在哪个节点影响性能瓶颈），少了 proxy 层</li>\n<li>数据按照 slot 存储分布在多个节点，节点间数据共享，可动态调整数据分布</li>\n<li>可扩展性，可线性扩展到 1000 个节点，节点可动态添加或删除</li>\n<li>高可用性，部分节点不可用时，集群仍可用。通过增加 Slave 做备份数据副本</li>\n<li>实现故障自动 failover，节点之间通过 gossip 协议交换状态信息，用投票机制完成 Slave 到 Master 的角色提升。</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>资源隔离性较差，容易出现相互影响的情况。</li>\n<li>数据通过异步复制，不保证数据的强一致性</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"redis常见问题解决方案\"><a class=\"anchor\" href=\"#redis常见问题解决方案\">#</a> Redis 常见问题解决方案</h1>\n<h2 id=\"redis与mysql双写一致性方案\"><a class=\"anchor\" href=\"#redis与mysql双写一致性方案\">#</a> Redis 与 Mysql 双写一致性方案</h2>\n<p>先更新数据库，再删缓存。数据库的读操作的速度远快于写操作的，所以脏数据很难出现。可以对异步延时删除策略，保证读请求完成以后，再进行删除操作。</p>\n<h2 id=\"redis并发竞争key的解决方案\"><a class=\"anchor\" href=\"#redis并发竞争key的解决方案\">#</a> Redis 并发竞争 key 的解决方案</h2>\n<ul>\n<li>分布式锁 + 时间戳</li>\n<li>利用消息队列，把并行操作变成串行操作</li>\n</ul>\n<h2 id=\"如何解决redis缓存穿透问题\"><a class=\"anchor\" href=\"#如何解决redis缓存穿透问题\">#</a> 如何解决 Redis 缓存穿透问题</h2>\n<p>Redis 缓存穿透指查询的 key 缓存中没有，数据库也没有，每次针对此 key 的请求从缓存获取不到数据，请求就到数据库获取数据，从而可能压垮数据库。比如用一个不存在的用户 id 获取用户信息，不论缓存还是数据库都没有，若黑客利用此漏洞进行攻击可能压垮数据库<br />\n解决方案：</p>\n<ul>\n<li>在接口做校验</li>\n<li>存 null 值</li>\n<li>布隆过滤器：将所有可能的值映射到布隆过滤器中，查询时先判断 key 是否存在布隆过滤器中，存在才往下执行，如果不存在则直接返回。布隆过滤器将值进行多次哈希 bit 存储，布隆过滤器说某个元素在，可能会被误判。布隆过滤器说某个元素不在，那么一定不在。</li>\n</ul>\n<h2 id=\"如何解决redis缓存击穿问题\"><a class=\"anchor\" href=\"#如何解决redis缓存击穿问题\">#</a> 如何解决 Redis 缓存击穿问题</h2>\n<p>Redis 缓存击穿指查询的 key 缓存中不存在（通常由于失效而不存在），大量请求直接到数据库查询，压垮数据库。</p>\n<p>解决方案：</p>\n<ul>\n<li>互斥锁锁：业界比较常用的做法，是使用 mutex。简单的说当缓存失效时，不是立刻去查询数据库，而是先去争夺锁，</li>\n</ul>\n<h2 id=\"如何解决redis缓存雪崩\"><a class=\"anchor\" href=\"#如何解决redis缓存雪崩\">#</a> 如何解决 Redis 缓存雪崩</h2>\n<p>Redis 缓存雪崩指大量的 key 在同一时间失效，导致大量请求直接去数据库查询数据。缓存雪崩可以造成缓存服务器宕机，高峰期缓存失效，热点缓存失效。</p>\n<p>解决方案：</p>\n<ul>\n<li>给失效时间添加随机数</li>\n<li>热点数据设置永不失效</li>\n<li>缓存服务采用高可用架构</li>\n<li>建立监控系统，提前预知雪崩</li>\n</ul>\n<h1 id=\"redis和memcached的区别\"><a class=\"anchor\" href=\"#redis和memcached的区别\">#</a> Redis 和 memcached 的区别</h1>\n<ul>\n<li>存储方式<br />\n memcache 会把数据全部存在内存之中，断电后会挂掉，数据不能超过内存大小。redis 有部分数据存在硬盘上，这样能保证数据的持久性。</li>\n<li>数据支持类型<br />\n memcache 对数据类型的支持简单，只支持简单的 key-value，，而 redis 支持五种数据类型</li>\n<li>底层模型<br />\n它们之间底层实现方式以及与客户端之间通信的应用协议不一样。redis 直接自己构建了 VM 机制，因为一般的系统调用系统函数的话，会浪费一定的时间去移动和请求。</li>\n<li>value 的大小<br />\n redis 可以达到 1GB，而 memcache 只有 1MB。</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "数据库",
                "redis"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Superset-%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Superset-%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/",
            "title": "Superset-二次开发指南",
            "date_published": "2021-04-16T06:41:00.000Z",
            "content_html": "<h1 id=\"操作系统\"><a class=\"anchor\" href=\"#操作系统\">#</a> 操作系统</h1>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\">  Windows</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\">  MAC</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\">  Linux</label></li>\n</ul>\n<h1 id=\"软件依赖\"><a class=\"anchor\" href=\"#软件依赖\">#</a> 软件依赖</h1>\n<p><span class=\"label info\">^ Lastest</span> <span class=\"label info\">~ minimum</span></p>\n<ul>\n<li>Python@3.6^</li>\n<li>Pip@~</li>\n<li>node.js@~</li>\n</ul>\n<h1 id=\"实验环境\"><a class=\"anchor\" href=\"#实验环境\">#</a> 实验环境</h1>\n<ul>\n<li>Windows10</li>\n<li>python@3.68</li>\n<li>pip@19.2.3</li>\n<li>setuptools@41.4.0</li>\n<li>nodejs@12.15.0</li>\n<li>npm@6.134</li>\n<li>superset@0.35</li>\n</ul>\n<div class=\"note warning\">\n<p>superset 版本变更比较大，本指南适用于 0.35 版本，其他版本不一定适用</p>\n</div>\n<h1 id=\"搭建开发环境\"><a class=\"anchor\" href=\"#搭建开发环境\">#</a> 搭建开发环境</h1>\n<ol>\n<li>从 github 上克隆一份源码，或者从别的压缩包解压一份源码 git 命令</li>\n</ol>\n<pre><code>git clone https://github.com/apache/incubator-superset.git\n</code></pre>\n<ol start=\"2\">\n<li>配置 pip 国内源</li>\n</ol>\n<pre><code>pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre>\n<ol start=\"3\">\n<li>\n<p>安装 C++ buildTools, 下载地址为 (这个安装包 4g 大小，如果运行环境  搭建成功可以不安装)</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9NjkxMTI2\">点击下载</span></p>\n</li>\n<li>\n<p>创建虚拟环境，参考上面，已经有就跳过</p>\n</li>\n<li>\n<p>安装依赖</p>\n</li>\n</ol>\n<pre><code>pip install -r requirements-dev.txt\n</code></pre>\n<ol start=\"6\">\n<li>制作软连接</li>\n</ol>\n<div class=\"note warning\">\n<p>因为下载下来的源代码是 superset\\static\\assets 这个软连接可以在 linux 或者 Mac 上正常工作，但是在 windows 下不能正常工作，不是 windows 环境可以跳过</p>\n</div>\n<div class=\"note info\">\n<p>yourpath 替换成你的路径<br />\n运行前先删除 yourpath\\incubator-superset\\superset\\static\\ 下的 assets 文件</p>\n</div>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mklink /J <span class=\"token string\">\"yourpath\\incubator-superset\\superset\\static<span class=\"token entity\" title=\"\\a\">\\a</span>ssets\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"yourpath\\incubator-superset\\superset<span class=\"token entity\" title=\"\\a\">\\a</span>ssets\"</span></pre></td></tr></table></figure><ol start=\"7\">\n<li>安装 superset 开发者模式</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> -e <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><ol start=\"8\">\n<li>创建管理员账户，记住用户名跟密码，如果已经创建会报主键重复的错误，直接下一步</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fabmanager create-admin --app superset</pre></td></tr></table></figure><ol start=\"9\">\n<li>进入 superset/bin 目录下，初始化数据库</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python superset db upgrade</pre></td></tr></table></figure><ol start=\"10\">\n<li>应用初始化，后端配置完成</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python superset init</pre></td></tr></table></figure><ol start=\"11\">\n<li>前端配置，进入 superset/assets 目录下，安装依赖</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><p>❌ 如果失败，请尝试</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cnpm <span class=\"token function\">install</span></pre></td></tr></table></figure><p>❌ 如果都失败，删掉 node_model 文件夹后请尝试</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> clean cache --force</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cnpm <span class=\"token function\">install</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>13.8 版本的 nodejs 安装过程会出现如下错误，建议换成 12.15 版本<br />\n<img data-src=\"1.png\" alt=\" \" /></p>\n</div>\n<ol start=\"12\">\n<li>执行下面代码，无报错则前端环境配置完成</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> run dev</pre></td></tr></table></figure><p>⭕️ 若无报错，不要关闭，dev 是指开发模式，会自动编译你修改过的代码<br />\n<img data-src=\"2.png\" alt=\" \" /></p>\n<p>❌ 如果出现下面错误，执行<br />\n<img data-src=\"3.png\" alt=\" \" /></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @babel/runtime-corejs3</pre></td></tr></table></figure><ol start=\"13\">\n<li>新建终端，进入目录 yourpath\\incubator-superset\\superset\\bin</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python -m  flask run -p <span class=\"token number\">8088</span> --with-threads --reload --debugger</pre></td></tr></table></figure><ol start=\"14\">\n<li>打开网站 localhost:8088，如正常显示界面则搭建成功</li>\n<li>用相应的工具开发前后端即可，我个人习惯使用 Pycharm 开发 python，VSCode 开发前端</li>\n</ol>\n<h1 id=\"自定义jwt登录验证\"><a class=\"anchor\" href=\"#自定义jwt登录验证\">#</a> 自定义 JWT 登录验证</h1>\n<div class=\"note info\">\n<p>superset 自带 Flask-login 登录，但是实际项目需要使用无状态 token 登录，这时候我们修改下代码</p>\n</div>\n<h2 id=\"superset登录逻辑\"><a class=\"anchor\" href=\"#superset登录逻辑\">#</a> superset 登录逻辑</h2>\n<ol>\n<li>首先看到入口文件，superset/<strong>init</strong>.py 第 178 行，从第一行代码可以看到 superset 默认使用 SupersetSecurityManager 这个类作为登录验证类</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>custom_sm<span class=\"token operator\">=</span>app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"CUSTOM_SECURITY_MANAGER\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> SupersetSecurityManager</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">issubclass</span><span class=\"token punctuation\">(</span>custom_sm<span class=\"token punctuation\">,</span> SupersetSecurityManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token triple-quoted-string string\">\"\"\"Your CUSTOM_SECURITY_MANAGER must now </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\textend SupersetSecurityManager,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tnot FAB's security manager.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tSee [4565] in UPDATING.md</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\"\"\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">with</span> app<span class=\"token punctuation\">.</span>app_context<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tappbuilder <span class=\"token operator\">=</span> AppBuilder<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tapp<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tdb<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tbase_template<span class=\"token operator\">=</span><span class=\"token string\">\"superset/base.html\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tindexview<span class=\"token operator\">=</span>MyIndexView<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tsecurity_manager_class<span class=\"token operator\">=</span>custom_sm<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tupdate_perms<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\"># Run `superset init` to update FAB's perms</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>查看 SupersetSecurityManager 父类的父类 BaseSecurityManager<br />\n 第 609 行，初始化的是这个 self.authdbview 类，即 AuthDBView</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>auth_type <span class=\"token operator\">==</span> AUTH_DB<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tself<span class=\"token punctuation\">.</span>user_view <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>userdbmodelview</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tself<span class=\"token punctuation\">.</span>auth_view <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>authdbview<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>查看 AuthDBView 类，里面写了登录的方法，所以只要我们重写 SupersetSecurityManager 和 AuthDBView 类就可以了</li>\n</ol>\n<h2 id=\"编写自己的jwt验证\"><a class=\"anchor\" href=\"#编写自己的jwt验证\">#</a> 编写自己的 JWT 验证</h2>\n<ol>\n<li>\n<p>在 superset 下新建文件夹 customize<br />\n<img data-src=\"4.png\" alt=\"\" /></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1DdXN0b21BdXRoREJWaWV3LXJ3OTRhc3oyZi5weQ==\">新建 CustomAuthDBView.py</span></p>\n</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> jwt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> flask_appbuilder<span class=\"token punctuation\">.</span>baseviews <span class=\"token keyword\">import</span> expose</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> flask_appbuilder<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> AuthView</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> flask_appbuilder<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>forms <span class=\"token keyword\">import</span> LoginForm_db</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> flask_appbuilder<span class=\"token punctuation\">.</span>_compat <span class=\"token keyword\">import</span> as_unicode</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> flash<span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span>g</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> flask_login <span class=\"token keyword\">import</span> login_user</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomAuthDBView</span><span class=\"token punctuation\">(</span>AuthView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tlogin_template <span class=\"token operator\">=</span> <span class=\"token string\">\"appbuilder/general/security/login_db.html\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token decorator annotation punctuation\">@expose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login/\"</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\ttoken_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token string\">'expiry'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token string\">'user_name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'admin'</span>  <span class=\"token comment\"># 自定义的参数</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"============create===========\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tencoded_str <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>jwt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>token_dict<span class=\"token punctuation\">,</span> <span class=\"token string\">'secret'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tencoding<span class=\"token operator\">=</span><span class=\"token string\">'ascii'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>encoded_str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\ttoken <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> token <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==========decode=========\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\tjwt_decode <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> <span class=\"token string\">'secret'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\texpiry <span class=\"token operator\">=</span> jwt_decode<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"expiry\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\tuser_name <span class=\"token operator\">=</span> jwt_decode<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"user_name\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>expiry<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>user_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> expiry <span class=\"token operator\">>=</span> <span class=\"token number\">600</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t\tflash<span class=\"token punctuation\">(</span>as_unicode<span class=\"token punctuation\">(</span><span class=\"token string\">\"token失效\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"warning\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>appbuilder<span class=\"token punctuation\">.</span>get_url_for_login<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\tuser <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>appbuilder<span class=\"token punctuation\">.</span>sm<span class=\"token punctuation\">.</span>find_user<span class=\"token punctuation\">(</span>username<span class=\"token operator\">=</span>user_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> user<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\tlogin_user<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> remember<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>appbuilder<span class=\"token punctuation\">.</span>get_url_for_index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> g<span class=\"token punctuation\">.</span>user <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> g<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>is_authenticated<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>appbuilder<span class=\"token punctuation\">.</span>get_url_for_index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tform <span class=\"token operator\">=</span> LoginForm_db<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> form<span class=\"token punctuation\">.</span>validate_on_submit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\tuser <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>appbuilder<span class=\"token punctuation\">.</span>sm<span class=\"token punctuation\">.</span>auth_user_db<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\tform<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> form<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> user<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\tflash<span class=\"token punctuation\">(</span>as_unicode<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>invalid_login_message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">,</span> <span class=\"token string\">\"warning\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>appbuilder<span class=\"token punctuation\">.</span>get_url_for_login<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\tlogin_user<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> remember<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>appbuilder<span class=\"token punctuation\">.</span>get_url_for_index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>render_template<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\tself<span class=\"token punctuation\">.</span>login_template<span class=\"token punctuation\">,</span> title<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\tform<span class=\"token operator\">=</span>form<span class=\"token punctuation\">,</span> appbuilder<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>appbuilder</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1DdXN0b21TZWN1cml0eU1hbmFnZXItd204NGI3eDlmLnB5\">新建 CustomSecurityManager.py</span></li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> superset<span class=\"token punctuation\">.</span>customize<span class=\"token punctuation\">.</span>views<span class=\"token punctuation\">.</span>CustomAuthDBView <span class=\"token keyword\">import</span> CustomAuthDBView</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> superset<span class=\"token punctuation\">.</span>security <span class=\"token keyword\">import</span> SupersetSecurityManager</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomSecurityManager</span><span class=\"token punctuation\">(</span>SupersetSecurityManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    authdbview <span class=\"token operator\">=</span> CustomAuthDBView</pre></td></tr></table></figure><ol start=\"4\">\n<li>修改 /superset/config.py, 将</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CUSTOM_SECURITY_MANAGER <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><p>修改为</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> superset<span class=\"token punctuation\">.</span>customize<span class=\"token punctuation\">.</span>views<span class=\"token punctuation\">.</span>CustomSecurityManager <span class=\"token keyword\">import</span> CustomSecurityManager</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CUSTOM_SECURITY_MANAGER <span class=\"token operator\">=</span> CustomSecurityManager</pre></td></tr></table></figure><ol start=\"5\">\n<li>\n<p>启动服务，打开登陆界面.<span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMTo4MDg4L2xvZ2luLw==\">http://127.0.0.1:8088/login/</span><br />\n<img data-src=\"5.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>将打印的 token 作为参数，<span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMTo4MDg4L2xvZ2luLz90b2tlbj1leUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuZXlKbGVIQnBjbmtpT2pFMU9ERXhOekU1TkRRc0luVnpaWEpmYm1GdFpTSTZJbUZrYldsdUluMC5QcVZydnltM0w2djJ5TkRDUGNJQlBtaHEzM25UVUpuLXFfZGdnNXRTVGZV\">http://127.0.0.1:8088/login/?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHBpcnkiOjE1ODExNzE5NDQsInVzZXJfbmFtZSI6ImFkbWluIn0.PqVrvym3L6v2yNDCPcIBPmhq33nTUJn-q_dgg5tSTfU</span>, 就能直接登录了，具体登录逻辑可以自己开发，这里只判断了用户名与时效</p>\n</li>\n</ol>\n<h1 id=\"superset集成echarts\"><a class=\"anchor\" href=\"#superset集成echarts\">#</a> Superset 集成 Echarts</h1>\n<h2 id=\"后端\"><a class=\"anchor\" href=\"#后端\">#</a> 后端</h2>\n<p>修改 superset\\viz.py 文件 (这里是所有图表的后端处理文件，每一类对应一个图表的后端处理方法), 添加一个类 Echart</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">EchartsBarViz</span><span class=\"token punctuation\">(</span>BaseViz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    viz_type <span class=\"token operator\">=</span> <span class=\"token string\">'echarts_bar'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    verbose_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Echarts Bar\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    is_timeseries <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">query_obj</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        d <span class=\"token operator\">=</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>TimeSeriesScatterViz<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>query_obj<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        fd <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>form_data  <span class=\"token comment\"># form_data 中包含界面左侧组件内容</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> fd<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'all_columns'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Choose Columns'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> fd<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'all_columns'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            d<span class=\"token punctuation\">[</span><span class=\"token string\">'columns'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fd<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'all_columns'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> d</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> data</pre></td></tr></table></figure><p>query_obj 方法是在前查询的时候执行的，get_data 方法是在查询时候执行的<br />\n viz_type 是用来标识这个函数属于哪个前端图表的，必须与前端的注册文件一一对应，verbose_name 是别名，目前没用</p>\n<h2 id=\"前端\"><a class=\"anchor\" href=\"#前端\">#</a> 前端</h2>\n<ol>\n<li>首先新建一个文件夹 EchartsBar<br />\n<img data-src=\"6.png\" alt=\"\" /></li>\n<li>新建入口文件 index.js, 入口文件主要调用了 ReactEcharsBar.js 和 tansformProps.js，还有配置一些属性</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> t <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/translation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ChartMetadata<span class=\"token punctuation\">,</span> ChartPlugin <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/chart'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> transformProps <span class=\"token keyword\">from</span> <span class=\"token string\">'./transformProps'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> thumbnail <span class=\"token keyword\">from</span> <span class=\"token string\">'./images/thumbnail.png'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChartMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  name<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Echart Bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  description<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  credits<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'http://echarts.baidu.com/examples/editor.html?c=scatter-effect'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  thumbnail<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeSeriesScatterChartPlugin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChartPlugin</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      metadata<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      transformProps<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token function-variable function\">loadChart</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./ReactEchartsBar.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>创建 transformProps.js, 这是用来整理数据的文件</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">transformProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chartProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> queryData <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> chartProps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">//console.log (chartProps); 可以用来验证数据是否正确</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    data<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    width<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    height<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>新建 ReactEcharsBar.js, 这是画图的入口文件，主要调用了 EcharsBar.js</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> reactify <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/chart'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">'./EchartsBar'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">reactify</span><span class=\"token punctuation\">(</span>Component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>新建 EchartsBar.js, 这里引入了 EchartsBar.css 文件。这里的数据是从数据库里拿出来的，可以先把处理数据的代码去掉，然后写死数据来测试，否则会报错</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> d3 <span class=\"token keyword\">from</span> <span class=\"token string\">'d3'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CategoricalColorNamespace <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/color'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getNumberFormatter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/number-format'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">'./EchartsBar.css'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> echarts <span class=\"token keyword\">from</span> <span class=\"token string\">'echarts'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  data<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  width<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  height<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">EchartsBar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\">// 处理数据</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">var</span> echars_xAxis <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">var</span> echars_series <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> echars_xAxis<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t echars_xAxis<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t echars_series<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t echars_series<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">const</span> div <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div id=\"myChart\" style=\"height:'</span> <span class=\"token operator\">+</span> height <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token string\">'px; width:'</span> <span class=\"token operator\">+</span> width <span class=\"token operator\">+</span> <span class=\"token string\">'px;\">&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  div<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 给 echarts 添加 div</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">var</span> myChart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myChart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始化 echarts</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          type<span class=\"token operator\">:</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>          data<span class=\"token operator\">:</span> echars_xAxis<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t  <span class=\"token string\">\"axisLabel\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t      \t\tinterval<span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>          type<span class=\"token operator\">:</span> <span class=\"token string\">'value'</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          data<span class=\"token operator\">:</span> echars_series<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>EchartsBar<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token string\">'Echarts Bar'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>EchartsBar<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> propTypes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> EchartsBar<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>创建 EchartsBar.css 文件，可以在里面自己写样式</li>\n</ol>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.superset-legacy-chart-chord svg #circle circle</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> all<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token selector\">.superset-legacy-chart-chord svg .group path</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">fill-opacity</span><span class=\"token punctuation\">:</span> 0.6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token selector\">.superset-legacy-chart-chord svg path.chord</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 0.25px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token selector\">.superset-legacy-chart-chord svg #circle:hover path.fade</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0.2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>\n<p>创建文件夹 images, 里面放两张图片，一个命名为 thumbnail.png，一个命名为 thumbnailLarge.png, 这两张是选择图例的封面图。</p>\n</li>\n<li>\n<p>注册图例，打开 /superset/visualizations/presets/MainPreset.js, 添加以下代码</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> EchartsBar <span class=\"token keyword\">from</span> <span class=\"token string\">'../EchartsBar/index.js'</span></pre></td></tr></table></figure><p><img data-src=\"7.png\" alt=\"\" /></p>\n<ol start=\"8\">\n<li>新建图表搜索面板文件，在 /superset/explore/controlPanels/ 下新建文件 EchartsBar.js, 这里定义了左边的搜索条件</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> t <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/translation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  controlPanelSections<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'NOT GROUPED BY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t  <span class=\"token comment\">// 控制块标题，可以有多个控制块，一块包含多个组件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Use this section if you want to query atomic rows'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t  <span class=\"token comment\">// 描述</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>              <span class=\"token punctuation\">[</span><span class=\"token string\">'all_columns'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 使用的组件名</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>              <span class=\"token punctuation\">[</span><span class=\"token string\">'row_limit'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"9\">\n<li>注册面板<br />\n在 /superset/setup/setupPlugins.ts 添加下面代码</li>\n</ol>\n<pre><code>import EchartsBar from '../explore/controlPanels/EchartsBar';\n</code></pre>\n<p><img data-src=\"9.png\" alt=\"\" /></p>\n<ol start=\"10\">\n<li>重启前后端服务器，打开网页就可以看见新的图例<br />\n<img data-src=\"10.png\" alt=\"\" /><br />\n<img data-src=\"11.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"自定义页面\"><a class=\"anchor\" href=\"#自定义页面\">#</a> 自定义页面</h1>\n<h2 id=\"新增路由\"><a class=\"anchor\" href=\"#新增路由\">#</a> 新增路由</h2>\n<p>在 superset/view/core.py 最下面添加代码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">lucas</span><span class=\"token punctuation\">(</span>BaseSupersetView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\troute_base <span class=\"token operator\">=</span> <span class=\"token string\">'/lucas'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tdefault_view <span class=\"token operator\">=</span> <span class=\"token string\">'theme'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@expose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/theme/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">theme</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"superset/theme.html\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>appbuilder<span class=\"token punctuation\">.</span>add_view_no_menu<span class=\"token punctuation\">(</span>lucas<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中 route_base 是根路由，default_view 是默认视图路由<br />\n重启服务器，访问 http://127.0.0.1:8088/lucas/theme/<br />\n<img data-src=\"12.png\" alt=\"\" /><br />\n 这里只是随便返回了一个 html 页面，可以根据自己的需求来写逻辑</p>\n<h2 id=\"新增菜单选项\"><a class=\"anchor\" href=\"#新增菜单选项\">#</a> 新增菜单选项</h2>\n<p>在 superset/view/core.py 最下面添加代码，主要是 add_link 和 add_view 函数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">lucas</span><span class=\"token punctuation\">(</span>BaseSupersetView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    route_base <span class=\"token operator\">=</span> <span class=\"token string\">'/lucas'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tdefault_view <span class=\"token operator\">=</span> <span class=\"token string\">'theme'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@expose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/theme/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">theme</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"superset/theme.html\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>appbuilder<span class=\"token punctuation\">.</span>add_view<span class=\"token punctuation\">(</span>lucas<span class=\"token punctuation\">,</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span>category<span class=\"token operator\">=</span><span class=\"token string\">'My View'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>appbuilder<span class=\"token punctuation\">.</span>add_link<span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span>href<span class=\"token operator\">=</span><span class=\"token string\">'/lucas/theme/'</span><span class=\"token punctuation\">,</span>category<span class=\"token operator\">=</span><span class=\"token string\">'My View'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>重新执行 python superset init, 启动服务<br />\n<img data-src=\"13.png\" alt=\"\" /></p>\n<h2 id=\"新增react页面\"><a class=\"anchor\" href=\"#新增react页面\">#</a> 新增 React 页面</h2>\n<ol>\n<li>\n<p>首先复制一份 superset\\assets\\src\\welcome 文件夹到 superset\\assets\\src\\ 下并改名为 myView<br />\n<img data-src=\"14.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>修改 superset\\assets\\webpack.config.js 文件，搜索 entry，找到代码，新增自己的页面 (myView)</p>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"><span>mark: 10</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    theme<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APP_DIR</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/src/theme.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    preamble<span class=\"token operator\">:</span> <span class=\"token constant\">PREAMBLE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    addSlice<span class=\"token operator\">:</span> <span class=\"token function\">addPreamble</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/src/addSlice/index.jsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    explore<span class=\"token operator\">:</span> <span class=\"token function\">addPreamble</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/src/explore/index.jsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    dashboard<span class=\"token operator\">:</span> <span class=\"token function\">addPreamble</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/src/dashboard/index.jsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    sqllab<span class=\"token operator\">:</span> <span class=\"token function\">addPreamble</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/src/SqlLab/index.jsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    welcome<span class=\"token operator\">:</span> <span class=\"token function\">addPreamble</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/src/welcome/index.jsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    profile<span class=\"token operator\">:</span> <span class=\"token function\">addPreamble</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/src/profile/index.jsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token operator\">+</span> myView<span class=\"token operator\">:</span> <span class=\"token function\">addPreamble</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/src/myView/index.jsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    showSavedQuery<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APP_DIR</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/src/showSavedQuery/index.jsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>编译项目</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> run build</pre></td></tr></table></figure><ol start=\"4\">\n<li>去掉 superset 的导航栏</li>\n</ol>\n<p>新增默认模板，复制 /superset/templates/superset/basic.html 到 /superset/templates/superset/, 改名为 myBasic.html<br />\n 删除以下代码</p>\n<pre><code class=\"language-xhtml\">\n    &#123;% block navbar %&#125;\n      &#123;% if not standalone_mode %&#125;\n        <header class=\"top\" role=\"header\">\n          &#123;% include 'appbuilder/navbar.html' %&#125;\n        </header>\n      &#123;% endif %&#125;\n    &#123;% endblock %&#125;\n\n</code></pre>\n<ol start=\"5\">\n<li>后端新增路由<br />\n在 /superset/views/core.py 最下面新增代码，myBasic.html 是我们自定义默认模板，myView 是 react 的入口文件，<br />\nbootstrap 是配置数据，myView 要和我们前面定义的 myView 对应上。</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">lucas</span><span class=\"token punctuation\">(</span>BaseSupersetView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    route_base <span class=\"token operator\">=</span> <span class=\"token string\">'/lucas'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tdefault_view <span class=\"token operator\">=</span> <span class=\"token string\">'theme'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@expose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/theme/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">theme</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        d <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token string\">\"defaultDbId\"</span><span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"SQLLAB_DEFAULT_DBID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token string\">\"common\"</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>common_bootstrap_payload<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>render_template<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token string\">\"superset/myBasic.html\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            entry<span class=\"token operator\">=</span><span class=\"token string\">\"myView\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            bootstrap_data<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span>utils<span class=\"token punctuation\">.</span>json_iso_dttm_ser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>appbuilder<span class=\"token punctuation\">.</span>add_view<span class=\"token punctuation\">(</span>lucas<span class=\"token punctuation\">,</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span>category<span class=\"token operator\">=</span><span class=\"token string\">'My View'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>重启 superset, 打开 http://127.0.0.1:8088/lucas/theme/，就会进入没有导航栏的 react 首页，然后再根据需求使用 react 开发页面即可</li>\n</ol>\n<h1 id=\"视图与角色权限\"><a class=\"anchor\" href=\"#视图与角色权限\">#</a> 视图与角色权限</h1>\n<div class=\"note info\">\n<p>superset 默认把角色与视图的权限存在了 sqlite (可更改) 里了，如果要新增权限我们要在数据库里插入数据，主要是三个表 ab_permission,ab_permission_view,ab_view_menu。<br />\n我们需要在表中插入相关权限数据，分别是三个表 ab_permission,ab_permission_view,ab_view_menu，然后给路由添加 @has_access 或者 @has_access_api 的注解</p>\n</div>\n<h2 id=\"控制权限代码块\"><a class=\"anchor\" href=\"#控制权限代码块\">#</a> 控制权限代码块</h2>\n<div class=\"note info\">\n<p>@has_access 用于视图，@has_access_api 用于 api</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> flask_appbuilder<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>decorators <span class=\"token keyword\">import</span> permission_name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">lucas</span><span class=\"token punctuation\">(</span>BaseSupersetView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\troute_base <span class=\"token operator\">=</span> <span class=\"token string\">'/lucas'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tdefault_view <span class=\"token operator\">=</span> <span class=\"token string\">'theme'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tclass_permission_name <span class=\"token operator\">=</span> <span class=\"token string\">'Api'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token decorator annotation punctuation\">@has_access</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token decorator annotation punctuation\">@permission_name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"query_form_data\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token decorator annotation punctuation\">@expose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/theme/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">theme</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"superset/theme.html\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>appbuilder<span class=\"token punctuation\">.</span>add_view<span class=\"token punctuation\">(</span>lucas<span class=\"token punctuation\">,</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span>category<span class=\"token operator\">=</span><span class=\"token string\">'My View'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"插入权限数据\"><a class=\"anchor\" href=\"#插入权限数据\">#</a> 插入权限数据</h2>\n<p>class_permission_name = 'Api' 中的 api<br />\n@permission_name (&quot;query_form_data&quot;) 中的 query_form_data 都是数据库里默认存在的数据，<br />\n我们可以插入不同权限数据，然后修改这两个属性就可以达到新增权限的效果，有以下两种方法</p>\n<ul>\n<li>在三个表 ab_permission,ab_permission_view,ab_view_menu 中插入数据</li>\n<li>在上面代码下加入 db.create_all ()，然后运行 superset init 初始化系统自动创建权限</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.create_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"自定义内置参数\"><a class=\"anchor\" href=\"#自定义内置参数\">#</a> 自定义内置参数</h1>\n<h2 id=\"修改源码\"><a class=\"anchor\" href=\"#修改源码\">#</a> 修改源码</h2>\n<p>修改源码路径源代码路径：superset &gt; jinja_context.py<br />\n 在 filter_values 方法后面添加如下代码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_tenantid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">hasattr</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> g<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\"># 需根据 username 从新用户管理平台上面获取对应用户的 tenantid</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><p>在 BaseTemplateProcessor 类的 _ init _ 方法中修改如下内容：<br />\n在该 context 中添加 &quot;get_tenantid&quot;: get_tenantid，即下面代码的第四个参数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>mark: 5</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>self<span class=\"token punctuation\">.</span>context <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token string\">\"url_param\"</span><span class=\"token punctuation\">:</span> url_param<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token string\">\"current_user_id\"</span><span class=\"token punctuation\">:</span> current_user_id<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token string\">\"current_username\"</span><span class=\"token punctuation\">:</span> current_username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token string\">\"get_tenantid\"</span><span class=\"token punctuation\">:</span> get_tenantid<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token string\">\"cache_key_wrapper\"</span><span class=\"token punctuation\">:</span> CacheKeyWrapper<span class=\"token punctuation\">(</span>extra_cache_keys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cache_key_wrapper<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token string\">\"filter_values\"</span><span class=\"token punctuation\">:</span> filter_values<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token string\">\"form_data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"使用方法\"><a class=\"anchor\" href=\"#使用方法\">#</a> 使用方法</h2>\n<p>以下测试均使用 superset 自带的 example 数据库，schema 为 main，表名为 ab_permission</p>\n<p>在 SQLLab 或者数据源使用</p>\n<p>去掉 \\ 号</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> ab_permission </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> \\&#123;\\&#123; get_tenantid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>&#125;&#125;</pre></td></tr></table></figure><h1 id=\"设置superset默认中文\"><a class=\"anchor\" href=\"#设置superset默认中文\">#</a> 设置 Superset 默认中文</h1>\n<p>修改 config.py 文件<br />\n找到</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BABEL_DEFAULT_LOCALE <span class=\"token operator\">=</span> <span class=\"token string\">\"en\"</span></pre></td></tr></table></figure><p>改为</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BABEL_DEFAULT_LOCALE <span class=\"token operator\">=</span> <span class=\"token string\">\"zh\"</span></pre></td></tr></table></figure><p>&lt;h1 id=&quot;解决 csv 导出乱码&quot;&gt; 解决 csv 导出乱码 &lt; a class=&quot;anchor&quot; href=&quot;解决 csv 导出乱码&quot; data-pjax-state=&quot;&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;</p>\n<p>修改 config.py 文件<br />\n找到</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CSV_EXPORT <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"encoding\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>改为</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CSV_EXPORT <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"encoding\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"utf-8-sig\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"地图图表汉化\"><a class=\"anchor\" href=\"#地图图表汉化\">#</a> 地图图表汉化</h1>\n<p>汉化前：<br />\n<img data-src=\"15.png\" alt=\"\" /><br />\n汉化后：<br />\n<img data-src=\"16.png\" alt=\"\" /><br />\n修改方法：<br />\n修改两个文件内容</p>\n<ul>\n<li>./superset/assets/node_modules/@superset-ui/legacy-plugin-chart-country-map/esm/countries/china.geojson</li>\n<li>./superset/assets/node_modules/@superset-ui/legacy-plugin-chart-country-map/lib/countries/china.geojson</li>\n</ul>\n<p>将所有 NAME_1 的拼音改成中文</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"ID_0\"</span><span class=\"token operator\">:</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"ISO\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"CN-71\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"NAME_0\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"China\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"ID_1\"</span><span class=\"token operator\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"NAME_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Taiwan\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"TYPE_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Shěng\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"ENGTYPE_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Province\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"NL_NAME_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"台湾\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"VARNAME_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Táiwān\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>改为</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"ID_0\"</span><span class=\"token operator\">:</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"ISO\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"CN-71\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"NAME_0\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"China\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"ID_1\"</span><span class=\"token operator\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"NAME_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"台湾\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"TYPE_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Shěng\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"ENGTYPE_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Province\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"NL_NAME_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"台湾\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"VARNAME_1\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Táiwān\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后重写编译前端</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> run build</pre></td></tr></table></figure><h1 id=\"国际化\"><a class=\"anchor\" href=\"#国际化\">#</a> 国际化</h1>\n<p>找到安装目录下有个 translations/zh/LC_MESSAGES 文件夹。<br />\n打开里面的 messages.json 文件，添加你需要汉化的字符串<br />\n完成后在 /superset 目录下运行</p>\n<pre><code class=\"language-Bash\">pybabel compile -d translations\n</code></pre>\n<p>编译完，重启服务即可</p>\n<h1 id=\"csv导出别名\"><a class=\"anchor\" href=\"#csv导出别名\">#</a> csv 导出别名</h1>\n<p>修改 superset/viz.py 中 get_csv 函数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_csv</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        df <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_df<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\"># 导出 csv 替换成 数据源中的 label</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        columns <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        verbose_map <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'verbose_map'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        df<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>verbose_map<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> columns<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        include_index <span class=\"token operator\">=</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> pd<span class=\"token punctuation\">.</span>RangeIndex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> df<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span>include_index<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">\"CSV_EXPORT\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "大数据",
                "数据可视化",
                "python",
                "superset",
                "数据可视化"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/Scrapy-%E9%83%A8%E7%BD%B2%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%ABAPI%E6%9C%8D%E5%8A%A1/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/Scrapy-%E9%83%A8%E7%BD%B2%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%ABAPI%E6%9C%8D%E5%8A%A1/",
            "title": "Scrapy-部署网络爬虫API服务",
            "date_published": "2020-12-30T14:43:00.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h1>\n<p>本文将使用到下面三个框架</p>\n<ul>\n<li>Scrapy（Web 爬虫框架）：Scrapy 是一套基于基于 Twisted 的异步处理框架，纯 python 实现的爬虫框架，用户只需要定制开发几个模块就可以轻松的实现一个爬虫</li>\n<li>Scrapyd（爬虫服务器）：Scrapyd 是用于部署和运行 Scrapy 的应用程序。它可以使用 JSON API 部署（上载）Scrapy 的项目并控制每个作业</li>\n<li>Scrapyd-Client （Scrapyd 客户端）：Scrapyd-Client 用于把 Scrapy 项目部署在 Scrapyd 服务器上</li>\n</ul>\n<h1 id=\"安装scrapyd\"><a class=\"anchor\" href=\"#安装scrapyd\">#</a> 安装 Scrapyd</h1>\n<ol>\n<li>安装 scrapyd</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> scrapyd</pre></td></tr></table></figure><ol start=\"2\">\n<li>打开命令行，运行服务器</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scrapyd</pre></td></tr></table></figure><p>可以看见下面输出<br />\n<img data-src=\"1.png\" alt=\"运行服务器\" /><br />\n浏览器打开 <span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMTo2ODAwLyVFRiVCQyU4QyVFNSU4RiVBRiVFNCVCQiVBNSVFNyU5QyU4QiVFOCVBNyU4MSVFNiU5QyU4RCVFNSU4QSVBMSVFNSU5OSVBOCVFNyU5QSU4NCVFNyU5NSU4QyVFOSU5RCVBMg==\">http://127.0.0.1:6800/，可以看见服务器的界面</span><br />\n<img data-src=\"2.png\" alt=\"服务器的界面\" /><br />\n其中 job 为任务管理，logs 为执行日志，Documentation 为 scrapyd 的文档<br />\n这时 scrapyd 并没有部署任何 scrapy 项目，接下来我们使用 Scrapyd-Client 部署 scrapy 项目，切记不要关闭该命令行窗口</p>\n<h1 id=\"部署scrapy项目\"><a class=\"anchor\" href=\"#部署scrapy项目\">#</a> 部署 Scrapy 项目</h1>\n<ol>\n<li>安装 Scrapyd-Client</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> scrapyd-client</pre></td></tr></table></figure><ol start=\"2\">\n<li>检查是否安装成功</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scrapyd-deploy</pre></td></tr></table></figure><p>如果安装成功会出现下面提示<br />\n<img data-src=\"3.png\" alt=\"安装成功\" /><br />\n因为当前文件夹并不是 scrapy 项目，所以会提示找不到 scrapy 项目<br />\n需要注意的是，在 windows 环境下，运行该命令会提示不是内部或外部命令，这时候你需要找到你的 python 目录，<br />\n由于我使用的是 anaconda 的虚拟环境，所以我的目录是 J:\\Anaconda3\\envs\\scrapy<br />\n 在 J:\\Anaconda3\\Scripts 下创建 scrapyd-deploy.bat 文件，写入下面内容，路径替换成自己本机路径</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@echo off</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"J:\\Anaconda3<span class=\"token entity\" title=\"\\e\">\\e</span>nvs\\scrapy\\python.exe\"</span>  <span class=\"token string\">\"J:\\Anaconda3<span class=\"token entity\" title=\"\\e\">\\e</span>nvs\\scrapy\\Scripts\\scrapyd-deploy\"</span> %*</pre></td></tr></table></figure><p>关闭命令行，重新打开命令，再次输入</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scrapyd-deploy</pre></td></tr></table></figure><ol start=\"3\">\n<li>修改 scrapy 项目配置文件<br />\n进入到你的 scrapy 项目下，修改 scrapy.cfg</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>settings<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>default <span class=\"token operator\">=</span> LighthouseCrawler<span class=\"token punctuation\">.</span>settings</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>deploy<span class=\"token punctuation\">:</span>target<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>url <span class=\"token operator\">=</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>localhost<span class=\"token punctuation\">:</span><span class=\"token number\">6800</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>project <span class=\"token operator\">=</span> prject</pre></td></tr></table></figure><p>target 为你的服务器命令，prject 是你工程的名字</p>\n<ol start=\"4\">\n<li>命令进入 scrapy 项目，部署项目<br />\n注意： 必须要开启 scrapyd 服务 (步骤一)，否则将提示服务器拒绝</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /myscrapy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>scrapyd-deploy target -p prject</pre></td></tr></table></figure><p><img data-src=\"4.png\" alt=\"服务器的界面\" /></p>\n<ol start=\"5\">\n<li>检查服务器是否可用<br />\n执行下面命令，并观察启动 scrapyd 的命令行窗口的输出</li>\n</ol>\n<pre><code>curl http://localhost:6800/daemonstatus.json\n</code></pre>\n<p>如果没有报错，则成功部署<br />\n在 windows 下可能出现下面错误</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>builtins.NotImplementedError: spawnProcess not available since pywin32 is not installed.</pre></td></tr></table></figure><p>则先安装 pywin32</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> pywin32</pre></td></tr></table></figure><p>然后把 python 目录 python3\\Lib\\site-packages\\pywin32_system32 下的两个 ddl 文件复制到 C:\\Windows\\System32，重新打开命令行运行 scrapyd，再次尝试</p>\n<h1 id=\"api\"><a class=\"anchor\" href=\"#api\">#</a> API</h1>\n<ol>\n<li>检查服务的负载状态</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/daemonstatus.json</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ok\"</span>, <span class=\"token string\">\"running\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0\"</span>, <span class=\"token string\">\"pending\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0\"</span>, <span class=\"token string\">\"finished\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0\"</span>, <span class=\"token string\">\"node_name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"node-name\"</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>向项目添加版本，如果不存在则创建项目</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/addversion.json -F <span class=\"token assign-left variable\">project</span><span class=\"token operator\">=</span>myproject -F <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span>r23 -F <span class=\"token assign-left variable\">egg</span><span class=\"token operator\">=</span>@myproject.egg</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ok\"</span>, <span class=\"token string\">\"spiders\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>安排一次爬虫运行（也称为作业）</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/schedule.json -d <span class=\"token assign-left variable\">project</span><span class=\"token operator\">=</span>myproject -d <span class=\"token assign-left variable\">spider</span><span class=\"token operator\">=</span>somespider</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ok\"</span>, <span class=\"token string\">\"jobid\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"6487ec79947edab326d6db28a2d86511e8247444\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>取消一次爬虫</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/cancel.json -d <span class=\"token assign-left variable\">project</span><span class=\"token operator\">=</span>myproject -d <span class=\"token assign-left variable\">job</span><span class=\"token operator\">=</span>6487ec79947edab326d6db28a2d86511e8247444</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ok\"</span>, <span class=\"token string\">\"prevstate\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"running\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>获取上传到此 Scrapy 服务器的项目列表</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/listprojects.json</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ok\"</span>, <span class=\"token string\">\"projects\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"myproject\"</span>, <span class=\"token string\">\"otherproject\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>获取可用于某些项目的版本列表</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/listversions.json?project<span class=\"token operator\">=</span>myproject</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ok\"</span>, <span class=\"token string\">\"versions\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"r99\"</span>, <span class=\"token string\">\"r156\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"7\">\n<li>获取某个项目的爬虫列表</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/listspiders.json?project<span class=\"token operator\">=</span>myproject</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ok\"</span>, <span class=\"token string\">\"spiders\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"spider1\"</span>, <span class=\"token string\">\"spider2\"</span>, <span class=\"token string\">\"spider3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"8\">\n<li>获取作业列表</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/listjobs.json?project<span class=\"token operator\">=</span>myproject</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string\">\"pending\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"id\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"78391cc0fcaf11e1b0090800272a6d06\"</span>, <span class=\"token string\">\"spider\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"spider1\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>,</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token string\">\"running\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"id\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"422e608f9f28cef127b3d5ef93fe9399\"</span>, <span class=\"token string\">\"spider\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"spider2\"</span>, <span class=\"token string\">\"start_time\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2012-09-12 10:14:03.594664\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>,</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token string\">\"finished\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"id\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2f16646cfcaf11e1b0090800272a6d06\"</span>, <span class=\"token string\">\"spider\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"spider3\"</span>, <span class=\"token string\">\"start_time\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2012-09-12 10:14:03.594664\"</span>, <span class=\"token string\">\"end_time\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2012-09-12 10:24:03.594664\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"9\">\n<li>删除项目版本</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/delversion.json -d <span class=\"token assign-left variable\">project</span><span class=\"token operator\">=</span>myproject -d <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span>r99</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"10\">\n<li>删除项目</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost:6800/delproject.json -d <span class=\"token assign-left variable\">project</span><span class=\"token operator\">=</span>myproject</pre></td></tr></table></figure><p>响应</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "网络爬虫",
                "python",
                "scrapy"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-B%E6%A0%91%E3%80%81B-%E6%A0%91%E3%80%81B-%E6%A0%91/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-B%E6%A0%91%E3%80%81B-%E6%A0%91%E3%80%81B-%E6%A0%91/",
            "title": "数据结构-B树、B-树、B-树",
            "date_published": "2020-11-05T12:22:40.000Z",
            "content_html": "<h1 id=\"多路查找树\"><a class=\"anchor\" href=\"#多路查找树\">#</a> 多路查找树</h1>\n<div class=\"note info\">\n<p>多路查找树 (muitl-way search tree)，其每一个节点的孩子数可以多于两个，且每一个节点处可以存储多个元素。主要有 4 中特殊形式。</p>\n</div>\n<p>和普通的查找树相比，多路查找树不仅一个节点有多个孩子而且一个节点不再是只能存储一个元素，这打破了我们对树的理解。正因为这个特性，使他能够出色的解决 IO 问题，而我们研究的 B,B+,B - 便是平衡的多路查找树</p>\n<h1 id=\"b树\"><a class=\"anchor\" href=\"#b树\">#</a> B 树</h1>\n<p>一个 m 阶的 B 树具有如下属性：</p>\n<div class=\"note info\">\n<ol>\n<li>如果根结点不是叶结点，则其至少有两棵子树。</li>\n<li>每一个非根的分支结点都有 k-1 个元素和 k 个孩子，其中 [m/2]≤ k ≤ m。每一个叶子结点 n 都有 k-1 个元素，其中 [m/2]≤ k ≤ m</li>\n<li>所有叶子结点都位于同一层次。</li>\n<li>所有分支结点包含下列信息数据 (n, A0, K1, A1, K2, A2, …, Kn, An)，其中: Ki ( i=1, 2, …, n ) 为关键字，且 Ki&lt;Ki+1 ( i=1, 2, …, n-1 ); Ai ( i=0, 2, …, n) 为指向子树根结点的指针，且指针 Ai-1 所指子树中所有结点的关键字均小于 Ki ( i=1, 2, …, n ) ，An 所指子树中所有结点的关键字均大于 Kn，n ( [m/2]-1 ≤ n ≤ m-1 ) 为关键字的个数 (或 n+1 为子树的个数)</li>\n</ol>\n</div>\n<p>用人话来说，一颗 m 阶 B 树有以下特点</p>\n<ul>\n<li>每个节点最多包含 m 个节点</li>\n<li>如果根节点包含子节点，则至少有 2 个子节点。除根节点外，每个节点至少包含 m/2 个子节点</li>\n<li>拥有 k 个子节点的非叶节点最多包含 k-1 个记录 (k&lt;m-1)</li>\n<li>所有的叶子节点在最后一层</li>\n</ul>\n<p><img data-src=\"1.jpg\" alt=\"B树\" /></p>\n<p>上面是一个 3 阶 B 树，包含了以上所有的特点</p>\n<h2 id=\"查询\"><a class=\"anchor\" href=\"#查询\">#</a> 查询</h2>\n<p><img data-src=\"2.jpg\" alt=\"查询\" /></p>\n<p>如上图我要从上图中找到 E 字母，查找流程如下</p>\n<ol>\n<li>获取根节点的关键字进行比较，当前根节点关键字为 M，E&lt;M（26 个字母顺序），所以往找到指向左边的子节点（二分法规则，左小右大，左边放小于当前节点值的子节点、右边放大于当前节点值的子节点）</li>\n<li>拿到关键字 D 和 G，D&lt;E&lt;G 所以直接找到 D 和 G 中间的节点</li>\n<li>拿到 E 和 F，因为 E=E 所以直接返回关键字和指针信息（如果树结构里面没有包含所要查找的节点则返回 null）；</li>\n</ol>\n<h2 id=\"插入\"><a class=\"anchor\" href=\"#插入\">#</a> 插入</h2>\n<p>遵循规则：</p>\n<ol>\n<li>\n<p>节点拆分规则：当前是要组成一个 5 路查找树，那么此时 m=5, 关键字数必须 &lt;=5-1（这里关键字数&gt; 4 就要进行节点拆分）, 拆分的时候把中间节点往上升级</p>\n</li>\n<li>\n<p>排序规则：满足节点本身比左边节点大，比右边节点小的排序规则；</p>\n</li>\n</ol>\n<p>定义一个 5 阶树（平衡 5 路查找树；），现在我们要把 3、8、31、11、23、29、50、28 这些数字构建出一个 5 阶树出来；</p>\n<p>先插入 3、8、31、11</p>\n<p><img data-src=\"3.jpg\" alt=\"插入\" /></p>\n<p>当插入 23 的时候，发现元素等于 5 了，这时候需要拆分节点，此时把中间节点 11 升级，然后再插入 29</p>\n<p><img data-src=\"4.jpg\" alt=\"插入\" /></p>\n<p>再插入 50，最后插入 28 的时候发现右孩子元素又等于 5 了，这时候把中间节点 29 升级到与 11 同一级</p>\n<p><img data-src=\"5.jpg\" alt=\"插入\" /></p>\n<h2 id=\"删除\"><a class=\"anchor\" href=\"#删除\">#</a> 删除</h2>\n<p>规则：</p>\n<ol>\n<li>节点合并规则：当前是要组成一个 5 路查找树，那么此时 m=5, 关键字数必须大于等于 ceil（5/2）（这里关键字数 &lt; 2 就要进行节点合并）；</li>\n<li>满足节点本身比左边节点大，比右边节点小的排序规则；</li>\n<li>关键字数小于二时先从子节点取，子节点没有符合条件时就向向父节点取，取中间值往父节点放；</li>\n</ol>\n<p><img data-src=\"6.jpg\" alt=\"删除\" /></p>\n<h2 id=\"特点\"><a class=\"anchor\" href=\"#特点\">#</a> 特点</h2>\n<p>B 树相对于平衡二叉树的不同是，每个节点包含的关键字增多了，特别是在 B 树应用到数据库中的时候，数据库充分利用了磁盘块的原理（磁盘数据存储是采用块的形式存储的，每个块的大小为 16K，每次 IO 进行数据读取时，同一个磁盘块的数据可以一次性读取出来）把节点大小限制和充分使用在磁盘快大小范围；把树的节点关键字增多后树的层级比原来的二叉树少了，减少数据查找的次数和复杂度；</p>\n<h1 id=\"b树-2\"><a class=\"anchor\" href=\"#b树-2\">#</a> B + 树</h1>\n<p><img data-src=\"7.jpg\" alt=\"B+树\" /></p>\n<p>B + 树通过仅在树的叶节点上存储数据指针，消除了用于索引的 B 树的缺点。因此，B + 树的叶节点的结构与 B 树的内部节点的结构完全不同。在这里应该指出，由于数据指针仅存在于叶节点上，因此叶节点必须必须将所有键值及其对应的数据指针存储到磁盘文件块，以便访问它们。此外，叶节点链接到提供对记录的有序访问。因此，叶节点形成索引的第一层，内部节点形成多级索引的其他层。叶子节点的某些关键值也出现在内部节点中，以简单地充当控制记录搜索的媒介</p>\n<h2 id=\"b树与b树的区别\"><a class=\"anchor\" href=\"#b树与b树的区别\">#</a> B 树与 B + 树的区别</h2>\n<table>\n<thead>\n<tr>\n<th>B 树</th>\n<th>B + 树</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>所有内部和叶节点都有数据指针</td>\n<td>只有叶节点具有数据指针</td>\n</tr>\n<tr>\n<td>树中没有 key 的重复项</td>\n<td>key 重复，并且所有节点都位于叶子上</td>\n</tr>\n<tr>\n<td>叶节点不存储为结构链表</td>\n<td>叶节点存储为结构链表</td>\n</tr>\n</tbody>\n</table>\n<p>B + 树对于 B 树的改进主要有：</p>\n<ul>\n<li>更少的 IO 次数<br />\n非叶子节点去掉了其中指向 data record 的指针，使得每个结点能存放更多的 key，这使得 B + 树的高度会比 B 树低，访问时所需要的 IO 次数就会少很多。此外，由于每个节点存储的记录数更多，所以对访问局部性原理的利用更好，缓存命中率更高</li>\n<li>更适于范围查询<br />\n底部叶子节点是链表的形式，因此可以实现更方便的顺序遍历</li>\n<li>更稳定的查询效率<br />\n因为 B 树的所有节点都存储数据所以 B 树查询时间复杂度不稳定，可能第一个就命中也可能最后一个才命中，而 B + 树的数据都在叶子节点，所以 B + 树的查询复杂度稳定为</li>\n</ul>\n<p>B + 树也有劣势，由于键会重复，因此会占用更多空间。但是与带来性能优势相比，空间劣势往往可以接受，因此 B + 树在数据库比 B 树使用范围更广</p>\n<h1 id=\"b-树\"><a class=\"anchor\" href=\"#b-树\">#</a> B - 树</h1>\n<p>暂时没用到，待补充</p>\n",
            "tags": [
                "计算机科学",
                "数据结构",
                "java"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-TreeMap%E7%BA%A2%E9%BB%91%E6%A0%91/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-TreeMap%E7%BA%A2%E9%BB%91%E6%A0%91/",
            "title": "数据结构-TreeMap红黑树",
            "date_published": "2020-10-16T07:33:47.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h1>\n<p>TreeMap 实现了 SotredMap 接口，它是有序的集合。而且是一个红黑树结构，每个 key-value 都作为一个红黑树的节点。如果在调用 TreeMap 的构造函数时没有指定比较器，则根据 key 执行自然排序</p>\n<h1 id=\"继承关系\"><a class=\"anchor\" href=\"#继承关系\">#</a> 继承关系</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TreeMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NavigableMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Cloneable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>Serializable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"实现接口\"><a class=\"anchor\" href=\"#实现接口\">#</a> 实现接口</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Cloneable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">NavigableMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SortedMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"treemap基本属性\"><a class=\"anchor\" href=\"#treemap基本属性\">#</a> TreeMap 基本属性</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> comparator<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 比较器，是自然排序，还是定制排序 ，使用 final 修饰，表明一旦赋值便不允许改变</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">transient</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> root <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 红黑树的根节点</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">transient</span> <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//TreeMap 中存放的键值对的数量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">transient</span> <span class=\"token keyword\">int</span> modCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 修改的次数</span></pre></td></tr></table></figure><h1 id=\"红黑树数据结构\"><a class=\"anchor\" href=\"#红黑树数据结构\">#</a> 红黑树数据结构</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">K</span> key<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 键</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> left <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 左孩子节点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> right <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 右孩子节点</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> parent<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 父节点</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">boolean</span> color <span class=\"token operator\">=</span> BLACK<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 节点的颜色，在红黑树种，只有两种颜色，红色和黑色</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 构造方法，用指定的 key,value ,parent 初始化，color 默认为黑色</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">K</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> parent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> parent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 返回 key</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">K</span> <span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 返回该节点对应的 value</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// 替换节点的值，并返回旧值</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">V</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">V</span> oldValue <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">// 重写 equals () 方法</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>o <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">// 两个节点的 key 相等，value 相等，这两个节点才相等</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">valEquals</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">valEquals</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">// 重写 hashCode () 方法</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">int</span> keyHash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key<span class=\"token operator\">==</span><span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">int</span> valueHash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">==</span><span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">//key 和 vale hash 值得异或运算，相同则为零，不同则为 1 </span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> keyHash <span class=\"token operator\">^</span> valueHash<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">// 重写 toString () 方法</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">return</span> key <span class=\"token operator\">+</span> <span class=\"token string\">\"=\"</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"构造方法\"><a class=\"anchor\" href=\"#构造方法\">#</a> 构造方法</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造方法，comparator 用键的顺序做比较</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">TreeMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    comparator <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 构造方法，提供比较器，用指定比较器排序</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">TreeMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> comparator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    his<span class=\"token punctuation\">.</span>comparator <span class=\"token operator\">=</span> comparator<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 将 m 中的元素转化 daoTreeMap 中，按照键的顺序做比较排序</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">TreeMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    comparator <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 构造方法，指定的参数为 SortedMap</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 采用 m 的比较器排序</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">TreeMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SortedMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    comparator <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">comparator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">buildFromSorted</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>IOException</span> cannotHappen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> cannotHappen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>TreeMap 提供了四个构造方法，实现了方法的重载。无参构造方法中比较器的值为 null, 采用自然排序的方法，如果指定了比较器则称之为定制排序.</p>\n<ul>\n<li>自然排序：TreeMap 的所有 key 必须实现 Comparable 接口，所有的 key 都是同一个类的对象</li>\n<li>定制排序：创建 TreeMap 对象传入了一个 Comparator 对象，该对象负责对 TreeMap 中所有的 key 进行排序，采用定制排序不要求 Map 的 key 实现 Comparable 接口。等下面分析到比较方法的时候在分析这两种比较有何不同。</li>\n</ul>\n<h1 id=\"新增\"><a class=\"anchor\" href=\"#新增\">#</a> 新增</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">K</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> t <span class=\"token operator\">=</span> root<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 红黑树的根节点</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">// 红黑树是否为空</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// type (and possibly null) check</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 构造根节点，因为根节点没有父节点，传入 null 值。 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        root <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        size <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//size 值加 1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 改变修改的次数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 返回 null </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">int</span> cmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> parent<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 定义节点</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// split comparator and comparable paths</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> cpr <span class=\"token operator\">=</span> comparator<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 获取比较器</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cpr <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>      <span class=\"token comment\">// 如果定义了比较器，采用自定义比较器进行比较</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            parent <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 将红黑树根节点赋值给 parent</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            cmp <span class=\"token operator\">=</span> cpr<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 比较 key, 与根节点的大小</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cmp <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">// 如果 key &lt; t.key , 指向左子树</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//t = t.left  , t == 它的做孩子节点</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cmp <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 如果 key > t.key , 指向它的右孩子节点</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 如果它们相等，替换 key 的值</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 循环遍历</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 自然排序方式，没有指定比较器</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NullPointerException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 抛出异常</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">Comparable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> k <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 类型转换</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            parent <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            cmp <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cmp <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// key &lt; t.key </span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 左孩子</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cmp <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// key > t.key </span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 右孩子</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//t == t.key , 替换 value 值</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 创建新节点，并制定父节点</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\">// 根据比较结果，决定新节点为父节点的左孩子或者右孩子</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cmp <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        parent<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        parent<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token function\">fixAfterInsertion</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 新插入节点后重新调整红黑树 </span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    size<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">// 比较方法，如果 comparator==null , 采用 comparable.compartTo 进行比较，否则采用指定比较器比较大小</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> k1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> k2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">return</span> comparator<span class=\"token operator\">==</span><span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>k1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">)</span>k2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token operator\">:</span> comparator<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">)</span>k1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">)</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">fixAfterInsertion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token comment\">// 插入的节点默认的颜色为红色</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    x<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> RED<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">// 情形 1： 新节点 x 是树的根节点，没有父节点不需要任何操作</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\">// 情形 2： 新节点 x 的父节点颜色是黑色的，也不需要任何操作</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">!=</span> root <span class=\"token operator\">&amp;&amp;</span> x<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>color <span class=\"token operator\">==</span> RED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\">// 情形 3：新节点 x 的父节点颜色是红色的</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token comment\">// 判断 x 的节点的父节点位置，是否属于左孩子</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>          <span class=\"token comment\">// 获取 x 节点的父节点的兄弟节点，上面语句已经判断出 x 节点的父节点为左孩子，所以直接取右孩子</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>         <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> y <span class=\"token operator\">=</span> <span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>         <span class=\"token comment\">// 判断是否 x 节点的父节点的兄弟节点为红色。</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> RED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>              <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//x 节点的父节点设置为黑色</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>              <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">//y 节点的颜色设置为黑色</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>              <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//x.parent.parent 设置为红色</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>              x <span class=\"token operator\">=</span> <span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//x == x.parent.parent , 进行遍历。</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>               <span class=\"token comment\">//x 的父节点的兄弟节点是黑色或者缺少的</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>               <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 判断 x 节点是否为父节点的右孩子</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                    x <span class=\"token operator\">=</span> <span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//x == 父节点</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                    <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 左旋转操作</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>               <span class=\"token comment\">//x 节点是其父的左孩子</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>               <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>               <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 上面两句将 x.parent 和 x.parent.parent 的颜色做调换</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>               <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 进行右旋转</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> y <span class=\"token operator\">=</span> <span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//y 是 x 节点的祖父节点的左孩子</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> RED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 判断颜色</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 父节点设置为黑色</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 父节点的兄弟节点设置为黑色</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 祖父节点设置为红色</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                x <span class=\"token operator\">=</span> <span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 将祖父节点作为新插入的节点，遍历调整</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>     <span class=\"token comment\">//x 是其父亲的左孩子</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                    x <span class=\"token operator\">=</span> <span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                    <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 以父节点为旋转点，进行右旋操作</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 父节点为设置为黑色</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 祖父节点设置为红色</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 以父节点为旋转点，进行左旋操作</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    root<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> BLACK<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 通过节点位置的调整，最终将红色的节点条调换到了根节点的位置，根节点重新设置为黑色</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>红黑树是一个更高效的检索二叉树，有如下特点：</p>\n<ol>\n<li>每个节点只能是红色或者黑色</li>\n<li>根节点永远是黑色的</li>\n<li>所有的叶子的子节点都是空节点，并且都是黑色的</li>\n<li>每个红色节点的两个子节点都是黑色的（不会有两个连续的红色节点）</li>\n<li>从任一个节点到其子树中每个叶子节点的路径都包含相同数量的黑色节点（叶子节点到根节点的黑色节点数量每条路径都相同）</li>\n</ol>\n<p>当一个默认为红色的节点插入树中，其实对应的是 7 中可能发生的情况，分别进行叙述：</p>\n<ul>\n<li>情形 1：新插入的节点时红黑树的根节点，没有父节点，无需任何的操作，直接将颜色设置为黑色就可以了</li>\n<li>情形 2：新节点的父节点颜色是黑色的，新插入的节点是红色的。也无需任何的操作。因为新节点的插入并没有影响到红黑书的特点</li>\n<li>情形 3：新节点的父节点（左孩子节点）颜色是红色的，而父节点的兄弟节点颜色也是红色的<br />\n<img data-src=\"1.png\" alt=\"\" /></li>\n<li>情形 4：父节点（左孩子节点）的颜色为红色，父节点的兄弟节点的颜色为黑色或者为 null，新插入的节点为父节点的右孩子节点。如下图<br />\n<img data-src=\"2.png\" alt=\"\" /></li>\n<li>情形 5：父节点（左孩子节点）的颜色为红色，父节点的兄弟节点颜色为黑色或者 null, 新插入节点为父亲的左孩子节点。如下图：<br />\n<img data-src=\"3.png\" alt=\"\" /></li>\n<li>情形 6 和情形 7 的操作与情形 4 和情形 5 的操作相同，它们之前的区别是父节点为有孩子节点，再次不再赘述。</li>\n</ul>\n<h1 id=\"删除\"><a class=\"anchor\" href=\"#删除\">#</a> 删除</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> p <span class=\"token operator\">=</span> <span class=\"token function\">getEntry</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 根据 key 查找节点，并返回该节点</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">V</span> oldValue <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 获取 key 对应的值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">deleteEntry</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 删除节点</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 返回 key 对应的值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getEntry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 根据键寻找节点，有非为两种方式，如果定制了比较器，采用定制排序方式，否则使用自然排序</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comparator <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">getEntryUsingComparator</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 循环遍历树，寻找和 key 相等的节点</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NullPointerException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token class-name\">Comparable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> k <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> p <span class=\"token operator\">=</span> root<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 循环遍历树，寻找和 key 相等的节点</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">int</span> cmp <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cmp <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            p <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cmp <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            p <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 删除节点</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteEntry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 记录修改的次数</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    size<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 数量减 1</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// 当前节点的两个孩子都不为空</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>left <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token punctuation\">.</span>right <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">// 寻找继承者，继承者为当前节点的右孩子节点或者右孩子节点的最小左孩子</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> s <span class=\"token operator\">=</span> <span class=\"token function\">successor</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        p<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//key - value  的替换 ，并没有替换颜色</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        p<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        p <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 指向继承者</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// p has 2 children</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\">// Start fixup at replacement node, if it exists.</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">// 开始修复树结构，继承者的左孩子不为空，返回左孩子，否则返回右孩子</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\">// 不可能存在左右两个孩子都存在的情况，successor 寻找的就是最小节点，它的左孩子节点为 null</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> replacement <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>left <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> p<span class=\"token punctuation\">.</span>left <span class=\"token operator\">:</span> p<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>replacement <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\">// Link replacement to parent</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\">// 已经被选为继承者，当前拥有的一切放弃，所以将孩子交给爷爷抚养</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        replacement<span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\">//p 节点没有父节点，则指向根节点</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>parent <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>           root <span class=\"token operator\">=</span> replacement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token comment\">// 如果 p 为左孩子，如果 p 为左孩子，则将 p.parent.left = p.left</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> p<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            p<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>left  <span class=\"token operator\">=</span> replacement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            p<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> replacement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token comment\">// 删除 p 节点到左右分支，和父节点的引用</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        p<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token comment\">// Fix replacement</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>color <span class=\"token operator\">==</span> BLACK<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token comment\">// 恢复颜色分配</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token function\">fixAfterDeletion</span><span class=\"token punctuation\">(</span>replacement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>parent <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// return if we are the only node.</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token comment\">// 红黑书中父节点为空的只能是根节点。</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        root <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//  No children. Use self as phantom replacement and unlink.</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>color <span class=\"token operator\">==</span> BLACK<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token function\">fixAfterDeletion</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>parent <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> p<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                p<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> p<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                p<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            p<span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">fixAfterDeletion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token comment\">// 不是根节点，颜色为黑色，调整结构</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">!=</span> root <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> BLACK<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token comment\">// 判断 x 是否为左孩子</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token comment\">//x 的兄弟节点</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> sib <span class=\"token operator\">=</span> <span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token comment\">// 若兄弟节点是红色</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> RED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 设置兄弟节点变为黑色</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 父节点设置为红色</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 左旋父节点</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                sib <span class=\"token operator\">=</span> <span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 重新设置 x 的兄弟节点</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">==</span> BLACK <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                <span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> BLACK<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 兄弟节点的两个孩子都是黑色的重新设置兄弟节点的颜色，修改为红色</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                x <span class=\"token operator\">=</span> <span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 将 x 定位到父节点</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> BLACK<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 兄弟节点的右孩子是黑色的，左孩子是红色的</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                    <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 设置左孩子节点为黑色</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                    <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 兄弟节点为红色</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                    <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 右旋</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                    sib <span class=\"token operator\">=</span> <span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 右旋后重新设置兄弟节点</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">,</span> <span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 兄弟节点颜色设置和父节点的颜色相同</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 父节点设置为黑色</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 将兄弟节点的有孩子设置为黑色</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 左旋</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                x <span class=\"token operator\">=</span> root<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 设置 x 为根节点</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// symmetric</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            <span class=\"token comment\">//x 为父节点的右节点，参考上面的操作</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> sib <span class=\"token operator\">=</span> <span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> RED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>                <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>                sib <span class=\"token operator\">=</span> <span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> BLACK <span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> BLACK<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>                    <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>                    x <span class=\"token operator\">=</span> <span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> BLACK<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                    <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">rightOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>                    <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>                    <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>                    sib <span class=\"token operator\">=</span> <span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">,</span> <span class=\"token function\">colorOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>                <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">leftOf</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>                <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span><span class=\"token function\">parentOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>                x <span class=\"token operator\">=</span> root<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> BLACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以排序二叉树的方法删除指定节点。删除的节点存在三种情况：</p>\n<ul>\n<li>被删除节点，没有左右孩子节点，直接删除即可</li>\n<li>被删除节点，有一个孩子节点，那么让它的孩子节点指向它的父节点即可</li>\n<li>本删除的节点，有两个非空的孩子节点，那么需要找到该节点的前驱或者后继节点，更换元素值，在将前驱或者后继节点删除（任意一个节点的前驱或者后继都必定至多有一个非空的子节点，可以按照前面的两种情形进行操作）</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "数据结构",
                "java"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-HashMap/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-HashMap/",
            "title": "数据结构-HashMap",
            "date_published": "2020-10-15T06:44:39.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h1>\n<p>文章的内容基于 JDK1.7 进行分析，之所以选用这个版本，是因为 1.8 的有些类做了改动，增加了阅读的难度，虽然是 1.7，但是对于 1.8 做了重大改动的内容，文章也会进行说明。</p>\n<p>HashMap 基于 Map 接口实现，元素以键值对的方式存储，并且允许使用 null 建和 null　值，　因为 key 不允许重复，因此只能有一个键为 null, 另外 HashMap 不能保证放入元素的顺序，它是无序的，和放入的顺序并不能相同。HashMap 是线程不安全的。</p>\n<h1 id=\"继承关系\"><a class=\"anchor\" href=\"#继承关系\">#</a> 继承关系</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Cloneable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Serializable</span></pre></td></tr></table></figure><h1 id=\"实现接口\"><a class=\"anchor\" href=\"#实现接口\">#</a> 实现接口</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Cloneable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"基本属性\"><a class=\"anchor\" href=\"#基本属性\">#</a> 基本属性</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> DEFAULT_INITIAL_CAPACITY <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 默认初始化大小 16 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">float</span> DEFAULT_LOAD_FACTOR <span class=\"token operator\">=</span> <span class=\"token number\">0.75f</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 负载因子 0.75</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> EMPTY_TABLE <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 初始化的默认数组</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">transient</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//HashMap 中元素的数量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> threshold<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 判断是否需要调整 HashMap 的容量</span></pre></td></tr></table></figure><h1 id=\"hashmap数据结构\"><a class=\"anchor\" href=\"#hashmap数据结构\">#</a> HashMap 数据结构</h1>\n<div class=\"note info\">\n<ol>\n<li>什么是链表<br />\n链表是由一系列非连续的节点组成的存储结构，简单分下类的话，链表又分为单向链表和双向链表，而单向 / 双向链表又可以分为循环链表和非循环链表，下面简单就这四种链表进行图解说明。</li>\n<li>单向链表<br />\n单向链表就是通过每个结点的指针指向下一个结点从而链接起来的结构，最后一个节点的 next 指向 null<br />\n<img data-src=\"2.png\" alt=\"\" /></li>\n<li>单向循环链表<br />\n单向循环链表和单向列表的不同是，最后一个节点的 next 不是指向 null，而是指向 head 节点，形成一个 “环”<br />\n<img data-src=\"3.png\" alt=\"\" /></li>\n<li>双向链表<br />\n从名字就可以看出，双向链表是包含两个指针的，pre 指向前一个节点，next 指向后一个节点，但是第一个节点 head 的 pre 指向 null，最后一个节点的 tail 指向 null<br />\n<img data-src=\"4.png\" alt=\"\" /></li>\n<li>双向循环链表<br />\n双向循环链表和双向链表的不同在于，第一个节点的 pre 指向最后一个节点，最后一个节点的 next 指向第一个节点，也形成一个 “环”。而 LinkedList 就是基于双向 &gt; 循环链表设计的<br />\n<img data-src=\"5.png\" alt=\"\" /></li>\n</ol>\n</div>\n<p>在进行源码解析之前，先从总体上对 HashMap 的数据存储结构进行一个大体上的说明。</p>\n<p><img data-src=\"1.png\" alt=\"\" /></p>\n<p>存储结构如上图所示。</p>\n<p>HashMap 采用 Entry 数组来存储 key-value 对，每一个键值对组成了一个 Entry 实体，Entry 类实际上是一个单向的链表结构，它具有 Next 指针，可以连接下一个 Entry 实体，依次来解决 Hash 冲突的问题，因为 HashMap 是按照 Key 的 hash 值来计算 Entry 在 HashMap 中存储的位置的，如果 hash 值相同，而 key 内容不相等，那么就用链表来解决这种 hash 冲突。</p>\n<h1 id=\"源码解析\"><a class=\"anchor\" href=\"#源码解析\">#</a> 源码解析</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Cloneable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 默认初始化的容量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> DEFAULT_INITIAL_CAPACITY <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// aka 16</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 最大的容量</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> MAXIMUM_CAPACITY <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 负载因子，当容量达到 75% 时就进行扩容操作</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">float</span> DEFAULT_LOAD_FACTOR <span class=\"token operator\">=</span> <span class=\"token number\">0.75f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 当数组还没有进行扩容操作的时候，共享的一个空表对象</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> EMPTY_TABLE <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">//table, 进行扩容操作，长度必须 2 的 n 次方</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">transient</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> table <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> EMPTY_TABLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">//Map 中包含的元素数量</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">transient</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 阈值，用于判断是否需要扩容（threshold = 容量 * 负载因子）</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">int</span> threshold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 加载因子实际的大小</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token keyword\">float</span> loadFactor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">//HashMap 改变的次数</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">transient</span> <span class=\"token keyword\">int</span> modCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> ALTERNATIVE_HASHING_THRESHOLD_DEFAULT <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">// 内部类，通过 vm 来修改 threshold 的值</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Holder</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>         * Table capacity above which to switch to use alternative hashing.</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> ALTERNATIVE_HASHING_THRESHOLD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token class-name\">String</span> altThreshold <span class=\"token operator\">=</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span>AccessController</span><span class=\"token punctuation\">.</span><span class=\"token function\">doPrivileged</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">.</span></span>GetPropertyAction</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                    <span class=\"token string\">\"jdk.map.althashing.threshold\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取值</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">int</span> threshold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                threshold <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> altThreshold<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 修改值</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                        <span class=\"token operator\">?</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>altThreshold<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                        <span class=\"token operator\">:</span> ALTERNATIVE_HASHING_THRESHOLD_DEFAULT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token comment\">// disable alternative hashing if -1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>threshold <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                    threshold <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置为 Integer 能表示的最大值</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>threshold <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value must be positive integer.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IllegalArgumentException</span> failed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal value for 'jdk.map.althashing.threshold'\"</span><span class=\"token punctuation\">,</span> failed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            ALTERNATIVE_HASHING_THRESHOLD <span class=\"token operator\">=</span> threshold<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 返回</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\">//HashCode 的初始值为 0 </span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">transient</span> <span class=\"token keyword\">int</span> hashSeed <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token comment\">// 构造方法，指定初始容量和负载因子</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> initialCapacity<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> loadFactor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>initialCapacity <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal initial capacity: \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                                               initialCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>initialCapacity <span class=\"token operator\">></span> MAXIMUM_CAPACITY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            initialCapacity <span class=\"token operator\">=</span> MAXIMUM_CAPACITY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loadFactor <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">Float</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>loadFactor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal load factor: \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                                               loadFactor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loadFactor <span class=\"token operator\">=</span> loadFactor<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置负载因子</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        threshold <span class=\"token operator\">=</span> initialCapacity<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始容量</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不做任何操作</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token comment\">// 构造方法，指定了初始容量</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> initialCapacity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>initialCapacity<span class=\"token punctuation\">,</span> DEFAULT_LOAD_FACTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token comment\">// 无参构造方法，使用默认的容量大小和负载因子，并调用其他的构造方法</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>DEFAULT_INITIAL_CAPACITY<span class=\"token punctuation\">,</span> DEFAULT_LOAD_FACTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token comment\">// 构造函数，参数为指定的 Map 集合</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> DEFAULT_LOAD_FACTOR<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                      DEFAULT_INITIAL_CAPACITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> DEFAULT_LOAD_FACTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token function\">inflateTable</span><span class=\"token punctuation\">(</span>threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token function\">putAllForCreate</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token comment\">// 选择合适的容量值，最好是 number 的 2 的幂数</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">roundUpToPowerOf2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token comment\">// assert number >= 0 : \"number must be non-negative\";</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token keyword\">return</span> number <span class=\"token operator\">>=</span> MAXIMUM_CAPACITY</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                <span class=\"token operator\">?</span> MAXIMUM_CAPACITY</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>number <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">highestOneBit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token comment\">// 扩充表，HashMap 初始化时是一个空数组，此方法执行重新复制操作，创建一个新的 Entry []</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">inflateTable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> toSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token comment\">// Find a power of 2 >= toSize</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">int</span> capacity <span class=\"token operator\">=</span> <span class=\"token function\">roundUpToPowerOf2</span><span class=\"token punctuation\">(</span>toSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//capacity 为 2 的幂数，大于等于 toSize</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        threshold <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>capacity <span class=\"token operator\">*</span> loadFactor<span class=\"token punctuation\">,</span> MAXIMUM_CAPACITY <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        table <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">[</span>capacity<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 新建数组，并重新赋值</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token function\">initHashSeedAsNeeded</span><span class=\"token punctuation\">(</span>capacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 修改 hashSeed </span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token comment\">// internal utilities</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token comment\">// 与虚拟机设置有关，改变 hashSeed 的值</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">initHashSeedAsNeeded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> capacity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token keyword\">boolean</span> currentAltHashing <span class=\"token operator\">=</span> hashSeed <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        <span class=\"token keyword\">boolean</span> useAltHashing <span class=\"token operator\">=</span> sun<span class=\"token punctuation\">.</span>misc<span class=\"token punctuation\">.</span>VM<span class=\"token punctuation\">.</span><span class=\"token function\">isBooted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                <span class=\"token punctuation\">(</span>capacity <span class=\"token operator\">>=</span> <span class=\"token class-name\">Holder</span><span class=\"token punctuation\">.</span>ALTERNATIVE_HASHING_THRESHOLD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token keyword\">boolean</span> switching <span class=\"token operator\">=</span> currentAltHashing <span class=\"token operator\">^</span> useAltHashing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>switching<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            hashSeed <span class=\"token operator\">=</span> useAltHashing</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                <span class=\"token operator\">?</span> <span class=\"token class-name\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>misc<span class=\"token punctuation\">.</span></span>Hashing</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomHashSeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        <span class=\"token keyword\">return</span> switching<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token comment\">// 计算 k 的 hash 值</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token keyword\">int</span> h <span class=\"token operator\">=</span> hashSeed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!=</span> h <span class=\"token operator\">&amp;&amp;</span> k <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>misc<span class=\"token punctuation\">.</span></span>Hashing</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringHash32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        h <span class=\"token operator\">^=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        <span class=\"token comment\">// This function ensures that hashCodes that differ only by</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        <span class=\"token comment\">// constant multiples at each bit position have a bounded</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>        <span class=\"token comment\">// number of collisions (approximately 8 at default load factor).</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        h <span class=\"token operator\">^=</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">>>></span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">>>></span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        <span class=\"token keyword\">return</span> h <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">>>></span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">>>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token comment\">// 根据 hashcode, 和表的长度，返回存放的索引</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        <span class=\"token comment\">// assert Integer.bitCount(length) == 1 : \"length must be a non-zero power of 2\";</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        <span class=\"token keyword\">return</span> h <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token comment\">// 返回 Map 中键值对的数量</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    <span class=\"token comment\">// 判断集合是否为空</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>        <span class=\"token keyword\">return</span> size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token comment\">// 返回 key ，对应的值</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">getForNullKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> entry <span class=\"token operator\">=</span> <span class=\"token function\">getEntry</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> entry <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    <span class=\"token comment\">// 返回 null 键的值</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">V</span> <span class=\"token function\">getForNullKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>    <span class=\"token comment\">// 是否包含键为 key 的元素</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">getEntry</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token comment\">// 返回键为 key 的 entry 实体，不存在返回 null</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getEntry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>        <span class=\"token keyword\">int</span> hash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 计算 key 的 hash 值</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>        <span class=\"token comment\">// 定位到 Entry [] 数组中的存储位置，开始遍历该位置是否有链表存在</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span><span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>             e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>             e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>            <span class=\"token class-name\">Object</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>            <span class=\"token comment\">// 判断是否有键位 key 的 entry 实体。有就返回。</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>      <span class=\"token comment\">// 向 map 中添加 key-value 键值对，如果可以包含了 key 的映射，则旧的 value 将被替换</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">K</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table <span class=\"token operator\">==</span> EMPTY_TABLE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">//table 如果为空，进行初始化操作</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>            <span class=\"token function\">inflateTable</span><span class=\"token punctuation\">(</span>threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//key 为 null , 放入数组的 0 号索引位置</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">putForNullKey</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>        <span class=\"token keyword\">int</span> hash <span class=\"token operator\">=</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 计算 key 的 hash 值</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 计算 key 在 entry 数组中存储的位置</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>        <span class=\"token comment\">// 判断该位置是否已经有元素存在</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>            <span class=\"token class-name\">Object</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>            <span class=\"token comment\">// 判断 key 是否已经在 map 中存在，若存在用新的 value 替换掉旧的 value, 并返回旧的 value</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>                <span class=\"token class-name\">V</span> oldValue <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>                e<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">recordAccess</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 空方法</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>                <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>        modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 修改次数加 1 </span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>        <span class=\"token function\">addEntry</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将 key-value 转化为 Entry 实体，添加到 Map 中</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>    <span class=\"token comment\">//key = null, 对应的操作，keyweinull , 存放在 entry [] 中的 0 号位置。并用新值替换旧值</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">V</span> <span class=\"token function\">putForNullKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">V</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>                <span class=\"token class-name\">V</span> oldValue <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>                e<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">recordAccess</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>                <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>        modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>        <span class=\"token function\">addEntry</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>    <span class=\"token comment\">// 私有方法，添加元素</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">putForCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">K</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>        <span class=\"token keyword\">int</span> hash <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 计算 hash 值</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 计算在 HashMap 中的存储位置</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>        <span class=\"token comment\">// 遍历 i 号存储位置的链表</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>            <span class=\"token class-name\">Object</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>                e<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>        <span class=\"token comment\">// 创建 Entry 实体，存放到 i 号位置中</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>        <span class=\"token function\">createEntry</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>    <span class=\"token comment\">// 将 m 中的元素添加到 HashMap 中</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">putAllForCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">:</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>            <span class=\"token function\">putForCreate</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>    <span class=\"token comment\">// 扩容操作</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> newCapacity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> oldTable <span class=\"token operator\">=</span> table<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 将 table 赋值给新的引用</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>        <span class=\"token keyword\">int</span> oldCapacity <span class=\"token operator\">=</span> oldTable<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldCapacity <span class=\"token operator\">==</span> MAXIMUM_CAPACITY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>            threshold <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>        <span class=\"token comment\">// 创建一个长度为 newCapacity 的数组</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> newTable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">[</span>newCapacity<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"296\"></td><td><pre>        <span class=\"token comment\">// 将 table 中的元素复制到 newTable 中</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>        <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>newTable<span class=\"token punctuation\">,</span> <span class=\"token function\">initHashSeedAsNeeded</span><span class=\"token punctuation\">(</span>newCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>        table <span class=\"token operator\">=</span> newTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>        <span class=\"token comment\">// 更改阈值</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>        threshold <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>newCapacity <span class=\"token operator\">*</span> loadFactor<span class=\"token punctuation\">,</span> MAXIMUM_CAPACITY <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>    <span class=\"token comment\">// 将 table 中的数据复制到 newTable 中</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> newTable<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> rehash<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>        <span class=\"token keyword\">int</span> newCapacity <span class=\"token operator\">=</span> newTable<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">:</span> table<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>                <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> next <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rehash<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 是否需要重新计算 Hash 值</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>                    e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>                <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">,</span> newCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 计算存储的位置</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>                e<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> newTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>                newTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>                e <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>    <span class=\"token comment\">// 将 m 中的元素全部添加到 HashMap 中</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>        <span class=\"token keyword\">int</span> numKeysToBeAdded <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>numKeysToBeAdded <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 为空返回</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table <span class=\"token operator\">==</span> EMPTY_TABLE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 是否需要执行初始化操作</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>            <span class=\"token function\">inflateTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>numKeysToBeAdded <span class=\"token operator\">*</span> loadFactor<span class=\"token punctuation\">,</span> threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>        <span class=\"token comment\">// 判断是否需要扩容</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>numKeysToBeAdded <span class=\"token operator\">></span> threshold<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>            <span class=\"token keyword\">int</span> targetCapacity <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>numKeysToBeAdded <span class=\"token operator\">/</span> loadFactor <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>targetCapacity <span class=\"token operator\">></span> MAXIMUM_CAPACITY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>                targetCapacity <span class=\"token operator\">=</span> MAXIMUM_CAPACITY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>            <span class=\"token keyword\">int</span> newCapacity <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>newCapacity <span class=\"token operator\">&lt;</span> targetCapacity<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>                newCapacity <span class=\"token operator\">&lt;&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newCapacity <span class=\"token operator\">></span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>                <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>newCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>        <span class=\"token comment\">// 执行添加操作</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">:</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>            <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>    <span class=\"token comment\">// 删除 key , 并返回 key 对应的 value 值</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> <span class=\"token function\">removeEntryForKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>    <span class=\"token comment\">// 返回 key 对应的实体</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">removeEntryForKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>        <span class=\"token keyword\">int</span> hash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 计算 key 的 hash 值</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 计算存储位置</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> prev <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> prev<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>            <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> next <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>            <span class=\"token class-name\">Object</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>                modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>                size<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prev <span class=\"token operator\">==</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>                    table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>                    prev<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 链表删除</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">recordRemoval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>            prev <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>            e <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>        <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>    <span class=\"token comment\">// 删除一个指定的实体</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">removeMapping</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>o <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>        <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> entry <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"389\"></td><td><pre>        <span class=\"token class-name\">Object</span> key <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>        <span class=\"token keyword\">int</span> hash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"392\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> prev <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"393\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> prev<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre>            <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> next <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"397\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>                modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>                size<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prev <span class=\"token operator\">==</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre>                    table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre>                    prev<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">recordRemoval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre>            prev <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>            e <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"409\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>        <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre></pre></td></tr><tr><td data-num=\"414\"></td><td><pre>    <span class=\"token comment\">// 删除 map</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"416\"></td><td><pre>        modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"417\"></td><td><pre>        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"418\"></td><td><pre>        size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"420\"></td><td><pre></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>    <span class=\"token comment\">// 判断是否包含指定 value 的实体</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">containsValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">containsNullValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre></pre></td></tr><tr><td data-num=\"426\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> tab <span class=\"token operator\">=</span> table<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> tab<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span> e <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span> e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">;</span> e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"429\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"430\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>    <span class=\"token comment\">// 是否包含 value== null </span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">containsNullValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> tab <span class=\"token operator\">=</span> table<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> tab<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"438\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span> e <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span> e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">;</span> e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"440\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"441\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"442\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"443\"></td><td><pre></pre></td></tr><tr><td data-num=\"444\"></td><td><pre>    <span class=\"token comment\">// 重写克隆方法</span></pre></td></tr><tr><td data-num=\"445\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>        <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"448\"></td><td><pre>            result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CloneNotSupportedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre>            <span class=\"token comment\">// assert false;</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>table <span class=\"token operator\">!=</span> EMPTY_TABLE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"453\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">inflateTable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre>                <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"455\"></td><td><pre>                    size <span class=\"token operator\">*</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> loadFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">4.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"456\"></td><td><pre>                    <span class=\"token comment\">// we have limits...</span></pre></td></tr><tr><td data-num=\"457\"></td><td><pre>                    <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">.</span>MAXIMUM_CAPACITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"458\"></td><td><pre>               table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"459\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"460\"></td><td><pre>        result<span class=\"token punctuation\">.</span>entrySet <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"461\"></td><td><pre>        result<span class=\"token punctuation\">.</span>modCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"462\"></td><td><pre>        result<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"463\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"464\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">putAllForCreate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"465\"></td><td><pre></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"467\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"468\"></td><td><pre>    <span class=\"token comment\">// 静态内部类 ，Entry 用来存储键值对，HashMap 中的 Entry [] 用来存储 entry</span></pre></td></tr><tr><td data-num=\"469\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"470\"></td><td><pre>        <span class=\"token keyword\">final</span> <span class=\"token class-name\">K</span> key<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 键</span></pre></td></tr><tr><td data-num=\"471\"></td><td><pre>        <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 值</span></pre></td></tr><tr><td data-num=\"472\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> next<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 采用链表存储 HashCode 相同的键值对，next 指向下一个 entry</span></pre></td></tr><tr><td data-num=\"473\"></td><td><pre>        <span class=\"token keyword\">int</span> hash<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//entry 的 hash 值</span></pre></td></tr><tr><td data-num=\"474\"></td><td><pre></pre></td></tr><tr><td data-num=\"475\"></td><td><pre>        <span class=\"token comment\">// 构造方法， 负责初始化 entry</span></pre></td></tr><tr><td data-num=\"476\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token class-name\">K</span> k<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> v<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"477\"></td><td><pre>            value <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"478\"></td><td><pre>            next <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"479\"></td><td><pre>            key <span class=\"token operator\">=</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"480\"></td><td><pre>            hash <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"481\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"482\"></td><td><pre></pre></td></tr><tr><td data-num=\"483\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">K</span> <span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"484\"></td><td><pre>            <span class=\"token keyword\">return</span> key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"485\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"486\"></td><td><pre></pre></td></tr><tr><td data-num=\"487\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">V</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"488\"></td><td><pre>            <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"489\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"490\"></td><td><pre></pre></td></tr><tr><td data-num=\"491\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">V</span> <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">V</span> newValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"492\"></td><td><pre>            <span class=\"token class-name\">V</span> oldValue <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>            value <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"494\"></td><td><pre>            <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"495\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"496\"></td><td><pre></pre></td></tr><tr><td data-num=\"497\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>o <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"500\"></td><td><pre>            <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">)</span>o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"501\"></td><td><pre>            <span class=\"token class-name\">Object</span> k1 <span class=\"token operator\">=</span> <span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"502\"></td><td><pre>            <span class=\"token class-name\">Object</span> k2 <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"503\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k1 <span class=\"token operator\">==</span> k2 <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>k1 <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> k1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"504\"></td><td><pre>                <span class=\"token class-name\">Object</span> v1 <span class=\"token operator\">=</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"505\"></td><td><pre>                <span class=\"token class-name\">Object</span> v2 <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"506\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">==</span> v2 <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> v1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"509\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"511\"></td><td><pre></pre></td></tr><tr><td data-num=\"512\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"513\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"514\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"515\"></td><td><pre></pre></td></tr><tr><td data-num=\"516\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"517\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"=\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"518\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"519\"></td><td><pre></pre></td></tr><tr><td data-num=\"520\"></td><td><pre>        <span class=\"token comment\">// 当使用相同的 key 的 value 被覆盖时调用</span></pre></td></tr><tr><td data-num=\"521\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">recordAccess</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"522\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"523\"></td><td><pre></pre></td></tr><tr><td data-num=\"524\"></td><td><pre>        <span class=\"token comment\">// 每移除一个 entry 就被调用一次</span></pre></td></tr><tr><td data-num=\"525\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">recordRemoval</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"526\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"527\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"528\"></td><td><pre></pre></td></tr><tr><td data-num=\"529\"></td><td><pre>    <span class=\"token comment\">// 添加实体</span></pre></td></tr><tr><td data-num=\"530\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">addEntry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hash<span class=\"token punctuation\">,</span> <span class=\"token class-name\">K</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bucketIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"531\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">>=</span> threshold<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> table<span class=\"token punctuation\">[</span>bucketIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"532\"></td><td><pre>            <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"533\"></td><td><pre>            hash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> key<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"534\"></td><td><pre>            bucketIndex <span class=\"token operator\">=</span> <span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"535\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"536\"></td><td><pre></pre></td></tr><tr><td data-num=\"537\"></td><td><pre>        <span class=\"token function\">createEntry</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> bucketIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"538\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"539\"></td><td><pre></pre></td></tr><tr><td data-num=\"540\"></td><td><pre>    <span class=\"token comment\">// 创建实体</span></pre></td></tr><tr><td data-num=\"541\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">createEntry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hash<span class=\"token punctuation\">,</span> <span class=\"token class-name\">K</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bucketIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"542\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span>bucketIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"543\"></td><td><pre>        table<span class=\"token punctuation\">[</span>bucketIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"544\"></td><td><pre>        size<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"545\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"546\"></td><td><pre>    <span class=\"token comment\">// 内部类实现 Iterator 接口，进行遍历操作</span></pre></td></tr><tr><td data-num=\"547\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HashIterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"548\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> next<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// next entry to return</span></pre></td></tr><tr><td data-num=\"549\"></td><td><pre>        <span class=\"token keyword\">int</span> expectedModCount<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// For fast-fail</span></pre></td></tr><tr><td data-num=\"550\"></td><td><pre>        <span class=\"token keyword\">int</span> index<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// current slot</span></pre></td></tr><tr><td data-num=\"551\"></td><td><pre>        <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> current<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// current entry</span></pre></td></tr><tr><td data-num=\"552\"></td><td><pre></pre></td></tr><tr><td data-num=\"553\"></td><td><pre>        <span class=\"token class-name\">HashIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"554\"></td><td><pre>            expectedModCount <span class=\"token operator\">=</span> modCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"555\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// advance to first entry</span></pre></td></tr><tr><td data-num=\"556\"></td><td><pre>                <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> t <span class=\"token operator\">=</span> table<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"557\"></td><td><pre>                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>next <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>index<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"558\"></td><td><pre>                    <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"559\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"560\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"561\"></td><td><pre>        <span class=\"token comment\">// 是否有下一个元素</span></pre></td></tr><tr><td data-num=\"562\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"563\"></td><td><pre>            <span class=\"token keyword\">return</span> next <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"564\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"565\"></td><td><pre>        <span class=\"token comment\">// 返回下一个元素</span></pre></td></tr><tr><td data-num=\"566\"></td><td><pre>        <span class=\"token keyword\">final</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">nextEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"567\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>modCount <span class=\"token operator\">!=</span> expectedModCount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"568\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentModificationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"569\"></td><td><pre>            <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"570\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"571\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NoSuchElementException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"572\"></td><td><pre></pre></td></tr><tr><td data-num=\"573\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>next <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"574\"></td><td><pre>                <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> t <span class=\"token operator\">=</span> table<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"575\"></td><td><pre>                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>next <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>index<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"576\"></td><td><pre>                    <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"577\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"578\"></td><td><pre>            current <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"579\"></td><td><pre>            <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"580\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"581\"></td><td><pre>        <span class=\"token comment\">// 删除</span></pre></td></tr><tr><td data-num=\"582\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"583\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"584\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"585\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>modCount <span class=\"token operator\">!=</span> expectedModCount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"586\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentModificationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"587\"></td><td><pre>            <span class=\"token class-name\">Object</span> k <span class=\"token operator\">=</span> current<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"588\"></td><td><pre>            current <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"589\"></td><td><pre>            <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeEntryForKey</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"590\"></td><td><pre>            expectedModCount <span class=\"token operator\">=</span> modCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"591\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"592\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"593\"></td><td><pre></pre></td></tr><tr><td data-num=\"594\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ValueIterator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HashIterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"595\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"596\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">nextEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"597\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"598\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"599\"></td><td><pre></pre></td></tr><tr><td data-num=\"600\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">KeyIterator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HashIterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"601\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">K</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"602\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">nextEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"603\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"604\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"605\"></td><td><pre></pre></td></tr><tr><td data-num=\"606\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EntryIterator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HashIterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"607\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"608\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">nextEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"609\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"610\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"611\"></td><td><pre></pre></td></tr><tr><td data-num=\"612\"></td><td><pre>    <span class=\"token comment\">// Subclass overrides these to alter behavior of views' iterator() method</span></pre></td></tr><tr><td data-num=\"613\"></td><td><pre>    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">newKeyIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"614\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">KeyIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"615\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"616\"></td><td><pre>    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">newValueIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"617\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ValueIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"618\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"619\"></td><td><pre>    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">newEntryIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"620\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EntryIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"621\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"622\"></td><td><pre></pre></td></tr><tr><td data-num=\"623\"></td><td><pre></pre></td></tr><tr><td data-num=\"624\"></td><td><pre>    <span class=\"token comment\">// Views</span></pre></td></tr><tr><td data-num=\"625\"></td><td><pre></pre></td></tr><tr><td data-num=\"626\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">transient</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> entrySet <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"627\"></td><td><pre></pre></td></tr><tr><td data-num=\"628\"></td><td><pre>    <span class=\"token comment\">// 返回 key 组成的 Set 集合</span></pre></td></tr><tr><td data-num=\"629\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"630\"></td><td><pre>        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> ks <span class=\"token operator\">=</span> keySet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"631\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>ks <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> ks <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>keySet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">KeySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"632\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"633\"></td><td><pre></pre></td></tr><tr><td data-num=\"634\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">KeySet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"635\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"636\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">newKeyIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"637\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"638\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"639\"></td><td><pre>            <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"640\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"641\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"642\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"643\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"644\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"645\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeEntryForKey</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"646\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"647\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"648\"></td><td><pre>            <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"649\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"650\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"651\"></td><td><pre></pre></td></tr><tr><td data-num=\"652\"></td><td><pre>    <span class=\"token comment\">// 返回 Value 组成的集合</span></pre></td></tr><tr><td data-num=\"653\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"654\"></td><td><pre>        <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> vs <span class=\"token operator\">=</span> values<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"655\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>vs <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> vs <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>values <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"656\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"657\"></td><td><pre></pre></td></tr><tr><td data-num=\"658\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Values</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractCollection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"659\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"660\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">newValueIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"661\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"662\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"663\"></td><td><pre>            <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"664\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"665\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"666\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">containsValue</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"667\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"668\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"669\"></td><td><pre>            <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"670\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"671\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"672\"></td><td><pre></pre></td></tr><tr><td data-num=\"673\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"674\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"675\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">entrySet0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"676\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"677\"></td><td><pre></pre></td></tr><tr><td data-num=\"678\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">entrySet0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"679\"></td><td><pre>        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> es <span class=\"token operator\">=</span> entrySet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"680\"></td><td><pre>        <span class=\"token keyword\">return</span> es <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> es <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>entrySet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EntrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"681\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"682\"></td><td><pre></pre></td></tr><tr><td data-num=\"683\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EntrySet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"684\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"685\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">newEntryIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"686\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"687\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"688\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>o <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"689\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"690\"></td><td><pre>            <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"691\"></td><td><pre>            <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> candidate <span class=\"token operator\">=</span> <span class=\"token function\">getEntry</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"692\"></td><td><pre>            <span class=\"token keyword\">return</span> candidate <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> candidate<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"693\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"694\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"695\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">removeMapping</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"696\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"697\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"698\"></td><td><pre>            <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"699\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"700\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"701\"></td><td><pre>            <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"702\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"703\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"704\"></td><td><pre></pre></td></tr><tr><td data-num=\"705\"></td><td><pre>    <span class=\"token comment\">// 将对象写入到输出流中</span></pre></td></tr><tr><td data-num=\"706\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>ObjectOutputStream</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"707\"></td><td><pre>        <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span></pre></td></tr><tr><td data-num=\"708\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"709\"></td><td><pre>        <span class=\"token comment\">// Write out the threshold, loadfactor, and any hidden stuff</span></pre></td></tr><tr><td data-num=\"710\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">defaultWriteObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"711\"></td><td><pre></pre></td></tr><tr><td data-num=\"712\"></td><td><pre>        <span class=\"token comment\">// Write out number of buckets</span></pre></td></tr><tr><td data-num=\"713\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">==</span>EMPTY_TABLE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"714\"></td><td><pre>            s<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token function\">roundUpToPowerOf2</span><span class=\"token punctuation\">(</span>threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"715\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"716\"></td><td><pre>           s<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"717\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"718\"></td><td><pre></pre></td></tr><tr><td data-num=\"719\"></td><td><pre>        <span class=\"token comment\">// Write out size (number of Mappings)</span></pre></td></tr><tr><td data-num=\"720\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"721\"></td><td><pre></pre></td></tr><tr><td data-num=\"722\"></td><td><pre>        <span class=\"token comment\">// Write out keys and values (alternating)</span></pre></td></tr><tr><td data-num=\"723\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"724\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">:</span> <span class=\"token function\">entrySet0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"725\"></td><td><pre>                s<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"726\"></td><td><pre>                s<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"727\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"728\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"729\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"730\"></td><td><pre></pre></td></tr><tr><td data-num=\"731\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> serialVersionUID <span class=\"token operator\">=</span> <span class=\"token number\">362498820763181265L</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"732\"></td><td><pre>    <span class=\"token comment\">// 从输入流中读取对象</span></pre></td></tr><tr><td data-num=\"733\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>ObjectInputStream</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"734\"></td><td><pre>         <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ClassNotFoundException</span></pre></td></tr><tr><td data-num=\"735\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"736\"></td><td><pre>        <span class=\"token comment\">// Read in the threshold (ignored), loadfactor, and any hidden stuff</span></pre></td></tr><tr><td data-num=\"737\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">defaultReadObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"738\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loadFactor <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">Float</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>loadFactor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"739\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidObjectException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal load factor: \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"740\"></td><td><pre>                                               loadFactor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"741\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"742\"></td><td><pre></pre></td></tr><tr><td data-num=\"743\"></td><td><pre>        <span class=\"token comment\">// set other fields that need values</span></pre></td></tr><tr><td data-num=\"744\"></td><td><pre>        table <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> EMPTY_TABLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"745\"></td><td><pre></pre></td></tr><tr><td data-num=\"746\"></td><td><pre>        <span class=\"token comment\">// Read in number of buckets</span></pre></td></tr><tr><td data-num=\"747\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ignored.</span></pre></td></tr><tr><td data-num=\"748\"></td><td><pre></pre></td></tr><tr><td data-num=\"749\"></td><td><pre>        <span class=\"token comment\">// Read number of mappings</span></pre></td></tr><tr><td data-num=\"750\"></td><td><pre>        <span class=\"token keyword\">int</span> mappings <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"751\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mappings <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"752\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidObjectException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal mappings count: \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"753\"></td><td><pre>                                               mappings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"754\"></td><td><pre></pre></td></tr><tr><td data-num=\"755\"></td><td><pre>        <span class=\"token comment\">// capacity chosen by number of mappings and desired load (if >= 0.25)</span></pre></td></tr><tr><td data-num=\"756\"></td><td><pre>        <span class=\"token keyword\">int</span> capacity <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"757\"></td><td><pre>                    mappings <span class=\"token operator\">*</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> loadFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">4.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"758\"></td><td><pre>                    <span class=\"token comment\">// we have limits...</span></pre></td></tr><tr><td data-num=\"759\"></td><td><pre>                    <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">.</span>MAXIMUM_CAPACITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"760\"></td><td><pre></pre></td></tr><tr><td data-num=\"761\"></td><td><pre>        <span class=\"token comment\">// allocate the bucket array;</span></pre></td></tr><tr><td data-num=\"762\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mappings <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"763\"></td><td><pre>            <span class=\"token function\">inflateTable</span><span class=\"token punctuation\">(</span>capacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"764\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"765\"></td><td><pre>            threshold <span class=\"token operator\">=</span> capacity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"766\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"767\"></td><td><pre></pre></td></tr><tr><td data-num=\"768\"></td><td><pre>        <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Give subclass a chance to do its thing.</span></pre></td></tr><tr><td data-num=\"769\"></td><td><pre></pre></td></tr><tr><td data-num=\"770\"></td><td><pre>        <span class=\"token comment\">// Read the keys and values, and put the mappings in the HashMap</span></pre></td></tr><tr><td data-num=\"771\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> mappings<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"772\"></td><td><pre>            <span class=\"token class-name\">K</span> key <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">)</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"773\"></td><td><pre>            <span class=\"token class-name\">V</span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">)</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"774\"></td><td><pre>            <span class=\"token function\">putForCreate</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"775\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"776\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"777\"></td><td><pre></pre></td></tr><tr><td data-num=\"778\"></td><td><pre>    <span class=\"token comment\">// These methods are used when serializing HashSets</span></pre></td></tr><tr><td data-num=\"779\"></td><td><pre>    <span class=\"token keyword\">int</span>   <span class=\"token function\">capacity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"780\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token function\">loadFactor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> loadFactor<span class=\"token punctuation\">;</span>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"781\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"构造方法\"><a class=\"anchor\" href=\"#构造方法\">#</a> 构造方法</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 无参构造方法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> initialCapacity<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 指定初始容量的构造方法 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> initialCapacity<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> loadFactor<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 指定初始容量和负载因子</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 指定集合，转化为 HashMap</span></pre></td></tr></table></figure><p>HashMap 提供了四个构造方法，构造方法中 ，依靠第三个方法来执行的，但是前三个方法都没有进行数组的初始化操作，即使调用了构造方法，此时存放 HaspMap 中数组元素的 table 表长度依旧为 0 。在第四个构造方法中调用了 inflateTable () 方法完成了 table 的初始化操作，并将 m 中的元素添加到 HashMap 中。</p>\n<h2 id=\"添加方法\"><a class=\"anchor\" href=\"#添加方法\">#</a> 添加方法</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">K</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table <span class=\"token operator\">==</span> EMPTY_TABLE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 是否初始化</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token function\">inflateTable</span><span class=\"token punctuation\">(</span>threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 放置在 0 号位置</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">putForNullKey</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> hash <span class=\"token operator\">=</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 计算 hash 值</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 计算在 Entry [] 中的存储位置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">Object</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token class-name\">V</span> oldValue <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                e<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">recordAccess</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">addEntry</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 添加到 Map 中</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在该方法中，添加键值对时，首先进行 table 是否初始化的判断，如果没有进行初始化（分配空间，Entry [] 数组的长度）。然后进行 key 是否为 null 的判断，如果 key==null , 放置在 Entry [] 的 0 号位置。计算在 Entry [] 数组的存储位置，判断该位置上是否已有元素，如果已经有元素存在，则遍历该 Entry [] 数组位置上的单链表。判断 key 是否存在，如果 key 已经存在，则用新的 value 值，替换点旧的 value 值，并将旧的 value 值返回。如果 key 不存在于 HashMap 中，程序继续向下执行。将 key-vlaue, 生成 Entry 实体，添加到 HashMap 中的 Entry [] 数组中</p>\n<h3 id=\"addentry\"><a class=\"anchor\" href=\"#addentry\">#</a> addEntry()</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * hash hash 值</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * key 键值</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * value value 值</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * bucketIndex Entry [] 数组中的存储索引</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * / </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>void addEntry (int hash, K key, V value, int bucketIndex) &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     if ((size >= threshold) &amp;&amp; (null != table [bucketIndex])) &#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         resize (2 * table.length); // 扩容操作，将数据元素重新计算位置后放入 newTable 中，链表的顺序与之前的顺序相反</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         hash = (null != key) ? hash (key) : 0;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         bucketIndex = indexFor (hash, table.length);</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     &#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    createEntry (hash, key, value, bucketIndex);</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>void createEntry (int hash, K key, V value, int bucketIndex) &#123;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    Entry&lt;K,V> e = table [bucketIndex];</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    table [bucketIndex] = new Entry&lt;>(hash, key, value, e);</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    size++;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>&#125;</span></pre></td></tr></table></figure><p>添加方法的具体操作，在添加之前先进行容量的判断，如果当前容量达到了阈值，并且需要存储到 Entry [] 数组中，先进行扩容操作，扩充的容量为 table 长度的 2 倍。重新计算 hash 值，和数组存储的位置，扩容后的链表顺序与扩容前的链表顺序相反。然后将新添加的 Entry 实体存放到当前 Entry [] 位置链表的头部。<br />\n在 1.8 之前，新插入的元素都是放在了链表的头部位置，但是这种操作在高并发的环境下容易导致死锁，所以 1.8 之后，新插入的元素都放在了链表的尾部。</p>\n<h2 id=\"获取方法\"><a class=\"anchor\" href=\"#获取方法\">#</a> 获取方法</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token comment\">// 返回 table [0] 的 value 值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token function\">getForNullKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> entry <span class=\"token operator\">=</span> <span class=\"token function\">getEntry</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> entry <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getEntry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     <span class=\"token keyword\">int</span> hash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span><span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>         e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>         e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>         <span class=\"token class-name\">Object</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>             <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 get 方法中，首先计算 hash 值，然后调用 indexFor () 方法得到该 key 在 table 中的存储位置，得到该位置的单链表，遍历列表找到 key 和指定 key 内容相等的 Entry，返回 entry.value 值</p>\n<h2 id=\"删除方法\"><a class=\"anchor\" href=\"#删除方法\">#</a> 删除方法</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">V</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> <span class=\"token function\">removeEntryForKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">removeEntryForKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token keyword\">int</span> hash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token function\">indexFor</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> prev <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e <span class=\"token operator\">=</span> prev<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>         <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> next <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>         <span class=\"token class-name\">Object</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>             <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>             modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>             size<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>             <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prev <span class=\"token operator\">==</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                 table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>             <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                 prev<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>             e<span class=\"token punctuation\">.</span><span class=\"token function\">recordRemoval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>             <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>         prev <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>         e <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>删除操作，先计算指定 key 的 hash 值，然后计算出 table 中的存储位置，判断当前位置是否 Entry 实体存在，如果没有直接返回，若当前位置有 Entry 实体存在，则开始遍历列表。定义了三个 Entry 引用，分别为 pre, e ,next。 在循环遍历的过程中，首先判断 pre 和 e 是否相等，若相等表明，table 的当前位置只有一个元素，直接将 table [i] = next = null 。若形成了 pre -&gt; e -&gt; next 的连接关系，判断 e 的 key 是否和指定的 key 相等，若相等则让 pre -&gt; next ,e 失去引用</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<ul>\n<li>HashMap 是基于 hashing 的原理，我们使用 put (key, value) 存储对象到 HashMap 中，使用 get (key) 从 HashMap 中获取对象。</li>\n<li>当我们给 put (key, value) 方法传递键和值时，它先调用 key.hashCode () 方法，返回的 hashCode 值，用于找到 bucket 位置，来储存 Entry 对象。</li>\n<li>Map 提供了一些常用方法，如 keySet ()、entrySet () 等方法。<br />\nkeySet () 方法返回值是 Map 中 key 值的集合；entrySet () 的返回值也是返回一个 Set 集合，此集合的类型为 Map.Entry。</li>\n<li>“如果两个 key 的 hashcode 相同，你如何获取值对象？” 答案：当我们调用 get (key) 方法，HashMap 会使用 key 的 hashcode 值，找到 bucket 位置，然后获取值对象。</li>\n<li>“如果有两个值对象，储存在同一个 bucket ？” 答案：将会遍历链表直到找到值对象。</li>\n<li>“这时会问因为你并没有值对象去比较，你是如何确定确定找到值对象的？” 答案：找到 bucket 位置之后，会调用 keys.equals () 方法，去找到链表中正确的节点，最终找到要找的值对象。</li>\n<li>HashMap 中主要是通过 key 的 hashCode 来计算 hash 值的，只要 hashCode 相同，计算出来的 hash 值就一样。</li>\n<li>如果存储的对象对多了，就有可能不同的对象所算出来的 hash 值是相同的，这就出现了所谓的 hash 冲突。</li>\n<li>学过数据结构的同学都知道，解决 hash 冲突的方法有很多，HashMap 底层是通过链表来解决 hash 冲突的。</li>\n<li>HashMap 是基于哈希表的 Map 接口的实现。</li>\n<li>此实现提供所有可选的映射操作，并允许使用 null 值和 null 键。（除了非同步和允许使用 null 之外，HashMap 类与 Hashtable 大致相同。）</li>\n<li>此类不保证映射的顺序，特别是它不保证该顺序恒久不变。</li>\n<li>值得注意的是 HashMap 不是线程安全的，如果想要线程安全的 HashMap，可以通过 Collections 类的静态方法 synchronizedMap 获得线程安全的 HashMap。</li>\n</ul>\n<h1 id=\"完美的回答\"><a class=\"anchor\" href=\"#完美的回答\">#</a> 完美的回答：</h1>\n<ul>\n<li>HashMap 基于 hashing 原理，我们通过 put (key,value) 和 get (key) 方法储存和获取对象。</li>\n<li>当储存对象时，我们将键值对传递给 put (key,value) 方法时，它调用键对象 key 的 hashCode () 方法来计算 hashcode，然后找到 bucket 位置，来储存值对象 value。</li>\n<li>当获取对象时，通过 key 的 equals () 方法找到正确的键值对 key-value，然后返回值对象 value。</li>\n<li>HashMap 使用链表来解决碰撞问题，当发生碰撞了，对象将会储存在链表的下一个节点中。</li>\n<li>HashMap 在每个链表节点中，储存 键值对 key-value 对象。</li>\n<li>当两个不同的键对象 key 的 hashcode 相同时，会发生什么？它们会储存在同一个 bucket 位置的链表中，并通过键对象 key 的 equals () 方法用来找到键值对 key-value。</li>\n</ul>\n<h1 id=\"jdk-18的-改变\"><a class=\"anchor\" href=\"#jdk-18的-改变\">#</a> JDK 1.8 的 改变</h1>\n<p>在 JDK1.8 之前，HashMap 采用数组 + 链表实现，即使用链表处理冲突，同一 hash 值的节点都存储在一个链表里。但是当位于一个桶中的元素较多，即 hash 值相等的元素较多时，通过 key 值依次查找的效率较低。而 JDK1.8 中，HashMap 采用数组 + 链表 + 红黑树实现，当链表长度超过阈值（8）时，将链表转换为红黑树，这样大大减少了查找时间。</p>\n<h2 id=\"红黑树数据结构\"><a class=\"anchor\" href=\"#红黑树数据结构\">#</a> 红黑树数据结构</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">TreeNode</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">></span></span> parent<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 父节点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">TreeNode</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">></span></span> left<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 左子树</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">TreeNode</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">></span></span> right<span class=\"token punctuation\">;</span><span class=\"token comment\">// 右子树</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">TreeNode</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">></span></span> prev<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// needed to unlink next upon deletion</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">boolean</span> red<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 颜色属性</span></pre></td></tr></table></figure><p><img data-src=\"6.png\" alt=\"\" /></p>\n<h1 id=\"hashmap与hashtable的区别\"><a class=\"anchor\" href=\"#hashmap与hashtable的区别\">#</a> HashMap 与 HashTable 的区别</h1>\n<ul>\n<li>HashMap 允许将 null 作为一个 entry 的 key 或者 value，而 Hashtable 不允许。</li>\n<li>HashMap 把 Hashtable 的 contains 方法去掉了，改成 containsValue 和 containsKey。因为 contains 方法容易让人引起误解。</li>\n<li>HashTable 继承自 Dictionary 类，而 HashMap 是 Java1.2 引进的 Map interface 的一个实现。</li>\n<li>HashTable 的方法是 Synchronize 的，而 HashMap 不是，在多个线程访问 Hashtable 时，不需要自己为它的方法实现同步，而 HashMap 就必须为之提供外同步。</li>\n<li>Hashtable 和 HashMap 采用的 hash/rehash 算法都大概一样，所以性能不会有很大的差异</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "数据结构",
                "java"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%B2%BB%E7%90%86/%E6%95%B0%E6%8D%AE%E6%B2%BB%E7%90%86-%E6%95%B0%E6%8D%AE%E8%A1%80%E7%BC%98%E8%AE%BE%E8%AE%A1/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%B2%BB%E7%90%86/%E6%95%B0%E6%8D%AE%E6%B2%BB%E7%90%86-%E6%95%B0%E6%8D%AE%E8%A1%80%E7%BC%98%E8%AE%BE%E8%AE%A1/",
            "title": "数据治理-数据血缘设计",
            "date_published": "2020-06-03T01:01:05.000Z",
            "content_html": "<h1 id=\"什么是数据血缘\"><a class=\"anchor\" href=\"#什么是数据血缘\">#</a> 什么是数据血缘</h1>\n<p>数据血缘是数据治理里元数据管理的一个概念。</p>\n<div class=\"note info\">\n<p>数据治理包括数据标准、数据质量、主数据、元数据、数据安全等多个方面。</p>\n</div>\n<p>对于元数据的管理，谷歌曾发表过一篇论文，里面详细的描述了谷歌他们是怎么做的： <span class=\"exturl\" data-url=\"aHR0cDovL3Blb3BsZS5jcy51Y2hpY2Fnby5lZHUvfmFlbG1vcmUvY2xhc3MvdG9waWNzMTcvZ29vZHMucGRm\">Goods：Google Dataset Search</span><br />\n 谷歌将元数据管理分为了几个部分：<br />\n<img data-src=\"1.png\" alt=\"谷歌将元数据管理分为了几个部分\" /></p>\n<p>那么什么是数据血缘呢？在现实世界中，我们每个个体都是祖先通过生育关系一代代孕育而来，这样就形成了我们人类的各种血缘关系。在数据信息时代，我们庞大的数据在每时每刻产生，这些数据又经过各种加工组合、转换，又会产生新的数据，这些数据之间就存在着天然的联系，我们把这些联系称为数据血缘关系。<br />\n直白点说数据血缘指数据产生的链路，就是我们这个数据是怎么来的，经过了哪些过程和阶段。</p>\n<h2 id=\"特性\"><a class=\"anchor\" href=\"#特性\">#</a> 特性</h2>\n<ul>\n<li>归属性：一般来说，特定的数据归属特定的团队或者个人</li>\n<li>多源性：同一个数据可以有多个来源（多个父亲）。一个数据可以是多个数据经过加工而生成的，而且这种加工过程可以是多个。</li>\n<li>可追溯性：数据的血缘关系，体现了数据的生命周期，体现了数据从产生到消亡的整个过程，具备可追溯性。</li>\n<li>层次性：数据的血缘关系是有层次的。对数据的分类、归纳、总结等对数据进行的描述信息又形成了新的数据，不同程度的描述信息形成了数据的层次。</li>\n</ul>\n<h1 id=\"数据血缘的作用\"><a class=\"anchor\" href=\"#数据血缘的作用\">#</a> 数据血缘的作用</h1>\n<h2 id=\"数据溯源\"><a class=\"anchor\" href=\"#数据溯源\">#</a> 数据溯源</h2>\n<p>溯源，指的是探寻事物的根本、源头。我们分析处理的数据，可能来源很广泛，有政府的数据，有互联网的数据，有通过数据交易从第三方获取的数据，还有自身拥有的数据。不同来源的数据，数据质量参差不齐，对分析处理的结果影响也不尽相同。当数据发生异常，我们需要能追踪到异常发生的原因，把风险控制在适当的水平。<br />\n数据的血缘关系，体现了数据的来龙去脉，能帮助我们追踪数据的来源，追踪数据处理过程。在数据的血缘关系可视化图形上，主节点的上面就是数据来源节点，非常清晰，一目了然。数据经过了哪些转换也能从可视化图形上看出来，对异常数据产生原因的分析帮助很大。</p>\n<h2 id=\"评估数据价值\"><a class=\"anchor\" href=\"#评估数据价值\">#</a> 评估数据价值</h2>\n<p>数据的价值在数据交易领域非常重要，涉及到数据的定价。要对数据价值进行评估，就需要有依据。数据血缘关系，可以从几个方面给数据价值的评估提供依据：</p>\n<ul>\n<li>数据受众。在血缘关系图上，下面的数据流出节点表示受众，亦即数据需求方，数据需求方越多表示数据价值越大；</li>\n<li>数据更新量级。数据血缘关系图中，数据流转线路的线条越粗，表示数据更新的量级越大，从一定程度上反映了数据价值的大小；</li>\n<li>数据更新频次。数据更新越频繁，表示数据越鲜活，价值越高。在血缘关系图上，数据流转线路的线段越短，更新越频繁。</li>\n</ul>\n<h2 id=\"数据质量评估\"><a class=\"anchor\" href=\"#数据质量评估\">#</a> 数据质量评估</h2>\n<p>从数据的血缘关系图上，可以方便的看到数据清洗的标准清单，这个清单反映了对数据质量的要求。</p>\n<h2 id=\"数据归档-销毁的参考\"><a class=\"anchor\" href=\"#数据归档-销毁的参考\">#</a> 数据归档、销毁的参考</h2>\n<p>如果数据没有了受众，就失去了使用价值。从数据的血缘关系图上看，最下面没有了数据节点，就可以去评估主节点所代表的数据是否要归档或者销毁了</p>\n<h1 id=\"数据血缘的级别\"><a class=\"anchor\" href=\"#数据血缘的级别\">#</a> 数据血缘的级别</h1>\n<p>广义上，血缘分析包含以下 3 个级别：</p>\n<ul>\n<li>作业级别:<br />\n 大数据平台中的数据由不同作业生成，例如 Kettle,Spark,MR。在作业级别我们可以获取到更高层次的信息，如服务器、运行时长、等待时长、当前任务流状态等</li>\n<li>数据集级别:<br />\n 数据集即表，广义上包括 HDFS、HBase、关系型数据库、Kafka、Ftp、本地文件等。在表级别我们能获取到表的生成链路，表的重要程度（使用频率），表的基础信息</li>\n<li>字段级别<br />\n字段级别是最苛刻的级别，在字段级别我们能追寻到某张表的字段来源于哪里，字段的重要性排名。</li>\n</ul>\n<h1 id=\"数据血缘的采集\"><a class=\"anchor\" href=\"#数据血缘的采集\">#</a> 数据血缘的采集</h1>\n<p>分析大数据平台中的每一个存储媒介（关系型数据库，NoSql，Kafka，HDFS 等）和每一个作业工具（如 Flink，Spark，Pentaho 等），编写新的 ETL 来生成数据血缘。<br />\n从存储媒介中我们能获取表的信息，从作业工具中我们能获取数据流转线路。</p>\n<h2 id=\"数据源信息\"><a class=\"anchor\" href=\"#数据源信息\">#</a> 数据源信息</h2>\n<p>数据源的基础信息包括：数据源名，数据源类型，数据源配置，数据源状态，数据源所属等<br />\n采集数据源信息一般有以下手段</p>\n<ol>\n<li>通过 SQL 脚本或者程序脚本录入数据源</li>\n<li>进行 ETL 采集数据血缘的时候录入</li>\n<li>手工录入</li>\n</ol>\n<h2 id=\"数据集信息\"><a class=\"anchor\" href=\"#数据集信息\">#</a> 数据集信息</h2>\n<p>以下是部分存储媒介提取方法</p>\n<ul>\n<li>关系型数据库：\n<ol>\n<li>从 DDL 或者 SQL 语句中提取表结构</li>\n<li>创建触发器提取表结构</li>\n</ol>\n</li>\n<li>KafKa: 当 kafka 作为 ODS 的时候，每个 topic 名就是表名</li>\n</ul>\n<h2 id=\"数据流转线路\"><a class=\"anchor\" href=\"#数据流转线路\">#</a> 数据流转线路</h2>\n<p>以下是部分作业工具提取方法</p>\n<ul>\n<li>Pentaho：<br />\nPentaho 使用 kettle 作为 ETL 工具，Kettle 分为 KJB 和 KTR 文件，其中 KJB 控制作业流程，KTR 控制实际转换。\n<ol>\n<li>对于 KJB 文件，我们可以获取作业信息</li>\n<li>对于 ktr 文件，我们可以获取具体的数据流转线路。ktr 实际上是一个 xml 文件，将 ktr 转换为 xml 文件然后用 kettle 读取遍历便能获取到数据链路</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"数据量频率\"><a class=\"anchor\" href=\"#数据量频率\">#</a> 数据量，频率</h2>\n<p>通过分析日志文件获取，或者在 etl 中发送相关数据到一个专门记录数据血缘的服务</p>\n<h1 id=\"数据模型设计\"><a class=\"anchor\" href=\"#数据模型设计\">#</a> 数据模型设计</h1>\n<p><img data-src=\"2.png\" alt=\"数据模型设计\" /></p>\n<table>\n<thead>\n<tr>\n<th>表名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>provenance_job</td>\n<td>作业信息表</td>\n</tr>\n<tr>\n<td>provenance_dataset</td>\n<td>数据集信息表，即 table 名</td>\n</tr>\n<tr>\n<td>provenance_field</td>\n<td>字段信息表</td>\n</tr>\n<tr>\n<td>provenance_datasource</td>\n<td>数据源信息表</td>\n</tr>\n<tr>\n<td>ref_job_lineage</td>\n<td>作业级别血缘关系表</td>\n</tr>\n<tr>\n<td>ref_dataset_lineage</td>\n<td>数据集级别血缘关系表</td>\n</tr>\n<tr>\n<td>ref_filed_lineage</td>\n<td>字段级别血缘关系表，type 字段指聚合的方法，如 sum，max，min</td>\n</tr>\n</tbody>\n</table>\n<p>作业表：provenance_job</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bint</td>\n<td>自增主键</td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(128)</td>\n<td>作业名</td>\n</tr>\n<tr>\n<td>owner</td>\n<td>varchar(64)</td>\n<td>所属团队</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(64)</td>\n<td>作业类型</td>\n</tr>\n<tr>\n<td>comment</td>\n<td>varchar(256)</td>\n<td>备注</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td>状态 1 为正常 0 为失效</td>\n</tr>\n<tr>\n<td>create_time</td>\n<td>timestamp</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>update_time</td>\n<td>timestamp</td>\n<td>更新时间</td>\n</tr>\n</tbody>\n</table>\n<p>数据表：provenance_dataset：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bint</td>\n<td>自增主键</td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(128)</td>\n<td>数据名</td>\n</tr>\n<tr>\n<td>datasource_id</td>\n<td>bint</td>\n<td>数据源 id</td>\n</tr>\n<tr>\n<td>job_id</td>\n<td>bint</td>\n<td>作业 id</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(64)</td>\n<td>数据类型</td>\n</tr>\n<tr>\n<td>comment</td>\n<td>varchar(256)</td>\n<td>备注</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td>状态 1 为正常 0 为失效</td>\n</tr>\n<tr>\n<td>create_time</td>\n<td>timestamp</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>update_time</td>\n<td>timestamp</td>\n<td>更新时间</td>\n</tr>\n</tbody>\n</table>\n<p>字段表：provenance_filed：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bint</td>\n<td>自增主键</td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(128)</td>\n<td>数据名</td>\n</tr>\n<tr>\n<td>dataset_id</td>\n<td>bint</td>\n<td>数据 id</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(64)</td>\n<td>字段类型</td>\n</tr>\n<tr>\n<td>comment</td>\n<td>varchar(256)</td>\n<td>备注</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td>状态 1 为正常 0 为失效</td>\n</tr>\n<tr>\n<td>create_time</td>\n<td>timestamp</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>update_time</td>\n<td>timestamp</td>\n<td>更新时间</td>\n</tr>\n</tbody>\n</table>\n<p>数据源表：provenance_datasource：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bint</td>\n<td>自增主键</td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(128)</td>\n<td>数据源名</td>\n</tr>\n<tr>\n<td>owner</td>\n<td>varchar(64)</td>\n<td>所属团队</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(64)</td>\n<td>数据源类型</td>\n</tr>\n<tr>\n<td>scheme</td>\n<td>varchar(64)</td>\n<td>模式名</td>\n</tr>\n<tr>\n<td>comment</td>\n<td>varchar(256)</td>\n<td>备注</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td>状态 1 为正常 0 为失效</td>\n</tr>\n<tr>\n<td>create_time</td>\n<td>timestamp</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>update_time</td>\n<td>timestamp</td>\n<td>更新时间</td>\n</tr>\n</tbody>\n</table>\n<p>作业链路表：ref_job_lineage</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bint</td>\n<td>自增主键</td>\n</tr>\n<tr>\n<td>source</td>\n<td>bint</td>\n<td>流出作业节点 id</td>\n</tr>\n<tr>\n<td>target</td>\n<td>bint</td>\n<td>流入作业节点 id</td>\n</tr>\n<tr>\n<td>volume</td>\n<td>int</td>\n<td>更新量级</td>\n</tr>\n<tr>\n<td>version</td>\n<td>bint</td>\n<td>版本号</td>\n</tr>\n<tr>\n<td>date_from</td>\n<td>timestamp</td>\n<td>数据有效开始时间</td>\n</tr>\n<tr>\n<td>date_to</td>\n<td>timestamp</td>\n<td>数据有效截止时间</td>\n</tr>\n</tbody>\n</table>\n<p>数据链路表：ref_dataset_lineage</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bint</td>\n<td>自增主键</td>\n</tr>\n<tr>\n<td>source</td>\n<td>bint</td>\n<td>流出数据节点 id</td>\n</tr>\n<tr>\n<td>target</td>\n<td>bint</td>\n<td>流入数据节点 id</td>\n</tr>\n<tr>\n<td>volume</td>\n<td>int</td>\n<td>更新量级</td>\n</tr>\n<tr>\n<td>version</td>\n<td>bint</td>\n<td>版本号</td>\n</tr>\n<tr>\n<td>date_from</td>\n<td>timestamp</td>\n<td>数据有效开始时间</td>\n</tr>\n<tr>\n<td>date_to</td>\n<td>timestamp</td>\n<td>数据有效截止时间</td>\n</tr>\n</tbody>\n</table>\n<p>字段链路表：ref_filed_lineage</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bint</td>\n<td>自增主键</td>\n</tr>\n<tr>\n<td>source</td>\n<td>bint</td>\n<td>源字段 id</td>\n</tr>\n<tr>\n<td>target</td>\n<td>bint</td>\n<td>目标字段</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchart(64)</td>\n<td>聚合类型，如 max,min,sum,avg</td>\n</tr>\n<tr>\n<td>version</td>\n<td>bint</td>\n<td>版本号</td>\n</tr>\n<tr>\n<td>date_from</td>\n<td>timestamp</td>\n<td>数据有效开始时间</td>\n</tr>\n<tr>\n<td>date_to</td>\n<td>timestamp</td>\n<td>数据有效截止时间</td>\n</tr>\n</tbody>\n</table>\n<p>建立好数据表后建立对应的 ETL 把数据装载进表中。因为作业与数据处于变动的状态中，三张关系表将设计成拉链表，每天生成新的记录，用 version 字段区分。<br />\n这样做有三个好处</p>\n<ol>\n<li>数据血缘的亲疏由数据量来决定，记录数据量有利于获取更准确的血缘关系</li>\n<li>有利于观察动态的血缘关系</li>\n<li>能监控作业的执行情况</li>\n</ol>\n<h1 id=\"血缘关系可视化\"><a class=\"anchor\" href=\"#血缘关系可视化\">#</a> 血缘关系可视化</h1>\n<p>将血缘关系可视化能让我们更加直观的分析数据平台中的血缘关系，在分析血缘关系的时候一般使用桑基图或者关系图。</p>\n<h2 id=\"桑基图\"><a class=\"anchor\" href=\"#桑基图\">#</a> 桑基图</h2>\n<p>桑基图，也叫桑基能量分流图或者桑基能量平衡图，桑基图最明显的特征就是，始末端的分支宽度总和相等，即所有主支宽度的总和应与所有分出去的分支宽度的总和相等，通常应用于具有流向关系，层级关系的数据可视化分析。<br />\n桑基图由节点与流量组成，下面是桑基图的样子<br />\n<img data-src=\"3.png\" alt=\"\" /><br />\n血缘关系图中从三个元素分析数据血缘，分别是数据节点，流转线路，血缘亲疏<br />\n<img data-src=\"4.png\" alt=\"\" /></p>\n<h3 id=\"数据节点\"><a class=\"anchor\" href=\"#数据节点\">#</a> 数据节点</h3>\n<p>用来用来表现数据的所有者和数据层次信息或终端信息<br />\n有两种类型：数据流出节点，数据流入节点</p>\n<ul>\n<li>数据流入节点可以有多个，是主节点的父节点，表示数据来源</li>\n<li>数据流出节点也可以有多个，是主节点的子节点，表示数据的去向；包括一种特殊的节点，即终端节点，终端节点是一种特殊的数据流出节点，表示数据不再往下进行流转，这种数据一般用来做可视化展示。</li>\n</ul>\n<h3 id=\"流转线路\"><a class=\"anchor\" href=\"#流转线路\">#</a> 流转线路</h3>\n<p>表现的是数据的流转路径，从左到右流转。数据流转线路从数据流出节点出来往数据流入节点汇聚<br />\n数据流转线路表现了两个维度的信息，分别是方向、数据量级</p>\n<ul>\n<li>方向默认从左到右</li>\n<li>数据量级通过线条的粗细来表现。线条越粗表示数据量级越大，线条越细则表示数据量级越小。</li>\n</ul>\n<h3 id=\"血缘亲疏\"><a class=\"anchor\" href=\"#血缘亲疏\">#</a> 血缘亲疏</h3>\n<p>流入节点到流出节点之间所间隔的节点越少，两个节点的血缘关系越亲密。比如 table3 与 table6 都来源于 table1，但是 table3 中间隔了一个 table5 节点，所以 table6 与 table1 的数据更加相似。血缘亲疏可以用于数据质量评估与数据销毁评估。<br />\n<img data-src=\"6.png\" alt=\"\" /><br />\n<img data-src=\"5.png\" alt=\"\" /></p>\n<h3 id=\"图表数据结构\"><a class=\"anchor\" href=\"#图表数据结构\">#</a> 图表数据结构</h3>\n<p>图表数据类型与设计的关系表一致，只需要通过递归的方法查询节点的流转线路即可</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            source<span class=\"token operator\">:</span> 'table1'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            target<span class=\"token operator\">:</span> 'table3'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            value<span class=\"token operator\">:</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            source<span class=\"token operator\">:</span> 'table1'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            target<span class=\"token operator\">:</span> 'table4'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            value<span class=\"token operator\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            source<span class=\"token operator\">:</span> 'table2'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            target<span class=\"token operator\">:</span> 'table5'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            value<span class=\"token operator\">:</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span>       </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"关系图\"><a class=\"anchor\" href=\"#关系图\">#</a> 关系图</h2>\n<p>关系图是展现事物相关性和关联性的图表，关系图由节点与流转线路组成。关系图能展示血缘之间的关系但是不能很好的展示数据量级，关系图比较适用于展现字段级别的血缘关系。</p>\n<p><img data-src=\"7.png\" alt=\"关系图\" /></p>\n<h3 id=\"数据节点-2\"><a class=\"anchor\" href=\"#数据节点-2\">#</a> 数据节点</h3>\n<p>数据节点上显示的当前节点的数据量总计</p>\n<h3 id=\"流转线路-2\"><a class=\"anchor\" href=\"#流转线路-2\">#</a> 流转线路</h3>\n<p>表现的是数据的流转路径，从左到右流转。数据流转线路从数据流出节点出来往数据流入节点汇聚<br />\n流转线路上标识了流转的方向</p>\n<h3 id=\"图表数据结构-2\"><a class=\"anchor\" href=\"#图表数据结构-2\">#</a> 图表数据结构</h3>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    source<span class=\"token operator\">:</span> <span class=\"token string\">\"table1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    target<span class=\"token operator\">:</span> <span class=\"token string\">\"table5\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    source<span class=\"token operator\">:</span> <span class=\"token string\">\"table1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    target<span class=\"token operator\">:</span> <span class=\"token string\">\"table8\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "大数据",
                "数据治理",
                "元数据"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%B7%A8%E5%A2%83%E7%94%B5%E5%95%86/Amazon-2020%E7%89%A9%E6%B5%81%E6%88%90%E6%9C%AC/",
            "url": "http://yrmlnf.coding-pages.com/%E8%B7%A8%E5%A2%83%E7%94%B5%E5%95%86/Amazon-2020%E7%89%A9%E6%B5%81%E6%88%90%E6%9C%AC/",
            "title": "Amazon-2020物流成本",
            "date_published": "2020-05-23T02:40:00.000Z",
            "content_html": "<h1 id=\"amazon发货方式\"><a class=\"anchor\" href=\"#amazon发货方式\">#</a> Amazon 发货方式</h1>\n<p>亚马逊有三种发货方式，分别来如下：</p>\n<ol>\n<li>Fulfillment by Amazon（FBA）<br />\nFBA 是亚马逊物流服务，卖家先把货物发到亚马逊仓库储存，接到订单后直接从亚马逊仓库发货。整个挑选、包装、运输产品的过程都由亚马逊的工作人员操作。不仅自如此，平台还提供客户服务及退货服务。使用这种方式发货时效比较快，客户的用户体验比较好，百相当于分担了卖家的工作量。但是相应的也要向亚马逊缴纳仓库的使用费。</li>\n<li>Seller Fulfilled Prime（SFP）<br />\n简单的来说 SFP 就是卖家自己在海度外搭建海外仓或者和第三方的海外仓合作。物流效率和 FBA 的模式差不多。问但需要满足一定的规定才有资格使用 SFP。</li>\n<li>Fulfillment by Merchant（FBM）<br />\nFBM 就是卖家利用自己的资源向买家发货。当店铺有了订单后卖家再从国内将货物发往国答外，这种模式不需要囤货甚至不需要有货源，但物流时效比较慢。</li>\n</ol>\n<h1 id=\"fba\"><a class=\"anchor\" href=\"#fba\">#</a> FBA</h1>\n<h2 id=\"什么是亚马逊fba\"><a class=\"anchor\" href=\"#什么是亚马逊fba\">#</a> 什么是亚马逊 FBA</h2>\n<p>这个计划允许任何人在亚马逊平台出售产品。物流对任何电商企业来说都是最大的挑战之一。通过 FBA 计划，亚马逊可以在它的仓库中存储你的产品，把产品配送给你的顾客，处理所有退款退货问题，以及提供无与伦比的客户服务。<br />\n这不意味着作为卖家的你不需要承担任何责任。它真正的作用在于，让你有大量时间关注其他高级别、能创造价值的活动，比如引流、优化转化率等。<br />\n为什么亚马逊 FBA 比其他电商更好？<br />\nFBA 计划除了可以帮你处理物流问题，它还有其他优势。其中一点就是亚马逊的配送速度要比零售商的快。FBA 可以让你获得更多的平台曝光率，从而转化成更多的销量。<br />\nFBA 还可以让你的产品符合 Prime 资格，消费者非常喜欢这个免运费两天送达的 Prime 服务。最后 FBA 最大的一个优势是，亚马逊是一个非常受信任的品牌。它一直在努力优化支付过程，赢得消费者的信任。作为卖家的你也能得到这种信誉带来的好处。</p>\n<h2 id=\"怎么建立fba业务\"><a class=\"anchor\" href=\"#怎么建立fba业务\">#</a> 怎么建立 FBA 业务</h2>\n<p>要开始建立 FBA 业务，这里有 5 个基本的步骤：</p>\n<ol>\n<li>创建亚马逊卖家账号。建议创建专业卖家账号，专业卖家账号每月需缴纳一定的费用。</li>\n<li>选择利基产品。有些产品很好，有些产品则不值得涉及。做好调查，集思广益。</li>\n<li>找到供应商。一旦你知道要卖什么产品了，就开始和可靠的供应商建立合作关系。向他们要求样品，计算下从下单到出货所需时间，并算下产品的利润。</li>\n<li>创建产品的 listing。通过恰当的关键词和内容来优化产品页面。</li>\n<li>引流。向目标客户发送产品页面，提供销量。</li>\n</ol>\n<div class=\"note info 以下是Shogren的一些建议\">\n<ol>\n<li>产品的价格应该介于 10 美元到 50 美元之间；</li>\n<li>产品重量应尽可能轻</li>\n<li>查看潜在竞争者的主类目产品销量排名是否在前 5000，或者更低</li>\n<li>确保在你卖的产品类别中没有知名品牌</li>\n<li>尽量销售不容易碎的产品</li>\n<li>产品评价越多，竞争力越强。如果产品第一页的评价数量是 50 或者更少，这就意味着你可以打入这个市场</li>\n<li>生产成本应该控制在售价的 25% 或者更少</li>\n</ol>\n</div>\n<h2 id=\"fba费用计算\"><a class=\"anchor\" href=\"#fba费用计算\">#</a> FBA 费用计算</h2>\n<h3 id=\"fba中常见计量单位换算\"><a class=\"anchor\" href=\"#fba中常见计量单位换算\">#</a> FBA 中常见计量单位换算</h3>\n<p>1 (英寸)=2.54cm (厘米)<br />\n 1 lb (磅)=0.4536kg (千克)<br />\n 1 oz (盎司)=28.35g<br />\n1 cubic foot (立方英尺)=28.32 cubic dm (立方分米)</p>\n<h3 id=\"fba费用组成\"><a class=\"anchor\" href=\"#fba费用组成\">#</a> FBA 费用组成</h3>\n<p>FBA 费用包括：订单配送费、FBA 库存存储费、搬迁订单费、退货处理费、计划外服务费共 5 部分，每部分 FBA 费用细节不同。</p>\n<ol>\n<li>订单配送费<br />\n出货订单取决于有多少重量和包装的大小。\n<ul>\n<li>标准尺寸：任何重量不超过 12 盎司、最大边缘不超过 15 英寸、最大边缘不超过 0.75 英寸和包装后次要边缘不超过 12 英寸的物品。</li>\n<li>大规格：所有包装货物，重量不超过 20 磅，最大边缘不超过 18 英寸，最大边缘不超过 8 英寸，二次长度不超过 14 英寸。</li>\n<li>小大：不超过 70 磅的任何包装的重量，最长边不超过 60 英寸长的时间不超过 30 英寸，围护产品的最长边的边缘不超过 130 英寸。</li>\n<li>中大：不大于 150 磅，最长边的最长边和过 108 英寸加周长产品的任何包装重量不超过 130 英寸。</li>\n<li>大尺寸：任何包装后重量不超过 150 磅的物品，最大边缘不超过 108 英寸，最大边缘周长不超过 165 英寸。<br />\n包装的任何产品符合一个或多个下列条件：特别大超过 150 磅（单或体积重量），超过 1.08 英寸，或最长边加圆周超过 165 英寸的最长边。此外，确定了需要特殊处理或货物的配送也属于一种特殊的大件物品。<br />\n<img data-src=\"1.png\" alt=\"订单配送费\" /></li>\n</ul>\n</li>\n<li>FBA 库存仓储费\n<ul>\n<li>月度仓储费：<br />\n亚马逊会在第二个月 7-15 号之间进行收取，费用按照货物的体积进行收取：<br />\n1-9 月，标准尺寸 0.64 美元 / 每立方英尺 超大尺寸 0.43 美元 / 每立方英尺<br />\n 10-12 月，标准尺寸 2.35 美元 / 每立方英尺 超大尺寸 1.15 美元 / 每立方英尺<br />\n月度仓储费：(应收取 6 个月长期仓储费的商品数量) x (单位商品体积) x (对应月份每立方仓储费)<br />\n 在十月到十二月旺季期间，仓储费会比平时升高 1-2 倍。</li>\n<li>长期仓储费：<br />\n如果卖家的货物在亚马逊仓库里存放超过 6 个月没有销售出去则需要缴纳这笔费用。<br />\n一般来说，亚马逊会在每年的 2 月 15 号和 8 月 15 号进行收取：<br />\n存放在 6-12 个月的产品，按 11.25 美元每立方英尺进行收取长期仓储费<br />\n存放超过 12 个月的产品，按 22.50 美元每立方英尺进行长期仓储费的收取。<br />\n长期仓储费：(应收取时间段长期仓储费的商品数量) x (单位商品体积) x (对应时间段长期仓储费的每立方收费)<br />\n 值得注意的是，从 2017 年 8 月 15 日起欧洲 FBA 长期仓储费用如下：<br />\n存放 6-12 个月的产品：每立方米收取 500 欧元半年的长期仓储费<br />\n存放 12 个月以上的产品：每立方米收取 1000 欧元的长期仓储费</li>\n</ul>\n</li>\n<li>移除订单费<br />\n对于无法销售的产品，卖家自然会选择撤单，通常，搬迁令将在 14 个工作日内处理。然而，在假日季节和搬迁高峰期，处理搬迁订单可能需要 30 个工作日或更长时间。<br />\n自 2020 年 2 月 18 日起，亚马逊将根据重量分段按件收取移除费用<br />\n<img data-src=\"2.png\" alt=\"移除订单费\" /></li>\n<li>退货处理费<br />\n该费用适用于亚马逊上的选定类别，提供免费的买家返回运输，实际上是返回到亚马逊运营中心。退货的手续费等于给定商品的总送货费。</li>\n<li>计划外服务费<br />\n对于运往亚马逊仓库的产品，亚马逊可以向卖家提供这些服务，如果他们没有经过适当的预处理或标签。这项服务按件收费。<br />\n自 2020 年起，2 月 18 日，亚马逊将可选的标签物流服务费用从 $ 0.20 提高到每个项目 $ 0.30。商品物流每件亚马逊计划亚马逊物流标签服务费为 $ 0.10。</li>\n</ol>\n<h2 id=\"fba特点\"><a class=\"anchor\" href=\"#fba特点\">#</a> FBA 特点</h2>\n<p>优点:</p>\n<ol>\n<li>提高 Listing 排名，帮助卖家成为特色卖家，抢夺购物车，提 高客户的信任度，提高销售额。</li>\n<li>多年丰富的物流经验，仓库遍布全世界，智能化管理。</li>\n<li>配送时效超快 (仓库大多靠近机场)</li>\n<li>7*24 亚马逊专业客服。</li>\n<li>抹掉由物流引起的差评纠纷 。</li>\n<li>对单价超过 300USD 的产品免除所有 FBA 物流费用。<br />\n缺点:</li>\n<li>一般来说费用比国内发货稍微偏高（特别是非亚马逊平台的 FBA 发货），但是也要看产品重量来定夺。</li>\n<li>灵活性差 （所有海外仓的共同短板，但其他第三方海外仓还是可以有专门的中文客服来处理一些问题，FBA 却只能用英文和客户沟通，而且用邮件沟通回复不会向第三方海外仓客服那么及时）。</li>\n<li>FBA 仓库不会为卖家的头程发货提供清关服务。</li>\n<li>如果前期工作没做好，标签扫描出问题会影响货物入库，甚至入不了库。</li>\n<li>退货地址只支持美国 （如果您是做美国站点的 FBA）。</li>\n<li>客户想退货就可以退货不需要跟 FBA 有太多的沟通（退货太随意，给卖家带来不少困扰）。</li>\n</ol>\n<h1 id=\"sfp\"><a class=\"anchor\" href=\"#sfp\">#</a> SFP</h1>\n<h2 id=\"什么第三方海外仓sfp\"><a class=\"anchor\" href=\"#什么第三方海外仓sfp\">#</a> 什么第三方海外仓 (SFP)</h2>\n<p>海外仓，即海外仓储服务。由网络外贸交易平台、物流服务商独立或共同为卖家在销售目标地提供的货品仓储、分拣、包装、派送的一站式控制与管理服务。卖家将货物存储到当地仓库，当买家有需求时，第一时间做出快速响应，及时进行货物的分拣、包装以及递送</p>\n<h2 id=\"sfp费用\"><a class=\"anchor\" href=\"#sfp费用\">#</a> SFP 费用</h2>\n<p>不同海外仓不尽相同哦</p>\n<h2 id=\"sfp特点\"><a class=\"anchor\" href=\"#sfp特点\">#</a> SFP 特点</h2>\n<ul>\n<li>优点：\n<ol>\n<li>它可以给卖家提供头程清关服务，有的甚至还会有包含代缴税金、派送到仓的一条龙服务。海外仓和 FBA 一样，需要提前备货到海外仓库。但是相对于 FBA 来说，海外仓是可以提供头程清关服务的。</li>\n<li>更低的仓储物流成本。它也可以提供货品仓储、分拣、包装、派送的一条龙服务，综合费用成本比 FBA 低很多。</li>\n<li>灵活性相对 FBA 会强很多。第三方海外仓一般都是和国内物流商合作的，国外仓库都有华人驻守，沟通处理起来方便快捷。海外仓没有平台限制，无论在哪个平台售卖，都可以使用海外仓。</li>\n<li>海外中转。它还可以作为海外中转仓库，特别是旺季时候有些卖家出现亚马逊平台断货，如果海外仓有货，可以直接从海外仓调拨到 FBA 仓，节省从国内发货的时间，及时补足库存。</li>\n<li>关于退换货产品，如无质量问题，海外仓可重新更换标签或者重新包装，再次上架销售，减少损失。</li>\n<li>对于产品的限制和包装要求没有那么严格。相对于 FBA 来说，它对于产品的限制和包装没有那么严格，而且对于外箱有破损的，海外仓还可以帮忙换箱，不过要收费。</li>\n</ol>\n</li>\n<li>缺点:\n<ol>\n<li>缺点亚马逊的支持</li>\n<li>缺乏售后与投诉服务</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"自发货fbm\"><a class=\"anchor\" href=\"#自发货fbm\">#</a> 自发货 (FBM)</h1>\n<h2 id=\"什么是fbm\"><a class=\"anchor\" href=\"#什么是fbm\">#</a> 什么是 FBM</h2>\n<p>配送问题一直是亚马逊卖家们纠结的一个点。人人都知道选择 FBA 发货是非常有优势的，不仅仅效率快而且对于亚马逊的友好度也是极具加深。但这个虽然好，偏偏它的成本价是很多卖家都难以接受的，实在是有点过高。相对于一些业绩惨淡、新手卖家而言，这样高的成本对他们而言，简直就是捉襟见肘。在这样的情况下，很多卖家就只能选择自发货的形式。目前亚马逊卖家主要采用的自发货形式主要有邮政、快递、专线这三种物流分类：<br />\n1. 邮政：邮政包裹的网络渠道遍布全球，比其他物流方式的覆盖面更广，对于一般的跨境电商平台亚马逊中小卖家而言，2 公斤以下的产品可选用邮政小包，2 公斤以上的产品用邮政大包，当然一些情况下也可以考虑 EMS 或者 E 邮包。<br />\n2. 快递渠道：主要指 DHL、TNT、FedEx 和 UPS 四大巨头，还有顺丰、四通一达等，其中四大巨头的速度和服务无可挑剔，但价格也偏贵，一般的商家很难承受。它们自建全球网络，进行世界各地的本地化物流服务，可以把货运到全球大多数的国家和地区，并且在官网能得到实时的物流追踪信息。另外，快递渠道对于产品本身还有一定的要求和限制，含电的、仿牌的、特殊类的产品基本上是无法实现递送的，适用于货值较高、客户要求时效性，2kg 以上的货物。<br />\n3. 专线物流：跨境专线物流的模式通常是，集中大批量货物发往目的地，通过规模效应降低成本，是针对某个国家或地区的快递公司的自主渠道，如中东、美国、俄罗斯等。价格比商业快递低一些，但时效性也慢一些，目前比较著名的有燕文物流、中外运安迈世等，可以对包裹进行追踪，按具体的路线来收费，一般 4-7 个工作日可以到达。<br />\n小包、快递和专线的侧重点不同，不同的物流渠道在价格、稳定性、时效方面差异性很大，具体如何选择，还要看亚马逊卖家针对的客户群体，如国家地域、货物重量、货值多少、体积大小、产品的利润点都是会主要的影响因素。</p>\n<h2 id=\"fbm费用\"><a class=\"anchor\" href=\"#fbm费用\">#</a> FBM 费用</h2>\n<ul>\n<li>邮政：<br />\n跨境电商一般用邮政的 e 邮宝<br />\n截止 2020 年 5 月 23 日<br />\n邮政的 e 邮宝特快的价格如下：<br />\n<img data-src=\"3.png\" alt=\"\" /></li>\n<li>快递渠道<br />\n快递渠道基本上超过 150RMB/kg</li>\n<li>专线物流<br />\n截止 2020 年 5 月 23 日<br />\n云途物流价格如下：<br />\n<img data-src=\"4.png\" alt=\"\" /></li>\n</ul>\n<h2 id=\"综合比较\"><a class=\"anchor\" href=\"#综合比较\">#</a> 综合比较</h2>\n<ul>\n<li>邮政成本最低，到美国建议使用 EUB，可发 2kg 以内货物；</li>\n<li>快递时效最快，价格最贵，一般到美国 3-5 天，不过小件产品非常贵，建议 20kg 以上货物才便宜；快递的清关手续比较麻烦，海关可能会要求提供一些资料比较繁琐。</li>\n<li>国际专线一般到美国 7-9 天，价格比邮政略贵，但是远低于快递，适合产品价值高的产品，一般到美国 20kg 以内都还是不错的。</li>\n</ul>\n<p>时效（由快到慢）：快递 &lt; 专线 &lt; 邮政<br />\n价格（由低到高）：邮政 &lt; 专线 &lt; 快递</p>\n",
            "tags": [
                "跨境电商",
                "amazon"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%B7%A8%E5%A2%83%E7%94%B5%E5%95%86/Amazon-2020%E5%BC%80%E5%BA%97%E6%88%90%E6%9C%AC/",
            "url": "http://yrmlnf.coding-pages.com/%E8%B7%A8%E5%A2%83%E7%94%B5%E5%95%86/Amazon-2020%E5%BC%80%E5%BA%97%E6%88%90%E6%9C%AC/",
            "title": "Amazon-2020开店成本",
            "date_published": "2020-05-22T14:50:51.000Z",
            "content_html": "<h1 id=\"注册帐号费用\"><a class=\"anchor\" href=\"#注册帐号费用\">#</a> 注册帐号费用</h1>\n<p>实际费用：0 元<br />\n首先，选择全球开店的注册方式有两种：招商经理通道和自注册通道，无论你选择哪种方式注册帐号，都是免费的。目前来说，比较多人偏向于选择使用招商经理通道注册</p>\n<h2 id=\"招商经理通道亚马逊全球开店\"><a class=\"anchor\" href=\"#招商经理通道亚马逊全球开店\">#</a> 招商经理通道 (亚马逊全球开店)</h2>\n<div class=\"note info\">\n<p>“亚马逊全球开店” 是亚马逊针对中国市场做的一个招商项目，是开店注册的一种方式。可以简单理解为中国公司级卖家在亚马逊平台开店。与之相对的，还有亚马逊自注册开店（个人卖家在亚马逊开店），在介绍全球开店相关内容之前，我们简单了解一下全球开店和自注册开店的不同及优劣。</p>\n</div>\n<ul>\n<li>优势<br />\n 1. 账号安全性高：封店率 &lt;9% (官方统计数据)。<br />\n2. 有对应的招商经理扶持：指导和监管卖家账户运营，帮助卖家解决操作中的问题，账户有小问题会提前预警，可以申请线下秒杀活动，有需要升舱的卖家也可以通过招商经理去完成。<br />\n3. 有官方的培训支持：包括后台操作培训 (单独刊登，批量刊登，跟卖，订单处理，客服处理，后台设置，报告解读) 如何提升销量，FBA 详解，最新政策，活动解读等。</li>\n<li>劣势\n<ol>\n<li>非常难申请:“全球开店” 计划意在筛选优质卖家入驻亚马逊平台，所以对卖家的资质审核比较严格，不是想入驻就可以入驻的。卖家自己申请 “全球开店” 通过率 5% 不到，一旦卖家自己申请全球开店没有通过，那么用于申请全球开店的那个公司不能再次用于全球开店的申请。</li>\n<li>周期非常长:“全球开店” 账号的注册周期一般是在两个多月左右。全球开店账号的注册周期一般是在 7-15 个工作日左右。（7-15 个工作日是指通过我们的招商经理链接进行注册的平均周期，卖家自己申请的话至少都是在三个月以上），一般情况下，所有站点的注册中，美国站的会相对来说比较快。</li>\n<li>监管非常严：经营全球开店账号，必须严格遵守亚马逊的平台规则，产品图片、标题格式等等都必须严格按照要求执行，否则会被警告。</li>\n</ol>\n</li>\n<li>公司级卖家为什么要选择招商经理通道注册？\n<ol>\n<li>账号注册上线辅导及为期一个自然年的扶持：招商经理会评估卖家的资料，给符合条件的卖家发送全球开店注册链接，并会给予卖家上线注册指导，一般而言，注册账号所需时间为 5-10 分钟即可。对于注册完成的账号，招商经理会安排上线经理进行产品信息审核，上线经理会告知卖家亚马逊对于产品图片是否涉及侵权，标题描述以及关键字的要求优化的指导和建议，同时卖家朋友在此过程中遇到任何操作问题，均可向上线经理求助。</li>\n<li>账户运营安全：对于亚马逊卖家而言，账号安全是最为看重的一点。亚马逊高度重视消费者的消费体验，致力于创造一个消费者安心消费的环境，从而对卖家进行严格的管理。不少卖家由于绩效表现不佳、侵权、消费者投诉描述不符或者假货投诉、或者账号关联等因素导致账号被封。账号被封，意味着前期培育的 ASIN，店铺累计的绩效付之东流，同时消费者任何的退款申请亚马逊将无条件支付，剩余金额 90 天后才会支付，所以对于卖家来讲，之前的精力，资金投入都会变成无用功。在这个点上，招商经理在卖家账户处于高危状态的时候会提醒卖家及时纠错或者撰写完整的改进计划、指导卖家发现问题并进行申诉。</li>\n<li>申请促销活动：Best deal (Z 划算) 和 Deal of the Day (镇店之宝) 是亚马逊站内少有的促销资源，亚马逊每日都会推出促销活动，促销活动对于卖家而言：一方面可以提升短期内的销量，一方面是提升自己品牌的曝光。而对于全球开店的卖家，只要符合 FBA 库存数目，销售价格以及店铺绩效等要求，即可通过招商经理申请。</li>\n<li>汽配类目开通 / KYC 审核提前 / 视频添加等：对于像汽配类目的开通可以通过招商经理提交申请开通；同时如果有欧洲站的卖家想被提前 KYC 审核，从而放心发货过去的这类型的卖家需求，招商经理可以帮助提交申请提前 KYC; 同时类似的还有对于一些还没有品牌备案但是有强烈添加视频需求的卖家，可以找招商经理提报，视频对于提升商品的购买转化率还是非常有帮助的！<br />\n当然招商经理的能力不仅仅是这些，如果您有新市场拓展计划，比如开通欧洲站、日本站等其他站点，有了招商经理的协助一定事半功倍，所以建议公司客户建议通过招商经理通道注册 “亚马逊全球开店”！</li>\n<li>如何联系亚马逊招商经理开店<br />\n亚马逊招商经理一般通过在信息征集的形式先对您的公司信息进行初步登记，然后初步筛选后然后会以邮件的形式为您发送注册链接，收到邮件后通过邮件的链接和提示一步步操作。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"自注册通道\"><a class=\"anchor\" href=\"#自注册通道\">#</a> 自注册通道</h2>\n<ul>\n<li>优势<br />\n个人就可以注册，注册周期比较快。账号注册快，在你的资料都没有任何问题的情况下，两小时之内就可以把账号开通。</li>\n<li>劣势\n<ol>\n<li>账号安全性低，封店率 &gt; 56% (官方统计数据)，即便是被 review 也不会有任何的预警和帮助</li>\n<li>没有客户经理很难申报秒杀活动，除非这个自注册卖家店铺绩效非常的高，是个大卖家才会收到亚马逊的申请邀请，否则一般是无法参加的</li>\n<li>无官方培训支持普通卖家账户</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"亚马逊促销计划\"><a class=\"anchor\" href=\"#亚马逊促销计划\">#</a> 亚马逊促销计划</h1>\n<p>亚马逊全球开店有两种销售计划，专业销售计划 (Professional)，个人销售计划 (Individual)。需要强调的是，“专业” 和 “个人” 销售计划并不等同于公司和个人，不论公司还是个人身份，都可以开立这两种计划。<br />\n而这两种计划的收费标准如下：<br />\n专业销售计划：费用 = 月租金 + 销售佣金<br />\n个人销售计划：费用 = 按件收费 + 销售佣金<br />\n另外，亚马逊分为北美站点、欧洲站点、日本站点三部分，站点不同，开店费用也不尽相同。</p>\n<ol>\n<li>北美站点<br />\n<img data-src=\"1.png\" alt=\"北美站点\" /><br />\n 2. 欧洲站点<br />\n<img data-src=\"2.png\" alt=\"北美站点\" /><br />\n 3. 日本站点<br />\n<img data-src=\"3.png\" alt=\"北美站点\" /></li>\n</ol>\n<h1 id=\"ppccpc站内推广费用\"><a class=\"anchor\" href=\"#ppccpc站内推广费用\">#</a> PPC/CPC 站内推广费用</h1>\n<p>在一定范围内，出价越高，排在前面的可能性会越大，但是有一个限度的。竞价只是次要因素，永远不会是主流。任何搜索引擎与平台，只会将最优先，对消费者最有利的产品优先展示出来。所谓花钱购买的流量，永远排在次位的。<br />\n后台广告促销管理中可以查看到每个关键词的预测竞价与每次点击费用。CPC 的点击价格是由第二名的出价 + 第一名与第二名之间差价的百分比 + 你的表现，综合得出的。</p>\n<h1 id=\"商标注册和品牌备案费用\"><a class=\"anchor\" href=\"#商标注册和品牌备案费用\">#</a> 商标注册和品牌备案费用</h1>\n<p>目前来讲，亚马逊并没有强制要求卖家必须要做品牌备案。但之前爆发的 Generic 商标侵权事件可以看出，品牌备案对卖家很具有保护作用。小美建议大家的是，假如你的经济状况允许，可以在店铺起步时就将商标注册和品牌备案，但如果经济状况不允许，可以在后期，即店铺做起来的再做考虑。<br />\n由于商标是地域性保护的，美国商标只在美国受保护，欧盟的商标只在欧盟受到保护，不需要每个站点都申请，这个可以代理公司代办，并且可以帮助大家申请到补贴福利。</p>\n<h2 id=\"欧洲站vat增值税\"><a class=\"anchor\" href=\"#欧洲站vat增值税\">#</a> 欧洲站 VAT 增值税</h2>\n<p>亚马逊 VAT 是什么意思呢？VAT 全称是 VALUE ADDED TAX，是欧盟国家普遍使用的售后增值税，即货物售价的利润税。当卖家销售的产品进入英国，产品需要缴纳进口税，当产品销售完成后，卖家可以退回进口增值税，再按销售额缴纳相应的销售税。<br />\n非欧洲站无此费用</p>\n<h1 id=\"合计成本\"><a class=\"anchor\" href=\"#合计成本\">#</a> 合计成本</h1>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>项目</th>\n<th>中国公司账号</th>\n<th>美国公司账号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>前期准备费用</td>\n<td>设施</td>\n<td>专用电脑、路由、网络、打印机等费用</td>\n<td>专用电脑、路由、网络、打印机等费用</td>\n</tr>\n<tr>\n<td></td>\n<td>公司代注册</td>\n<td>例：深圳公司 1500 元左右</td>\n<td>美国公司 4500 元左右（科罗拉多州为例）</td>\n</tr>\n<tr>\n<td></td>\n<td>税号代办</td>\n<td>直接填写 W-8 免税税号</td>\n<td>2500 元左右</td>\n</tr>\n<tr>\n<td></td>\n<td>VISA 或 MASTER 双币信用卡</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td></td>\n<td>收款账户办理费用</td>\n<td>视不同收款账户而不同，最低 0</td>\n<td>视不同收款账户而不同，最低 0</td>\n</tr>\n<tr>\n<td>后续运营费用</td>\n<td>公司维护费用</td>\n<td>做账报税零申报 2000 元左右 / 年 如需缴税看具体情况</td>\n<td>年审 + 零报税 3500 元左右 / 年一般没有开美国银行账户，可以零报税，如需缴税看具体情况</td>\n</tr>\n<tr>\n<td></td>\n<td>亚马逊平台月租费</td>\n<td>0 或者 39.9$</td>\n<td>0 或者 39.9$</td>\n</tr>\n<tr>\n<td></td>\n<td>亚马逊销售佣金</td>\n<td>统一按亚马逊标准收取，不同品类不一样，非媒介类产品一般为订单总金额（包括商品价格、运费、礼品包装费）的 8%-15%（媒介类产品为商品价格的 8%-15%），最低为 6%, 最高到 50%，一些品类还有最低销售佣金限制</td>\n<td>非媒介类产品一般为订单总金额（包括商品价格、运费、礼品包装费）的 8%-15%（媒介类产品为商品价格的 8%-15%），最低为 6%, 最高到 50%，一些品类还有最低销售佣金限制。统一按亚马逊标准收取，不同品类不一样，非媒介类产品一般为订单总金额（包括商品价格、运费、礼品包装费）的 8%-15%（媒介类产品为商品价格的 8%-15%），最低为 6%, 最高到 50%，一些品类还有最低销售佣金限制</td>\n</tr>\n<tr>\n<td></td>\n<td>亚马逊交易手续费（仅针对媒介类产品）</td>\n<td>$1.35 / 每件</td>\n<td>$1.35 / 每件</td>\n</tr>\n<tr>\n<td></td>\n<td>亚马逊大批量商品费用 (非媒介商品 SKU 超过 200 万时收取)</td>\n<td>超过 200 万部分，每个收费 $0.0005</td>\n<td>超过 200 万部分，每个收费 $0.0005</td>\n</tr>\n<tr>\n<td></td>\n<td>亚马逊退款管理费 (退款后，亚马逊返还佣金时收取)</td>\n<td>$5.00 和销售佣金的 20% 的较低者</td>\n<td>$5.00 和销售佣金的 20% 的较低者</td>\n</tr>\n<tr>\n<td></td>\n<td>从美国亚马逊收款后转回国内银行卡的费用（转不转试需求而定）</td>\n<td>视不同收款账户而不同，例 WF 卡是 1%-2.5%</td>\n<td>视不同收款账户而不同，例 WF 卡是 1%-2.5%</td>\n</tr>\n<tr>\n<td></td>\n<td>税务</td>\n<td>填写 W-8BEN 表格，免税</td>\n<td>填写 W-9 表格，非美国银行卡收款，可以做到零报税</td>\n</tr>\n<tr>\n<td></td>\n<td>物流仓储</td>\n<td>视具体情况而定，你可选择 FBA，也可自行发货</td>\n<td>视具体情况而定，你可选择 FBA，也可自行发货</td>\n</tr>\n<tr>\n<td></td>\n<td>营销广告</td>\n<td>实时竞价，按每次点击收费 (CPC)。只展示，不点击，不收费</td>\n<td>实时竞价，按每次点击收费 (CPC)。只展示，不点击，不收费</td>\n</tr>\n<tr>\n<td></td>\n<td>产品</td>\n<td>产品成本及库存费用等</td>\n<td>产品成本及库存费用等</td>\n</tr>\n<tr>\n<td></td>\n<td>人员</td>\n<td>人力成本</td>\n<td>人力成本</td>\n</tr>\n</tbody>\n</table>\n<p>预估计最低成本:</p>\n<ul>\n<li>注册公司：1500￥</li>\n<li>代理记账：2000￥<br />\n大概 3500.</li>\n</ul>\n",
            "tags": [
                "跨境电商",
                "amazon"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Superset-%E9%9B%86%E6%88%90Echarts%E5%9C%B0%E5%9B%BE/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Superset-%E9%9B%86%E6%88%90Echarts%E5%9C%B0%E5%9B%BE/",
            "title": "Superset-集成Echarts地图",
            "date_published": "2020-05-21T02:19:08.000Z",
            "content_html": "<h1 id=\"操作系统\"><a class=\"anchor\" href=\"#操作系统\">#</a> 操作系统</h1>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\">  Windows</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\">  MAC</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\">  Linux</label></li>\n</ul>\n<h1 id=\"软件依赖\"><a class=\"anchor\" href=\"#软件依赖\">#</a> 软件依赖</h1>\n<p><span class=\"label info\">^ Lastest</span> <span class=\"label info\">~ minimum</span></p>\n<ul>\n<li>Python3.6~</li>\n<li>Pip~</li>\n<li>node.js~</li>\n</ul>\n<h1 id=\"实验环境\"><a class=\"anchor\" href=\"#实验环境\">#</a> 实验环境</h1>\n<ul>\n<li>Windows10</li>\n<li>python 3.68</li>\n<li>pip 19.2.3</li>\n<li>setuptools 41.4.0</li>\n<li>nodejs 12.15.0</li>\n<li>npm 6.134</li>\n<li>superset 0.35</li>\n</ul>\n<h1 id=\"前端开发\"><a class=\"anchor\" href=\"#前端开发\">#</a> 前端开发</h1>\n<ol>\n<li>在 visualizations 文件夹下创建 EchartsMapChina 文件夹<br />\n<img data-src=\"1.png\" alt=\"\" /></li>\n<li>在 images 文件夹里面放入图表的缩略图，可以自己去 echarts 官网截图然后放进去，名字不能更改</li>\n<li>创建 index.js</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> t <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/translation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ChartMetadata<span class=\"token punctuation\">,</span> ChartPlugin <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/chart'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> transformProps <span class=\"token keyword\">from</span> <span class=\"token string\">'./transformProps'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> thumbnail <span class=\"token keyword\">from</span> <span class=\"token string\">'./images/thumbnail.png'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChartMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  name<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Echart China Map'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  description<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  credits<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'http://echarts.baidu.com/examples/editor.html?c=scatter-effect'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  thumbnail<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeSeriesScatterChartPlugin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChartPlugin</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      metadata<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      transformProps<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token function-variable function\">loadChart</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./ReactEchartsChinaMap.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>transformProps.js</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">transformProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chartProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> queryData<span class=\"token punctuation\">,</span> formData <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> chartProps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">//console.log (chartProps); 可以用来验证数据是否正确</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    data<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    width<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    height<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    formData<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    toolTip<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>toolTip<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    series<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    maxMetrics<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>创建 ReactEchartsChinaMap.js</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> reactify <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/chart'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">'./EchartsChinaMap'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">reactify</span><span class=\"token punctuation\">(</span>Component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>创建 EchartsChinaMap.js<br />\n 注释内容是一些额外的样式，可以去掉也可以打开</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> d3 <span class=\"token keyword\">from</span> <span class=\"token string\">'d3'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CategoricalColorNamespace <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/color'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getNumberFormatter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/number-format'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">'./EchartsChinaMap.css'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> echarts <span class=\"token keyword\">from</span> <span class=\"token string\">'echarts'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> china <span class=\"token keyword\">from</span> <span class=\"token string\">'echarts/map/json/china.json'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  data<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  width<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  height<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">EchartsChinaMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>         width<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>         height<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>         formData<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>         series<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>         toolTip<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>         maxMetrics<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// var mapData = [</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"北京\",value:1199&#125;,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"天津\",value:42&#125;,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"河北\",value:102&#125;,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"山西\",value:81&#125;,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"内蒙古\",value:47&#125;,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"辽宁\",value:67&#125;,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"吉林\",value:82&#125;,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"黑龙江\",value:123&#125;,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"上海\",value:24&#125;,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"江苏\",value:92&#125;,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"浙江\",value:114&#125;,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"安徽\",value:109&#125;,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"福建\",value:116&#125;,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"江西\",value:91&#125;,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"山东\",value:119&#125;,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"河南\",value:137&#125;,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"湖北\",value:116&#125;,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"湖南\",value:114&#125;,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"重庆\",value:91&#125;,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"四川\",value:125&#125;,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"贵州\",value:62&#125;,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"云南\",value:83&#125;,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"西藏\",value:9&#125;,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"陕西\",value:80&#125;,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"甘肃\",value:56&#125;,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"青海\",value:10&#125;,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"宁夏\",value:18&#125;,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"新疆\",value:180&#125;,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"广东\",value:123&#125;,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"广西\",value:59&#125;,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"海南\",value:14&#125;,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\">//     ];</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\">// var toolTipData = [</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"北京\",value:[&#123;name:\"科技人才总数\",value:95&#125;,&#123;name:\"理科\",value:82&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"天津\",value:[&#123;name:\"文科\",value:22&#125;,&#123;name:\"理科\",value:20&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"河北\",value:[&#123;name:\"文科\",value:60&#125;,&#123;name:\"理科\",value:42&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"山西\",value:[&#123;name:\"文科\",value:40&#125;,&#123;name:\"理科\",value:41&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"内蒙古\",value:[&#123;name:\"文科\",value:23&#125;,&#123;name:\"理科\",value:24&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"辽宁\",value:[&#123;name:\"文科\",value:39&#125;,&#123;name:\"理科\",value:28&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"吉林\",value:[&#123;name:\"文科\",value:41&#125;,&#123;name:\"理科\",value:41&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"黑龙江\",value:[&#123;name:\"文科\",value:35&#125;,&#123;name:\"理科\",value:31&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"上海\",value:[&#123;name:\"文科\",value:12&#125;,&#123;name:\"理科\",value:12&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"江苏\",value:[&#123;name:\"文科\",value:47&#125;,&#123;name:\"理科\",value:45&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"浙江\",value:[&#123;name:\"文科\",value:57&#125;,&#123;name:\"理科\",value:57&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"安徽\",value:[&#123;name:\"文科\",value:57&#125;,&#123;name:\"理科\",value:52&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"福建\",value:[&#123;name:\"文科\",value:59&#125;,&#123;name:\"理科\",value:57&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"江西\",value:[&#123;name:\"文科\",value:49&#125;,&#123;name:\"理科\",value:42&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"山东\",value:[&#123;name:\"文科\",value:67&#125;,&#123;name:\"理科\",value:52&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"河南\",value:[&#123;name:\"文科\",value:69&#125;,&#123;name:\"理科\",value:68&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"湖北\",value:[&#123;name:\"文科\",value:60&#125;,&#123;name:\"理科\",value:56&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"湖南\",value:[&#123;name:\"文科\",value:62&#125;,&#123;name:\"理科\",value:52&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"重庆\",value:[&#123;name:\"文科\",value:47&#125;,&#123;name:\"理科\",value:44&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"四川\",value:[&#123;name:\"文科\",value:65&#125;,&#123;name:\"理科\",value:60&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"贵州\",value:[&#123;name:\"文科\",value:32&#125;,&#123;name:\"理科\",value:30&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"云南\",value:[&#123;name:\"文科\",value:42&#125;,&#123;name:\"理科\",value:41&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"西藏\",value:[&#123;name:\"文科\",value:5&#125;,&#123;name:\"理科\",value:4&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"陕西\",value:[&#123;name:\"文科\",value:38&#125;,&#123;name:\"理科\",value:42&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"甘肃\",value:[&#123;name:\"文科\",value:28&#125;,&#123;name:\"理科\",value:28&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"青海\",value:[&#123;name:\"文科\",value:5&#125;,&#123;name:\"理科\",value:5&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"宁夏\",value:[&#123;name:\"文科\",value:10&#125;,&#123;name:\"理科\",value:8&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"新疆\",value:[&#123;name:\"文科\",value:36&#125;,&#123;name:\"理科\",value:31&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"广东\",value:[&#123;name:\"文科\",value:63&#125;,&#123;name:\"理科\",value:60&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"广西\",value:[&#123;name:\"文科\",value:29&#125;,&#123;name:\"理科\",value:30&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token comment\">//     &#123;name:\"海南\",value:[&#123;name:\"文科\",value:8&#125;,&#123;name:\"理科\",value:6&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token comment\">// \t  &#123;name:\"青海\",value:[&#123;name:\"文科\",value:8&#125;,&#123;name:\"理科\",value:6&#125;]&#125;,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token comment\">// ];</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  <span class=\"token keyword\">const</span> div <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div id=\"myChart\" style=\"height:'</span> <span class=\"token operator\">+</span> height <span class=\"token operator\">+</span> <span class=\"token string\">'px; width:'</span> <span class=\"token operator\">+</span> width <span class=\"token operator\">+</span> <span class=\"token string\">'px;\">&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  div<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 给 echarts 添加 div</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>  <span class=\"token keyword\">var</span> myChart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myChart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始化 echarts</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>  echarts<span class=\"token punctuation\">.</span><span class=\"token function\">registerMap</span><span class=\"token punctuation\">(</span><span class=\"token string\">'china'</span><span class=\"token punctuation\">,</span>china<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  <span class=\"token keyword\">var</span> mapName <span class=\"token operator\">=</span> <span class=\"token string\">'china'</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  <span class=\"token keyword\">var</span> geoCoordMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> formData</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token comment\">// 为了适配颜色</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">const</span> colorList <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token constant\">DEFAULT</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'#15a8fe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rgba(21,168,254,0.31)'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#FFFF00'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token constant\">SUPERSET_DEFAULT</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"#f6efa6\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#d88273\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#bf444c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#15a8fe\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">var</span> colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">.</span>echartsColorScheme<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        colors <span class=\"token operator\">=</span> colorList<span class=\"token punctuation\">[</span>fd<span class=\"token punctuation\">.</span>echartsColorScheme<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        colors <span class=\"token operator\">=</span> colorList<span class=\"token punctuation\">[</span><span class=\"token string\">\"DEFAULT\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  <span class=\"token comment\">/* 获取地图数据 */</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>  myChart<span class=\"token punctuation\">.</span><span class=\"token function\">showLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>  <span class=\"token keyword\">var</span> mapFeatures <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">getMap</span><span class=\"token punctuation\">(</span>mapName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>geoJson<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>  myChart<span class=\"token punctuation\">.</span><span class=\"token function\">hideLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>  mapFeatures<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>      <span class=\"token comment\">// 地区名称</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>      <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>      <span class=\"token comment\">// 地区经纬度</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      geoCoordMap<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>cp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>  <span class=\"token keyword\">var</span> max <span class=\"token operator\">=</span> <span class=\"token number\">480</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>      min <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// todo </span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  <span class=\"token keyword\">var</span> maxSize4Pin <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>      minSize4Pin <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">convertData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>      <span class=\"token keyword\">var</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>          <span class=\"token keyword\">var</span> geoCoord <span class=\"token operator\">=</span> geoCoordMap<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>geoCoord<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>              res<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                  name<span class=\"token operator\">:</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                  value<span class=\"token operator\">:</span> geoCoord<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre> <span class=\"token keyword\">var</span> visualMap <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">.</span>echartsChinaVisualMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>     visualMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>          show<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>          min<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>          max<span class=\"token operator\">:</span> maxMetrics<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>          left<span class=\"token operator\">:</span> <span class=\"token string\">'10%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>          top<span class=\"token operator\">:</span> <span class=\"token string\">'bottom'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>          calculable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>          seriesIndex<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>          inRange<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>              color<span class=\"token operator\">:</span>colors<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>colors<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre> <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>      tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>          padding<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>          <span class=\"token comment\">// enterable: true,</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>          <span class=\"token comment\">// transitionDuration: 1,</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>          <span class=\"token comment\">// textStyle: &#123;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>          <span class=\"token comment\">//     color: '#000',</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>          <span class=\"token comment\">//     decoration: 'none',</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>          <span class=\"token comment\">// &#125;,</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>          <span class=\"token comment\">// position: function (point, params, dom, rect, size) &#123;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>          <span class=\"token comment\">//   return [point[0], point[1]];</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>          <span class=\"token comment\">// &#125;,</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>          <span class=\"token function-variable function\">formatter</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">params</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>              <span class=\"token keyword\">var</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span> </pre></td></tr><tr><td data-num=\"176\"></td><td><pre>              <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>seriesType<span class=\"token operator\">!=</span><span class=\"token string\">\"map\"</span> <span class=\"token operator\">||</span> params<span class=\"token punctuation\">.</span>seriesType<span class=\"token operator\">==</span><span class=\"token string\">\"effectScatter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>                  total <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span>params<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>                  total <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>value</pre></td></tr><tr><td data-num=\"180\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>                  total <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>              <span class=\"token comment\">// var tooltipHtml = '&lt;p style=\"color:#fff;font-size:12px;\">'+'&lt;i style=\"display:inline-block;width:10px;height:10px;background:#0abdea;border-radius:40px;margin:0 8px\">'+'&lt;/i>'</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>     <span class=\"token comment\">//          +' 总数：'+'&lt;span style=\"color:#0abdea;margin:0 6px;\">'+total+'&lt;/span>'+' 个 '+'&lt;/p>'</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>              <span class=\"token keyword\">var</span> tooltipHtml <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toolTip<span class=\"token punctuation\">[</span>params<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>                  <span class=\"token keyword\">return</span>  tipHtml <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div style=\"width:280px;height:180px;background:rgba(22,80,158,0.8);border:1px solid rgba(7,166,255,0.7)\">'</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>              <span class=\"token operator\">+</span><span class=\"token string\">'&lt;div style=\"width:100%;height:40px;line-height:40px;border-bottom:2px solid rgba(7,166,255,0.7);padding:0 20px\">'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;i style=\"display:inline-block;width:8px;height:8px;background:#16d6ff;border-radius:40px;\">'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/i>'</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>              <span class=\"token operator\">+</span><span class=\"token string\">'&lt;span style=\"margin-left:10px;color:#fff;font-size:16px;\">'</span><span class=\"token operator\">+</span>params<span class=\"token punctuation\">.</span>name<span class=\"token operator\">+</span><span class=\"token string\">':   '</span><span class=\"token operator\">+</span>total<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/span>'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/div>'</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>              <span class=\"token operator\">+</span><span class=\"token string\">'&lt;div style=\"padding:20px\">'</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>              <span class=\"token comment\">// + tooltipHtml</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>              <span class=\"token operator\">+</span><span class=\"token string\">'&lt;/div>'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>              <span class=\"token keyword\">var</span> height <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>toolTip<span class=\"token punctuation\">[</span>params<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>toolTip<span class=\"token punctuation\">[</span>params<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>                      <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>                  <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span>  <span class=\"token string\">'&lt;p style=\"color:#fff;font-size:12px;\">'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;i style=\"display:inline-block;width:10px;height:10px;background:#0abdea;border-radius:40px;margin:0 8px\">'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/i>'</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>              <span class=\"token operator\">+</span>toolTip<span class=\"token punctuation\">[</span>params<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">+</span><span class=\"token string\">'&lt;span style=\"color:#0abdea;margin:0 6px;\">'</span><span class=\"token operator\">+</span>toolTip<span class=\"token punctuation\">[</span>params<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/span>'</span><span class=\"token operator\">+</span><span class=\"token string\">'个'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/p>'</span> </pre></td></tr><tr><td data-num=\"202\"></td><td><pre>                  tooltipHtml <span class=\"token operator\">+=</span> temp</pre></td></tr><tr><td data-num=\"203\"></td><td><pre>                  height <span class=\"token operator\">+=</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>              console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>              <span class=\"token keyword\">var</span> tipHtml <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>              tipHtml <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div style=\"width:280px;height:'</span><span class=\"token operator\">+</span>height<span class=\"token operator\">+</span><span class=\"token string\">'px'</span><span class=\"token operator\">+</span><span class=\"token string\">';border:1px solid rgba(197,197,197,0.7)\">'</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>              <span class=\"token operator\">+</span><span class=\"token string\">'&lt;div style=\"width:100%;height:40px;line-height:40px;border-bottom:2px solid #d0d0d0;padding:0 20px\">'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;i style=\"display:inline-block;width:8px;height:8px;background:#0abdea;border-radius:40px;\">'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/i>'</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>              <span class=\"token operator\">+</span><span class=\"token string\">'&lt;span style=\"margin-left:10px;color:#fff;font-size:16px;\">'</span><span class=\"token operator\">+</span>params<span class=\"token punctuation\">.</span>name<span class=\"token operator\">+</span><span class=\"token string\">':  '</span><span class=\"token operator\">+</span>total<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/span>'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/div>'</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>              <span class=\"token operator\">+</span><span class=\"token string\">'&lt;div style=\"padding:20px\">'</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>              <span class=\"token operator\">+</span> tooltipHtml</pre></td></tr><tr><td data-num=\"212\"></td><td><pre>              <span class=\"token operator\">+</span><span class=\"token string\">'&lt;/div>'</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>              <span class=\"token keyword\">return</span> tipHtml<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>      visualMap<span class=\"token operator\">:</span> visualMap<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>      <span class=\"token comment\">// geo: &#123;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>      <span class=\"token comment\">//     show: true,</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>      <span class=\"token comment\">//     map: mapName,</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>      <span class=\"token comment\">//     label: &#123;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>      <span class=\"token comment\">//         normal: &#123;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>      <span class=\"token comment\">//             show: false</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>      <span class=\"token comment\">//         &#125;,</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>      <span class=\"token comment\">//         emphasis: &#123;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>      <span class=\"token comment\">//             show: false,</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>      <span class=\"token comment\">//         &#125;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>      <span class=\"token comment\">//     &#125;,</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>      <span class=\"token comment\">//     roam: false,</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>      <span class=\"token comment\">//     itemStyle: &#123;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>      <span class=\"token comment\">//         normal: &#123;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>      <span class=\"token comment\">//             areaColor: colors[0],</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>      <span class=\"token comment\">//             borderColor: '#1180c7',</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>      <span class=\"token comment\">//         &#125;,</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>      <span class=\"token comment\">//         emphasis: &#123;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>      <span class=\"token comment\">//             areaColor: '#4499d0',</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>      <span class=\"token comment\">//         &#125;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>      <span class=\"token comment\">//     &#125;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>      <span class=\"token comment\">// &#125;,</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>      geo<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>        show<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>        map<span class=\"token operator\">:</span> <span class=\"token string\">'china'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>        label<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>          normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>            show<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>          emphasis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>            show<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>        roam<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>        itemStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>          normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>            areaColor<span class=\"token operator\">:</span> <span class=\"token string\">'#fbfbfb'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>            borderColor<span class=\"token operator\">:</span> <span class=\"token string\">'#878787'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>          emphasis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>            areaColor<span class=\"token operator\">:</span> <span class=\"token string\">'#0c679b'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>      series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>              name<span class=\"token operator\">:</span> <span class=\"token string\">'散点'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'scatter'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>              coordinateSystem<span class=\"token operator\">:</span> <span class=\"token string\">'geo'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>              data<span class=\"token operator\">:</span> <span class=\"token function\">convertData</span><span class=\"token punctuation\">(</span>series<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>              <span class=\"token function-variable function\">symbolSize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>                 <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">.</span>echartsChinaProvice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>                 <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>                 <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>              <span class=\"token comment\">// label: &#123;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>              <span class=\"token comment\">//     normal: &#123;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>              <span class=\"token comment\">//         formatter: '&#123;b&#125;',</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>              <span class=\"token comment\">//         position: 'right',</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>              <span class=\"token comment\">//         show: true</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>              <span class=\"token comment\">//     &#125;,</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>              <span class=\"token comment\">//     emphasis: &#123;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>              <span class=\"token comment\">//         show: true</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>              <span class=\"token comment\">//     &#125;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>              <span class=\"token comment\">// &#125;,</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>              <span class=\"token comment\">// itemStyle: &#123;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>              <span class=\"token comment\">//     normal: &#123;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>              <span class=\"token comment\">//         color: '#fff'</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>              <span class=\"token comment\">//     &#125;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>              <span class=\"token comment\">// &#125;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'map'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>              map<span class=\"token operator\">:</span> mapName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>              geoIndex<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>              aspectScale<span class=\"token operator\">:</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 长宽比</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>              showLegendSymbol<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 存在 legend 时显示</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>              label<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>                  normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>                      show<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>                  emphasis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>                      show<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>                      textStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>                          color<span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>                      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>              roam<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>              <span class=\"token comment\">// itemStyle: &#123;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>              <span class=\"token comment\">//     normal: &#123;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>              <span class=\"token comment\">//         areaColor: '#031525',</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>              <span class=\"token comment\">//         borderColor: '#3B5077',</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>              <span class=\"token comment\">//     &#125;,</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>              <span class=\"token comment\">//     emphasis: &#123;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>              <span class=\"token comment\">//         areaColor: '#2B91B7'</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>              <span class=\"token comment\">//     &#125;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>              <span class=\"token comment\">// &#125;,</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>              animation<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>              data<span class=\"token operator\">:</span> series</pre></td></tr><tr><td data-num=\"321\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>     <span class=\"token comment\">//      &#123;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>     <span class=\"token comment\">//          name: ' 点 ',</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>     <span class=\"token comment\">//          type: 'scatter',</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>     <span class=\"token comment\">//          coordinateSystem: 'geo',</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>     <span class=\"token comment\">//          zlevel: 6,</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>     <span class=\"token comment\">//      &#125;,</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>     <span class=\"token comment\">//      &#123;</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>     <span class=\"token comment\">//          name: 'Top 5',</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>     <span class=\"token comment\">//          type: 'effectScatter',</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>     <span class=\"token comment\">//          coordinateSystem: 'geo',</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>     <span class=\"token comment\">//          data: convertData(series),</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>     <span class=\"token comment\">//          symbolSize: function(val) &#123;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>                 <span class=\"token comment\">//   if((val[2] / 10)>10)&#123;</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>                 <span class=\"token comment\">//   \treturn 10</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>                 <span class=\"token comment\">//    &#125;</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>     <span class=\"token comment\">//              return val[2] / 10;</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>     <span class=\"token comment\">//          &#125;,</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>     <span class=\"token comment\">//          showEffectOn: 'render',</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>     <span class=\"token comment\">//          rippleEffect: &#123;</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>     <span class=\"token comment\">//              brushType: 'stroke'</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>     <span class=\"token comment\">//          &#125;,</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>     <span class=\"token comment\">//          hoverAnimation: true,</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>     <span class=\"token comment\">//          label: &#123;</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>     <span class=\"token comment\">//              normal: &#123;</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>     <span class=\"token comment\">//                  formatter: '&#123;b&#125;',</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>     <span class=\"token comment\">//                  position: 'left',</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>     <span class=\"token comment\">//                  show: false</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>     <span class=\"token comment\">//              &#125;</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>     <span class=\"token comment\">//          &#125;,</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>     <span class=\"token comment\">//          itemStyle: &#123;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>     <span class=\"token comment\">//              normal: &#123;</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>     <span class=\"token comment\">//                  color: colors[colors.length-1],</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>     <span class=\"token comment\">//                  shadowBlur: 10,</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>     <span class=\"token comment\">//                  shadowColor: colors[colors.length-1]</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>     <span class=\"token comment\">//              &#125;</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>     <span class=\"token comment\">//          &#125;,</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>     <span class=\"token comment\">//          zlevel: 1</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>     <span class=\"token comment\">//      &#125;,</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>      <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">.</span>echartsChinaProvice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>        option<span class=\"token punctuation\">[</span><span class=\"token string\">'series'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"label\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>            normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>formatter<span class=\"token operator\">:</span> <span class=\"token string\">'&#123;b&#125;'</span><span class=\"token punctuation\">,</span>position<span class=\"token operator\">:</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">,</span>show<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>            emphasis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>show<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>        option<span class=\"token punctuation\">[</span><span class=\"token string\">'series'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"itemStyle\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>color<span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">.</span>echartsChinaPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>      option<span class=\"token punctuation\">[</span><span class=\"token string\">'series'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'点'</span><span class=\"token punctuation\">,</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'scatter'</span><span class=\"token punctuation\">,</span>coordinateSystem<span class=\"token operator\">:</span> <span class=\"token string\">'geo'</span><span class=\"token punctuation\">,</span>zlevel<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>      option<span class=\"token punctuation\">[</span><span class=\"token string\">'series'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>              name<span class=\"token operator\">:</span> <span class=\"token string\">'Top 5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'effectScatter'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>              coordinateSystem<span class=\"token operator\">:</span> <span class=\"token string\">'geo'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>              data<span class=\"token operator\">:</span> <span class=\"token function\">convertData</span><span class=\"token punctuation\">(</span>series<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>              <span class=\"token function-variable function\">symbolSize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>                   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>                  <span class=\"token keyword\">return</span> val<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre>              showEffectOn<span class=\"token operator\">:</span> <span class=\"token string\">'render'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>              rippleEffect<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"389\"></td><td><pre>                  brushType<span class=\"token operator\">:</span> <span class=\"token string\">'stroke'</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>              hoverAnimation<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"392\"></td><td><pre>              label<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"393\"></td><td><pre>                  normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre>                      formatter<span class=\"token operator\">:</span> <span class=\"token string\">'&#123;b&#125;'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>                      position<span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre>                      show<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"397\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>              itemStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>                  normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre>                      color<span class=\"token operator\">:</span> colors<span class=\"token punctuation\">[</span>colors<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>                      shadowBlur<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre>                      shadowColor<span class=\"token operator\">:</span> colors<span class=\"token punctuation\">[</span>colors<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>              zlevel<span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"409\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">[</span><span class=\"token string\">'series'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>  myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre></pre></td></tr><tr><td data-num=\"412\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre></pre></td></tr><tr><td data-num=\"414\"></td><td><pre>EchartsChinaMap<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token string\">'Echarts Bar'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>EchartsChinaMap<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> propTypes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"416\"></td><td><pre></pre></td></tr><tr><td data-num=\"417\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> EchartsChinaMap</pre></td></tr></table></figure><p>7. 修改 /visualizations/presets/MainPreset.js<br />\n<img data-src=\"2.png\" alt=\"\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 开头导入</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> EchartsChinaMapChartPlugin <span class=\"token keyword\">from</span> <span class=\"token string\">'../EchartsChinaMap/index.js'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//plugins 下增加</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">EchartsChinaMapChartPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token operator\">:</span> <span class=\"token string\">'echarts_china_map'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>8. 修改 /explore/components/controls/VizTypeControl.jsx<br />\n 变量 DEFAULT_ORDER 增加 'echarts_china_map'</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_ORDER</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'big_number'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'filter_box'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dist_bar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'area'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">'deck_polygon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'time_table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pivot_table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'histogram'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">'big_number_total'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_scatter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_hex'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'time_pivot'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_arc'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">'heatmap'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_grid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dual_line'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_screengrid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'line_multi'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token string\">'treemap'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'box_plot'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'separator'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sunburst'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sankey'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'word_cloud'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token string\">'mapbox'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'kepler'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cal_heatmap'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rose'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bubble'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_geojson'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token string\">'horizon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_multi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'compare'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'partition'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'event_flow'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token string\">'deck_path'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'directed_force'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'world_map'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'paired_ttest'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'para'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token string\">'iframe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'country_map'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'echarts_china_map'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>9. 新建 /explore/controlPanels/echartsChinaMap.js</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> t <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/translation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    requiresTime<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    controlPanelSections<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Chart Options'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'echarts_china_visualMap'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                 <span class=\"token punctuation\">[</span><span class=\"token string\">'echarts_color_scheme'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'label_colors'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                 <span class=\"token punctuation\">[</span><span class=\"token string\">'echarts_china_Point'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                 <span class=\"token punctuation\">[</span><span class=\"token string\">'echarts_china_Provice'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'分组'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'groupby'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'指标'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'echarts_china_map_metrics'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'查询'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'adhoc_filters'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    controlOverrides<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>10. 修改 /explore/controls.jsx<br />\n 在文件最下面添加</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//echarts china map</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    echarts_china_map_metrics<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token operator\">...</span>metrics<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 继承</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      multi<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 多选</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      clearable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否可调用， true 当作 sql</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      validators<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否可以为空</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Metrics'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Metrics for which line type are to be displayed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    echarts_china_visualMap<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'CheckboxControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'是否显示visualMap'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Do you want a visualMap?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    echarts_china_Point<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'CheckboxControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'是否显示点'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Do you want Points?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    echarts_china_Provice<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'CheckboxControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'是否显示省份'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Do you want Provices?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    echarts_color_scheme<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'ColorSchemeControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Color Scheme'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'DEFAULT'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      choices<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token punctuation\">[</span><span class=\"token string\">\"DEFAULT\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"DEFAULT\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          <span class=\"token punctuation\">[</span><span class=\"token string\">\"SUPERSET_DEFAULT\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SUPERSET_DEFAULT\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The color scheme for rendering chart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      schemes<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>          <span class=\"token constant\">DEFAULT</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'#15a8fe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rgba(21,168,254,0.31)'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#FFFF00'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>description<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>id<span class=\"token operator\">:</span><span class=\"token string\">\"DEFAULT\"</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">:</span><span class=\"token string\">\"DEFAULT Category \"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>          <span class=\"token constant\">SUPERSET_DEFAULT</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"#f6efa6\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#d88273\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#bf444c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#15a8fe\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>description<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>id<span class=\"token operator\">:</span><span class=\"token string\">\"d3Category10\"</span><span class=\"token punctuation\">,</span>label<span class=\"token operator\">:</span><span class=\"token string\">\"D3 Category 10\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>11. 修改 /setup/setupPlugins.ts</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 开头导入</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> EchartsChinaMap <span class=\"token keyword\">from</span> <span class=\"token string\">'../explore/controlPanels/EchartsChinaMap'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//getChartControlPanelRegistry 下增加，注意只有最后一个有分号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token function\">registerValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'echarts_china_map'</span><span class=\"token punctuation\">,</span> EchartsChinaMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>12. 修改 \\superset\\assets\\package.json, 引入 npm echarts 包（如果已经引入则跳过）<br />\n<img data-src=\"6.png\" alt=\"\" /></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 找到 dependencies 下面增加</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"echarts\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.7.0\"</span></pre></td></tr></table></figure><h1 id=\"后端开发\"><a class=\"anchor\" href=\"#后端开发\">#</a> 后端开发</h1>\n<ol>\n<li>修改 superset/viz.py，修改 METRIC_KEYS，添加 echarts_china_map_metrics</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">//</span>找到METRIC_KEYS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>METRIC_KEYS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"metric\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"metrics\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"percent_metrics\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">\"metric_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"secondary_metric\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"echarts_china_map_metrics\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>修改 superset/viz.py，在 viz_types 前添加下面代码</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">EchartsChinaMapViz</span><span class=\"token punctuation\">(</span>NVD3Viz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\" echarts pie  \"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    viz_type <span class=\"token operator\">=</span> <span class=\"token string\">\"echarts_china_map\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    verbose_name <span class=\"token operator\">=</span> _<span class=\"token punctuation\">(</span><span class=\"token string\">\"Echarts China Map\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 是否排序</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    sort_series <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 是否对 time 做处理 _timestamp</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    is_timeseries <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">query_obj</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># check bar column, line column 是否重复</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        bar_metrics <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>form_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'echarts_china_map_metrics'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> bar_metrics <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please choose metrics on line or bar type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        bar_metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> bar_metrics <span class=\"token keyword\">else</span> bar_metrics</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        d <span class=\"token operator\">=</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>query_obj<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> d</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">to_series</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">,</span> classed<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>         拼接 前端渲染需要的数据</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        :param df:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        :param classed:</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        :return: &#123;'legend':[], 'bar':[], 'line':[]&#125;</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">if</span> col <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                cols<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"N/A\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">elif</span> col <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                cols<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"NULL\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                cols<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        df<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> cols</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        metrics <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>all_metrics</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        toolTip<span class=\"token punctuation\">,</span>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        total <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        toolTipData <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        series <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span><span class=\"token string\">\"series\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">for</span> mt <span class=\"token keyword\">in</span> metrics<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            m_label <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span>get_metric_name<span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m_label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            ys <span class=\"token operator\">=</span>  <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>series<span class=\"token punctuation\">[</span>m_label<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> ys<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token keyword\">if</span> y<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                    <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                province <span class=\"token operator\">=</span> y<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"省\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                province <span class=\"token operator\">=</span> province<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"市\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                province <span class=\"token operator\">=</span> province<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"自治区\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                province <span class=\"token operator\">=</span> province<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"自治区\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token keyword\">if</span> province <span class=\"token keyword\">in</span> total<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                    total<span class=\"token punctuation\">[</span>province<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span>  y<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                    total<span class=\"token punctuation\">[</span>province<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  y<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">if</span> province <span class=\"token keyword\">in</span> toolTipData<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    toolTipData<span class=\"token punctuation\">[</span>province<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>m_label<span class=\"token punctuation\">,</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                    toolTipData<span class=\"token punctuation\">[</span>province<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>m_label<span class=\"token punctuation\">,</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> total<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">,</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span>v<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        chart_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token string\">'toolTip'</span><span class=\"token punctuation\">:</span> toolTipData<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token string\">'max'</span><span class=\"token punctuation\">:</span> total<span class=\"token punctuation\">[</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span>total<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">return</span> chart_data</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">:</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token comment\"># 后端返回的数据</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>pivot_table<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">,</span> values<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>metric_labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        chart_data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>to_series<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">return</span> chart_data</pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "大数据",
                "数据可视化",
                "python",
                "superset"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Superset-%E9%9B%86%E6%88%90Echarts%E9%A5%BC%E5%9B%BE/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Superset-%E9%9B%86%E6%88%90Echarts%E9%A5%BC%E5%9B%BE/",
            "title": "Superset-集成Echarts饼图",
            "date_published": "2020-04-26T05:41:51.000Z",
            "content_html": "<h1 id=\"操作系统\"><a class=\"anchor\" href=\"#操作系统\">#</a> 操作系统</h1>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\">  Windows</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\">  MAC</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\">  Linux</label></li>\n</ul>\n<h1 id=\"软件依赖\"><a class=\"anchor\" href=\"#软件依赖\">#</a> 软件依赖</h1>\n<p><span class=\"label info\">^ Lastest</span> <span class=\"label info\">~ minimum</span></p>\n<ul>\n<li>Python3.6~</li>\n<li>Pip~</li>\n<li>node.js~</li>\n</ul>\n<h1 id=\"实验环境\"><a class=\"anchor\" href=\"#实验环境\">#</a> 实验环境</h1>\n<ul>\n<li>Windows10</li>\n<li>python 3.68</li>\n<li>pip 19.2.3</li>\n<li>setuptools 41.4.0</li>\n<li>nodejs 12.15.0</li>\n<li>npm 6.134</li>\n<li>superset 0.35</li>\n</ul>\n<h1 id=\"前端开发\"><a class=\"anchor\" href=\"#前端开发\">#</a> 前端开发</h1>\n<ol>\n<li>在 visualizations 文件夹下创建 EchartsPie 文件夹<br />\n<img data-src=\"1.png\" alt=\"\" /></li>\n<li>在 images 文件夹里面放入图表的缩略图，可以自己去 echarts 官网截图然后放进去，名字不能更改</li>\n<li>创建 index.js</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> t <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/translation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ChartMetadata<span class=\"token punctuation\">,</span> ChartPlugin <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/chart'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> transformProps <span class=\"token keyword\">from</span> <span class=\"token string\">'./transformProps'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> thumbnail <span class=\"token keyword\">from</span> <span class=\"token string\">'./images/thumbnail.png'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChartMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  name<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Echart Pie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  description<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  credits<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'http://echarts.baidu.com/examples/editor.html?c=scatter-effect'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  thumbnail<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeSeriesScatterChartPlugin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChartPlugin</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      metadata<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      transformProps<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token function-variable function\">loadChart</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./ReactEchartsPie.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>transformProps.js</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">transformProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chartProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> queryData<span class=\"token punctuation\">,</span> formData<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> chartProps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token comment\">//formData 前端页面的数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">//queryData  后端返回的数据</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          data<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          width<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          height<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          formData<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          legend<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          series<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>创建 ReactEchartsPie.js</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> reactify <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/chart'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">'./EchartsPie'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">reactify</span><span class=\"token punctuation\">(</span>Component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>创建 EchartsPie</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> d3 <span class=\"token keyword\">from</span> <span class=\"token string\">'d3'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CategoricalColorNamespace <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/color'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getNumberFormatter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/number-format'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> echarts <span class=\"token keyword\">from</span> <span class=\"token string\">'echarts'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  data<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  width<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  height<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">EchartsPie</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>         width<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>         height<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>         data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         formData<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>         series<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>         legend<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span> <span class=\"token comment\">//transformProps.js 返回的数据</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     <span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> formData</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>     <span class=\"token comment\">// 为了适配颜色</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     <span class=\"token keyword\">const</span> colorFn <span class=\"token operator\">=</span> CategoricalColorNamespace<span class=\"token punctuation\">.</span><span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     <span class=\"token keyword\">var</span> colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>colorFn <span class=\"token operator\">&amp;&amp;</span> colorFn<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>         colors <span class=\"token operator\">=</span> colorFn<span class=\"token punctuation\">.</span>colors</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>     <span class=\"token keyword\">const</span> div <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>     <span class=\"token keyword\">const</span> sliceId <span class=\"token operator\">=</span> <span class=\"token string\">'mix-bar-line-'</span> <span class=\"token operator\">+</span> fd<span class=\"token punctuation\">.</span>sliceId<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>     <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div id='</span><span class=\"token operator\">+</span> sliceId <span class=\"token operator\">+</span> <span class=\"token string\">' style=\"height:'</span> <span class=\"token operator\">+</span> height <span class=\"token operator\">+</span> <span class=\"token string\">'px; width:'</span> <span class=\"token operator\">+</span> width <span class=\"token operator\">+</span> <span class=\"token string\">'px;\">&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>     div<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>     <span class=\"token comment\">//init echarts，light 为制定主题，可以查看官方 api</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     <span class=\"token keyword\">var</span> myChart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>sliceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>     <span class=\"token comment\">//echarts 渲染图表的数据格式 在官网可以查看</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">let</span> bgColor <span class=\"token operator\">=</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">let</span> title <span class=\"token operator\">=</span> fd<span class=\"token punctuation\">.</span>echartsPieTitle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>title <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        title <span class=\"token operator\">=</span> <span class=\"token string\">\"总量\"</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">let</span> unit <span class=\"token operator\">=</span> fd<span class=\"token punctuation\">.</span>echartsPieUnit</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>unit <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        unit <span class=\"token operator\">=</span> <span class=\"token string\">\"个\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">formatNumber</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">let</span> reg <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?=(\\B)(\\d&#123;3&#125;)+$)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">let</span> total <span class=\"token operator\">=</span> series<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>value <span class=\"token operator\">*</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">var</span> echart_legend <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> fd<span class=\"token punctuation\">.</span>echartsPieLegendX</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">||</span> x <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        x <span class=\"token operator\">=</span> <span class=\"token string\">'2%'</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        x <span class=\"token operator\">=</span> fd<span class=\"token punctuation\">.</span>echartsPieLegendX <span class=\"token operator\">+</span> <span class=\"token string\">'%'</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> fd<span class=\"token punctuation\">.</span>echartsPieLegendY</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        y <span class=\"token operator\">=</span> <span class=\"token string\">'10%'</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        y <span class=\"token operator\">=</span> fd<span class=\"token punctuation\">.</span>echartsPieLegendY <span class=\"token operator\">+</span> <span class=\"token string\">'%'</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">var</span> legend_orient <span class=\"token operator\">=</span> <span class=\"token string\">\"horizontal\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">.</span>echartsPieLegendVertical<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        legend_orient <span class=\"token operator\">=</span> <span class=\"token string\">\"vertical\"</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">.</span>echartsLegend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        echart_legend <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>          orient<span class=\"token operator\">:</span> legend_orient<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                        x<span class=\"token operator\">:</span> x<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                        y<span class=\"token operator\">:</span> y<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                        data<span class=\"token operator\">:</span> legend<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                        icon<span class=\"token operator\">:</span><span class=\"token string\">\"circle\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                        <span class=\"token function-variable function\">formatter</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                           <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> series<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                           res <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                           <span class=\"token keyword\">let</span> unit <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>unit <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                           <span class=\"token keyword\">return</span> <span class=\"token string\">'&#123;name|'</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;  &#123;value|'</span> <span class=\"token operator\">+</span> res<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;&#123;unit|'</span> <span class=\"token operator\">+</span> unit <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                        textStyle<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                            rich<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                                a<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                                    fontSize<span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                                    color<span class=\"token operator\">:</span><span class=\"token string\">\"#EA5504\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                                    padding<span class=\"token operator\">:</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                                b<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                                    fontSize<span class=\"token operator\">:</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                                    color<span class=\"token operator\">:</span><span class=\"token string\">\"#333\"</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    backgroundColor<span class=\"token operator\">:</span> bgColor<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    color<span class=\"token operator\">:</span> colors<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        trigger<span class=\"token operator\">:</span> <span class=\"token string\">'item'</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token comment\">// toolbox: &#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre> <span class=\"token comment\">//        feature: &#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre> <span class=\"token comment\">//            dataView: &#123;show: true, readOnly: false&#125;,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre> <span class=\"token comment\">//            magicType: &#123;show: true, type: ['line', 'bar']&#125;,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre> <span class=\"token comment\">//            restore: &#123;show: true&#125;,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre> <span class=\"token comment\">//            saveAsImage: &#123;show: true&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre> <span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre> <span class=\"token comment\">//    &#125;,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    title<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        text<span class=\"token operator\">:</span> <span class=\"token string\">'&#123;name|'</span> <span class=\"token operator\">+</span> title <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;\\n&#123;val|'</span> <span class=\"token operator\">+</span> <span class=\"token function\">formatNumber</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        top<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        left<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        textStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            rich<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>                name<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>                    fontSize<span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>                    fontWeight<span class=\"token operator\">:</span> <span class=\"token string\">'normal'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>                    color<span class=\"token operator\">:</span> <span class=\"token string\">'#666666'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>                    padding<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>                val<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>                    fontSize<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>                    fontWeight<span class=\"token operator\">:</span> <span class=\"token string\">'bold'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>                    color<span class=\"token operator\">:</span> <span class=\"token string\">'#333333'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        text<span class=\"token operator\">:</span> <span class=\"token string\">'单位：'</span><span class=\"token operator\">+</span>unit<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        top<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        left<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        textStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>            fontSize<span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            color<span class=\"token operator\">:</span><span class=\"token string\">'#666666'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            fontWeight<span class=\"token operator\">:</span> <span class=\"token number\">400</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    legend<span class=\"token operator\">:</span> echart_legend<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        type<span class=\"token operator\">:</span> <span class=\"token string\">'pie'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        radius <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'45%'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'60%'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        center<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'50%'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'50%'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        data<span class=\"token operator\">:</span> series<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        hoverAnimation<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        itemStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>            normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>                borderColor<span class=\"token operator\">:</span> bgColor<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>                borderWidth<span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>        labelLine<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>            normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>                length<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>                length2<span class=\"token operator\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>                lineStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>                    color<span class=\"token operator\">:</span> <span class=\"token string\">'#e6e6e6'</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        label<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>            normal<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>                <span class=\"token function-variable function\">formatter</span><span class=\"token operator\">:</span> <span class=\"token parameter\">params</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>                        <span class=\"token string\">'&#123;icon|●&#125;&#123;name|'</span> <span class=\"token operator\">+</span> params<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;&#123;value|'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>                        <span class=\"token function\">formatNumber</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>                padding<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>                rich<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>                    icon<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>                        fontSize<span class=\"token operator\">:</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>                    name<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>                        fontSize<span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>                        padding<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>                        color<span class=\"token operator\">:</span> <span class=\"token string\">'#666666'</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>                        fontSize<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>                        fontWeight<span class=\"token operator\">:</span> <span class=\"token string\">'bold'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>                        color<span class=\"token operator\">:</span> <span class=\"token string\">'#333333'</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fd<span class=\"token punctuation\">.</span>echartsDonut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>        <span class=\"token keyword\">delete</span> option<span class=\"token punctuation\">[</span><span class=\"token string\">\"series\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>radius </pre></td></tr><tr><td data-num=\"199\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>     myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre></pre></td></tr><tr><td data-num=\"203\"></td><td><pre></pre></td></tr><tr><td data-num=\"204\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>EchartsPie<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token string\">'Echarts Pie'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>EchartsPie<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> propTypes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> EchartsPie<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"7\">\n<li>修改 /visualizations/presets/MainPreset.js<br />\n<img data-src=\"2.png\" alt=\"\" /></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 开头导入</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> EchartsPieChartPlugin <span class=\"token keyword\">from</span> <span class=\"token string\">'../EchartsPie/index.js'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//plugins 下增加</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">EchartsPieChartPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token operator\">:</span> <span class=\"token string\">'echarts_pie'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><ol start=\"8\">\n<li>修改 /explore/components/controls/VizTypeControl.jsx<br />\n 变量 DEFAULT_ORDER 增加 'echarts_pie'</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_ORDER</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'big_number'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'filter_box'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dist_bar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'area'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">'deck_polygon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'time_table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pivot_table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'histogram'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">'big_number_total'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_scatter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_hex'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'time_pivot'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_arc'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">'heatmap'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_grid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dual_line'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_screengrid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'line_multi'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token string\">'treemap'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'box_plot'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'separator'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sunburst'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sankey'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'word_cloud'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token string\">'mapbox'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'kepler'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cal_heatmap'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rose'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bubble'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_geojson'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token string\">'horizon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_multi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'compare'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'partition'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'event_flow'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token string\">'deck_path'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'directed_force'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'world_map'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'paired_ttest'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'para'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token string\">'iframe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'country_map'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'echarts_pie'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"9\">\n<li>新建 /explore/controlPanels/EchartsPie.js<br />\n<img data-src=\"3.png\" alt=\"\" /></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> *   https://www.echartsjs.com/examples/zh/editor.html?c=mix-line-bar</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> *   mix line bar</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> t <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/translation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    requiresTime<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    controlPanelSections<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Chart Options'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'color_scheme'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'label_colors'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'X Axis'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'groupby'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'metrics'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'echarts_pie_metrics'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'样式设置'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'echarts_pie_title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"echarts_donut\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"echarts_pie_unit\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"echarts_legend\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'legend设置'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'echarts_pie_legend_x'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"echarts_pie_legend_y\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"echarts_pie_legend_vertical\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Query'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token string\">'adhoc_filters'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    controlOverrides<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"10\">\n<li>修改 /explore/controls.jsx<br />\n<img data-src=\"4.png\" alt=\"\" /><br />\n 在文件最下面添加</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// echarts pie</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    echarts_pie_metrics<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token operator\">...</span>metrics<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 继承</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      multi<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 多选</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      clearable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否可调用， true 当作 sql</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      validators<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否可以为空</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Metrics'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Metrics for which line type are to be displayed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    echarts_pie_title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'TextControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'标题'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'总量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    echarts_pie_unit<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'TextControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'单位'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'个'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    echarts_donut<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'CheckboxControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'是否镂空'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Do you want a donut or a pie?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    echarts_legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'CheckboxControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'是否显示legend'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Do you want a donut or a pie?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    echarts_pie_legend_vertical<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'CheckboxControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'legend是否垂直排列'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Do you want a donut or a pie?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    echarts_pie_legend_x<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>       type<span class=\"token operator\">:</span> <span class=\"token string\">'TextControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>       label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'legend x position'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>       renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>       <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        isInt<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     echarts_pie_legend_y<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        type<span class=\"token operator\">:</span> <span class=\"token string\">'TextControl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'legend y position'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        renderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>         isInt<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><ol start=\"11\">\n<li>修改 /setup/setupPlugins.ts<br />\n<img data-src=\"5.png\" alt=\"\" /></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 开头导入</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> EchartsPie <span class=\"token keyword\">from</span> <span class=\"token string\">'../explore/controlPanels/EchartsPie'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//getChartControlPanelRegistry 下增加，注意只有最后一个有分号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token function\">registerValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'echarts_pie'</span><span class=\"token punctuation\">,</span> EchartsPie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"12\">\n<li>修改 \\superset\\assets\\package.json, 引入 npm echarts 包（如果已经引入则跳过）<br />\n<img data-src=\"6.png\" alt=\"\" /></li>\n</ol>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 找到 dependencies 下面增加</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"echarts\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.7.0\"</span></pre></td></tr></table></figure><h1 id=\"后端开发\"><a class=\"anchor\" href=\"#后端开发\">#</a> 后端开发</h1>\n<ol>\n<li>修改 superset/viz.py，修改 METRIC_KEYS，添加 echarts_pie_metrics</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">//</span>找到METRIC_KEYS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>METRIC_KEYS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"metric\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"metrics\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"percent_metrics\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">\"metric_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"secondary_metric\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"echarts_pie_metrics\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>修改 superset/viz.py，在 viz_types 前添加下面代码</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">EchartsPieViz</span><span class=\"token punctuation\">(</span>NVD3Viz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\" echarts pie  \"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    viz_type <span class=\"token operator\">=</span> <span class=\"token string\">\"echarts_pie\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    verbose_name <span class=\"token operator\">=</span> _<span class=\"token punctuation\">(</span><span class=\"token string\">\"Echarts Pie\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 是否排序</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    sort_series <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 是否对 time 做处理 _timestamp</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    is_timeseries <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">query_obj</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># check bar column, line column 是否重复</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        bar_metrics <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>form_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'echarts_pie_metrics'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> bar_metrics <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please choose metrics on line or bar type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        bar_metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> bar_metrics <span class=\"token keyword\">else</span> bar_metrics</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        d <span class=\"token operator\">=</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>query_obj<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span><span class=\"token string\">\"groupby\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">(</span><span class=\"token string\">\"groupby has to be one\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> d</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">to_series</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">,</span> classed<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         拼接 前端渲染需要的数据</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        :param df:</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        :param classed:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        :return: &#123;'legend':[], 'bar':[], 'line':[]&#125;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">if</span> col <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                cols<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"N/A\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">elif</span> col <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                cols<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"NULL\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                cols<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        df<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> cols</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        metrics <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>all_metrics</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        legend<span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        series <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span><span class=\"token string\">\"series\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">for</span> mt <span class=\"token keyword\">in</span> metrics<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            m_label <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span>get_metric_name<span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            ys <span class=\"token operator\">=</span>  <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>series<span class=\"token punctuation\">[</span>m_label<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> ys<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                info <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> y<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> y<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                legend<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        chart_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token string\">'legend'</span><span class=\"token punctuation\">:</span> legend<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">return</span> chart_data</pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">:</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\"># 后端返回的数据</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>pivot_table<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">,</span> values<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>metric_labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        chart_data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>to_series<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">return</span> chart_data</pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token operator\">//</span>在这之前添加代码</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>viz_types <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    o<span class=\"token punctuation\">.</span>viz_type<span class=\"token punctuation\">:</span> o</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">for</span> o <span class=\"token keyword\">in</span> <span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        inspect<span class=\"token punctuation\">.</span>isclass<span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">and</span> <span class=\"token builtin\">issubclass</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> BaseViz<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">and</span> o<span class=\"token punctuation\">.</span>viz_type <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">\"VIZ_TYPE_BLACKLIST\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"运行\"><a class=\"anchor\" href=\"#运行\">#</a> 运行</h1>\n<ol>\n<li>如果没有安装 echarts，先安装 echarts</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> superset/assets</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> echarts --save</pre></td></tr></table></figure><ol start=\"2\">\n<li>重新编译前端</li>\n</ol>\n<pre><code>// 或者npm run dev\nnpm run build\n</code></pre>\n<ol start=\"3\">\n<li>运行后台 superset，访问 superset，创建一个图表<br />\n<img data-src=\"7.png\" alt=\"\" /></li>\n<li>镂空形状<br />\n<img data-src=\"8.png\" alt=\"\" /></li>\n<li>非镂空形状<br />\n<img data-src=\"9.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"相关\"><a class=\"anchor\" href=\"#相关\">#</a> 相关</h1>\n<p><a href=\"/Superset-%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93%E6%B5%81%E7%A8%8B/\">Superset - 图表渲染流程</a><br />\n<a href=\"/Superset-%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/\"> Superset - 二次开发指南</a></p>\n",
            "tags": [
                "计算机科学",
                "大数据",
                "数据可视化",
                "python",
                "echarts",
                "superset",
                "react"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Superset-%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93%E6%B5%81%E7%A8%8B/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Superset-%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93%E6%B5%81%E7%A8%8B/",
            "title": "Superset-图表渲染流程",
            "date_published": "2020-04-26T01:31:37.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h1>\n<p>supsert 是一个轻量的 BI 平台，是一个后端使用 flask，前端使用 react 的前后端分离项目，它内置的数种常用的图表。至 0.33 版本后，superset 团队把图表改成了组件 - 注册的的开发方式，并把原来所集成的图表都改成一个个组件，这些图表组件组成了一个包：@superset-ui。如果我们<br />\n想自定义一个图表，基本思路也是把图表封装成组件，注册到 superset 配置文件上，后台增加相应处理类。本文基于 superset0.35 版本，0.36 的版本除了文件位置改变了，其他是一样的。本文只介绍应用层面上的图表呈现逻辑，不解析核心的渲染逻辑，看完本文你会知道定义一个图表类型的流程</p>\n<h1 id=\"superset图表组成\"><a class=\"anchor\" href=\"#superset图表组成\">#</a> Superset 图表组成</h1>\n<p>Supsert 图表一共由三个部分组成：控制面板和图表还有后台处理类<br />\n<img data-src=\"1.png\" alt=\"\" /></p>\n<ul>\n<li>控制面板：控制面板固定的有数据源 &amp; 图表类型和时间这两个属性，其他的都是可以自定义的</li>\n<li>图表：图表完全就是自定义的</li>\n<li>后台处理类：图表的处理类都写在了 /superset/viz.py 里，下文介绍该类</li>\n</ul>\n<p>无论图表还是控制面板，都是必须注册到 superset 注册文件才能使用</p>\n<h1 id=\"图表\"><a class=\"anchor\" href=\"#图表\">#</a> 图表</h1>\n<p>首先了解一下图表的结构，打开 @superset-ui 这包下的一个图表文件夹，如 supsert/assets/node_modules/@superset-ui/legacy-plugin-chart-chord<br />\n<img data-src=\"2.png\" alt=\"\" /><br />\n 这是个典型的 superset 图表包，一般由这几个文件组成，下面逐一介绍</p>\n<h2 id=\"images文件夹\"><a class=\"anchor\" href=\"#images文件夹\">#</a> images 文件夹</h2>\n<p>images 是存放图表缩略图的地方，由 thumbnail.png 和 thumbnailLarge.png 文件组成，注意文件名不可改。thumbnail.png 为普通分辨率的图片，thumbnailLarge.png 为大分辨率的图片<br />\n下图为图表的缩略图<br />\n<img data-src=\"3.png\" alt=\"\" /></p>\n<h2 id=\"indexjs\"><a class=\"anchor\" href=\"#indexjs\">#</a> index.js</h2>\n<p>index 为整个图表的入口文件，主要作用是返回一个图表类，这个类后面会被注册到 Superset 的注册文件中<br />\n index 示例代码</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> t <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/translation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ChartMetadata<span class=\"token punctuation\">,</span> ChartPlugin <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/chart'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> transformProps <span class=\"token keyword\">from</span> <span class=\"token string\">'./transformProps'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> thumbnail <span class=\"token keyword\">from</span> <span class=\"token string\">'./images/thumbnail.png'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChartMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  name<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Echart Pie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  description<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  credits<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'http://echarts.baidu.com/examples/editor.html?c=scatter-effect'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  thumbnail<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeSeriesScatterChartPlugin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChartPlugin</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      metadata<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      transformProps<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token function-variable function\">loadChart</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./ReactEchartsPie.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>ChartPlugin 是 superset 定义好的图表基类，他只拥有控制面板，并且有两个属性数据源 &amp; 图表类型和时间。<br />\nChartPlugin 的构造函数有三个：</p>\n<ul>\n<li>metadata：图表元数据，定义的图表名，描述等元信息</li>\n<li>transformProps：数据装载器</li>\n<li>loadChart：一个渲染图的函数</li>\n</ul>\n<h2 id=\"transformpropsjs\"><a class=\"anchor\" href=\"#transformpropsjs\">#</a> transformProps.js</h2>\n<p>transformProps 作为前后端的接受转换器，将后端传来的数据转换为 react 的数据<br />\n transformProps 示例代码</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">transformProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chartProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> queryData<span class=\"token punctuation\">,</span> formData<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> chartProps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token comment\">//formData 前端页面的数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">//queryData  后端返回的数据</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          data<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          width<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          height<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          formData<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          legend<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          series<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>transformProps 主要接受这四个参数</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> queryData<span class=\"token punctuation\">,</span> formData<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> chartProps<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>width：这个是前端的参数不需要处理</li>\n<li>height：这个是前端的参数不需要处理</li>\n<li>formData：formData 为控制面板传过来的数据</li>\n<li>queryData：是 superset 后台传过来的数据</li>\n</ul>\n<p>我们处理一下返回组装好的数据，方便后面调用</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>          data<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          width<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          height<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          formData<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          legend<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          series<span class=\"token operator\">:</span> queryData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"reactchordjs\"><a class=\"anchor\" href=\"#reactchordjs\">#</a> ReactChord.js</h2>\n<p>这个文件主要是讲我们写的渲染方法转换为 Raect 组件<br />\n transformProps 示例代码</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> reactify <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/chart'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">'./Chord'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">reactify</span><span class=\"token punctuation\">(</span>Component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>只要把 Component 换成我们自定义渲染的函数就可以了，改动最少</p>\n<h2 id=\"chordjs\"><a class=\"anchor\" href=\"#chordjs\">#</a> Chord.js</h2>\n<p>这个文件只要返回一个渲染方法的函数就可以了<br />\n比如</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> d3 <span class=\"token keyword\">from</span> <span class=\"token string\">'d3'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CategoricalColorNamespace <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/color'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getNumberFormatter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/number-format'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">'./EchartsBar.css'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> echarts <span class=\"token keyword\">from</span> <span class=\"token string\">'echarts'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  data<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  width<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  height<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">EchartsBar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">var</span> echars_xAxis <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">var</span> echars_series <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> echars_xAxis<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t echars_xAxis<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t echars_series<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t echars_series<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">const</span> div <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div id=\"myChart\" style=\"height:'</span> <span class=\"token operator\">+</span> height <span class=\"token operator\">+</span> <span class=\"token string\">'px; width:'</span> <span class=\"token operator\">+</span> width <span class=\"token operator\">+</span> <span class=\"token string\">'px;\">&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  div<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 给 echarts 添加 div</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">var</span> myChart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myChart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始化 echarts</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          trigger<span class=\"token operator\">:</span> <span class=\"token string\">'axis'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          axisPointer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'cross'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>              crossStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                  color<span class=\"token operator\">:</span> <span class=\"token string\">'#999'</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      toolbox<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>          feature<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>              dataView<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>show<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> readOnly<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>              magicType<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>show<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>              restore<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>show<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>              saveAsImage<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>show<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>          data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'蒸发量'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'降水量'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'平均温度'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>              data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'1月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'8月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'9月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'10月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'11月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'12月'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>              axisPointer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                  type<span class=\"token operator\">:</span> <span class=\"token string\">'shadow'</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>              name<span class=\"token operator\">:</span> <span class=\"token string\">'水量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>              min<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>              max<span class=\"token operator\">:</span> <span class=\"token number\">250</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>              interval<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>              axisLabel<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                  formatter<span class=\"token operator\">:</span> <span class=\"token string\">'&#123;value&#125; ml'</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>              name<span class=\"token operator\">:</span> <span class=\"token string\">'温度'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>              min<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>              max<span class=\"token operator\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>              interval<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>              axisLabel<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                  formatter<span class=\"token operator\">:</span> <span class=\"token string\">'&#123;value&#125; °C'</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>      series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>              name<span class=\"token operator\">:</span> <span class=\"token string\">'蒸发量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>              data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">135.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>              name<span class=\"token operator\">:</span> <span class=\"token string\">'降水量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>              data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>              name<span class=\"token operator\">:</span> <span class=\"token string\">'平均温度'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>              type<span class=\"token operator\">:</span> <span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>              yAxisIndex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>              data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>      <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>EchartsBar<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token string\">'Echarts Bar'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>EchartsBar<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> propTypes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> EchartsBar<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这是一段渲染 echarts 的代码，propTypes 为检查后端传过来的数据类型，EchartsBar 函数为渲染图的函数，只要修改这个函数就可以了</p>\n<h2 id=\"图表注册\"><a class=\"anchor\" href=\"#图表注册\">#</a> 图表注册</h2>\n<p>上面已经完成了图的开发了，我们必须注册到 superset 才能使用。<br />\n1. 修改 /visualizations/presets/MainPreset.js</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 开头导入</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> ChordChartPlugin <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/legacy-plugin-chart-chord'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 注册</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">ChordChartPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token operator\">:</span> <span class=\"token string\">'chord'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>2. 修改 /explore/components/controls/VizTypeControl.jsx<br />\n 这个文件是渲染选择图表的文件，加上图表后才能在选择图表里看见，这里的字符串对应注册时候的 key</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 找到 DEFAULT_ORDER 这个变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_ORDER</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'big_number'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'filter_box'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dist_bar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'area'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">'deck_polygon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'time_table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pivot_table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'histogram'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">'big_number_total'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_scatter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_hex'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'time_pivot'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_arc'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token string\">'heatmap'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_grid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dual_line'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_screengrid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'line_multi'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token string\">'treemap'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'box_plot'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'separator'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sunburst'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sankey'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'word_cloud'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token string\">'mapbox'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'kepler'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cal_heatmap'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rose'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bubble'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_geojson'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token string\">'horizon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deck_multi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'compare'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'partition'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'event_flow'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token string\">'deck_path'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'directed_force'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'world_map'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'paired_ttest'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'para'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token string\">'iframe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'country_map'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'echarts_pie'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"控制面板\"><a class=\"anchor\" href=\"#控制面板\">#</a> 控制面板</h1>\n<h2 id=\"主文件\"><a class=\"anchor\" href=\"#主文件\">#</a> 主文件</h2>\n<p>控制的类全放在了 /explore/controlPanels/ 里<br />\n<img data-src=\"4.png\" alt=\"\" /><br />\n chord 图表控制面板示例</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> t <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@superset-ui/translation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> nonEmpty <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../validators'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  controlPanelSections<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Query'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token string\">'groupby'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token string\">'columns'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token string\">'metric'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token string\">'adhoc_filters'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token string\">'row_limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Chart Options'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      expanded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      controlSetRows<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token string\">'y_axis_format'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token string\">'color_scheme'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'label_colors'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  controlOverrides<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    y_axis_format<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Number format'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Choose a number format'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    groupby<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Source'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      multi<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      validators<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>nonEmpty<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Choose a source'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    columns<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      multi<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      validators<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>nonEmpty<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Choose a target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>控制面板的 js 文件主要是要返回一个 json， controlPanelSections 定义定义了控制面板的选项， controlOverrides 为重写控制面板的属性<br />\n controlSetRows 下是多个列表，每个列表为一行，里面的字符串定义在 /explore/controls.jsx。渲染的时候会从 controlSetRows 取列表，然后从 /explore/controls.jsx 寻找配置，再渲染到面板</p>\n<h2 id=\"controlsjsx\"><a class=\"anchor\" href=\"#controlsjsx\">#</a> controls.jsx</h2>\n<p>controls.jsx 写的面板控制的配置项，有按钮，文本输入框，单选多选等等<br />\n某个配置项示例：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>test<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">...</span>metrics<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 继承</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      multi<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 多选</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      clearable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否可调用， true 当作 sql</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      validators<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否可以为空</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      label<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Line Type Metrics'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      description<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Metrics for which line type are to be displayed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    test1<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ttype<span class=\"token operator\">:</span> <span class=\"token string\">'TextControl'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 文本输入</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tlabel<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Left Y Min'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\trenderTrigger<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tisInt<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tdescription<span class=\"token operator\">:</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Left Y Min'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>这是个指标配置项：<br />\n...metrics 表示继承 metrics，multi 为是否可以多选， validators 是否可以为空，default 默认值，label 选项标题，description 选项描述，renderTrigger 是否显示在 Customize 标签页</p>\n<p>test 的效果：<br />\n<img data-src=\"5.png\" alt=\"\" /><br />\ntest1 的效果：<br />\n<img data-src=\"6.png\" alt=\"\" /></p>\n<h2 id=\"注册面板\"><a class=\"anchor\" href=\"#注册面板\">#</a> 注册面板</h2>\n<p>开发完的面板如果不注册到 Supserset，一样不会被使用<br />\n修改 /setup/setupPlugins.ts</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 导入</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Chord <span class=\"token keyword\">from</span> <span class=\"token string\">'../explore/controlPanels/Chord'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 注册</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token function\">registerValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chord'</span><span class=\"token punctuation\">,</span> Chord<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"后台\"><a class=\"anchor\" href=\"#后台\">#</a> 后台</h1>\n<p>图表处理的函数全部写在了 /superset/viz.py 里面<br />\n 1. 如果你使用了自定义面板选项，而且这个选项是 SQL 语句的一部分，你必须在下面变量上加上自定义的选项名，否则 self.form_data.get ('echarts_pie_metrics') 将获取不到数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># METRIC_KEYS </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>METRIC_KEYS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"metric\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"metrics\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"percent_metrics\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">\"metric_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"secondary_metric\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"echarts_pie_metrics\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>2. 新增图表处理类<br />\n示例：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">EchartsPieViz</span><span class=\"token punctuation\">(</span>NVD3Viz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\" echarts pie  \"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    viz_type <span class=\"token operator\">=</span> <span class=\"token string\">\"echarts_pie\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    verbose_name <span class=\"token operator\">=</span> _<span class=\"token punctuation\">(</span><span class=\"token string\">\"Echarts Pie\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 是否排序</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    sort_series <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 是否对 time 做处理 _timestamp</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    is_timeseries <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">query_obj</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># check bar column, line column 是否重复</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        bar_metrics <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>form_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'echarts_pie_metrics'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> bar_metrics <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please choose metrics on line or bar type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        bar_metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> bar_metrics <span class=\"token keyword\">else</span> bar_metrics</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        d <span class=\"token operator\">=</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>query_obj<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span><span class=\"token string\">\"groupby\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">(</span><span class=\"token string\">\"groupby has to be one\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> d</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">to_series</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">,</span> classed<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         拼接 前端渲染需要的数据</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        :param df:</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        :param classed:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        :return: &#123;'legend':[], 'bar':[], 'line':[]&#125;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">if</span> col <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                cols<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"N/A\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">elif</span> col <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                cols<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"NULL\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                cols<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        df<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> cols</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        metrics <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>all_metrics</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        legend<span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        series <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span><span class=\"token string\">\"series\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">for</span> mt <span class=\"token keyword\">in</span> metrics<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            m_label <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span>get_metric_name<span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            ys <span class=\"token operator\">=</span>  <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>series<span class=\"token punctuation\">[</span>m_label<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> ys<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                info <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> y<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> y<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                legend<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        chart_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token string\">'legend'</span><span class=\"token punctuation\">:</span> legend<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">return</span> chart_data</pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">:</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\"># 后端返回的数据</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>pivot_table<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">,</span> values<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>metric_labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        chart_data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>to_series<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">return</span> chart_data</pre></td></tr></table></figure><p>我们的图表必须继承 superset 提供的图表抽象类，superset 提供了几个图表的抽象类，示例里使用的是 NVD3Viz，下面介绍下属性和方法<br />\n属性：</p>\n<ul>\n<li>viz_type：图表类型，对应前端注册是 Key 值，必填</li>\n<li>verbose_name：暂不知道，选填</li>\n<li>sort_series：是否排序，选填</li>\n<li>is_timeseries：是否对 time 做处理 _timestamp，选填<br />\n方法：</li>\n<li>query_obj：首先执行的这个方法，当我们刚进入图表或者点击查询的时候会执行这个方法，这个方法主要是对查询语句进行一些判断</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>self<span class=\"token punctuation\">.</span>form_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'echarts_pie_metrics'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这个方法是获取自定义的控制面板选项的值</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>query_obj<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">return</span> d</pre></td></tr></table></figure><p>返回 d 后 superset 便开始执行查询了</p>\n<ul>\n<li>get_data：当查询完后，便会进入到这个函数，这个函数获取 superset 查询后返回来的数据然后进行处理，然后把数据传给前端的 transformProps，然后前端执行渲染，图表就渲染出来了</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "大数据",
                "数据可视化",
                "python",
                "superset",
                "react"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/SpringBoot-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91API%E5%90%8E%E5%8F%B0/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/SpringBoot-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91API%E5%90%8E%E5%8F%B0/",
            "title": "SpringBoot-快速开发API后台",
            "date_published": "2020-04-20T13:28:48.000Z",
            "content_html": "<h1 id=\"操作系统\"><a class=\"anchor\" href=\"#操作系统\">#</a> 操作系统</h1>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> Linux</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> Mac OS</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\"> Windows</label></li>\n</ul>\n<h1 id=\"软件依赖\"><a class=\"anchor\" href=\"#软件依赖\">#</a> 软件依赖</h1>\n<p><span class=\"label info\">^ Lastest</span> <span class=\"label info\">~ minimum</span></p>\n<ul>\n<li>Jdk1.8~</li>\n<li>MySQL</li>\n</ul>\n<h1 id=\"实验环境\"><a class=\"anchor\" href=\"#实验环境\">#</a> 实验环境</h1>\n<ul>\n<li>Windows10</li>\n<li>Jdk-1.8</li>\n<li>MySQL 7</li>\n</ul>\n<h1 id=\"实验目标\"><a class=\"anchor\" href=\"#实验目标\">#</a> 实验目标</h1>\n<p>最近在写自己的小程序，小程序的后台必不可少，如何又好又快的开发一个中小型项目的后台，笔者做了一些研究。围绕着敏捷开发的思想，尽可能的少写 CURD，把时间放在核心业务上。<br />\n最终选取了 SpringBoot 作为整个后台的核心，集成其他框架快速开发，下面是使用到的框架</p>\n<ul>\n<li>核心框架：Springboot</li>\n<li>数据连接池：Druid</li>\n<li>持久层：Mybatis-Plus</li>\n<li>权限控制：Shiro+JWT</li>\n<li>文档：Swagger</li>\n</ul>\n<p>上列框架组成了后台的核心功能，再辅以统一 API 结果，统一异常处理，代码生成器，开发起来就会很快速，安全。</p>\n<h1 id=\"环境准备\"><a class=\"anchor\" href=\"#环境准备\">#</a> 环境准备</h1>\n<ul>\n<li>安装 Jdk1.8</li>\n<li><a href=\"/2020/04/13/2020/MySQL-%E5%9C%A8%E5%90%84%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85/\">安装 MySQL</a></li>\n<li>Maven</li>\n</ul>\n<h1 id=\"创建项目\"><a class=\"anchor\" href=\"#创建项目\">#</a> 创建项目</h1>\n<p>这里仅演示用 idea 创建项目</p>\n<ol>\n<li>打开 idea，创建项目<br />\n<img data-src=\"1.png\" alt=\"\" /></li>\n<li>选择 springboot，选择 jdk1.8<br />\n<img data-src=\"2.png\" alt=\"\" /></li>\n<li>输入项目名，点击下一步<br />\n<img data-src=\"3.png\" alt=\"\" /></li>\n<li>选择 spring boot web 插件<br />\n<img data-src=\"4.png\" alt=\"\" /></li>\n<li>选择 mysql 数据驱动<br />\n<img data-src=\"5.png\" alt=\"\" /></li>\n<li>完成<br />\n<img data-src=\"6.png\" alt=\"\" /></li>\n<li>进入 idea 后，maven 会自动下载包，点击右下角的导入包，等 maven 下载好后就能开始开发了<br />\n<img data-src=\"7.png\" alt=\"\" /></li>\n<li>尝试运行<br />\n<img data-src=\"8.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"数据连接池\"><a class=\"anchor\" href=\"#数据连接池\">#</a> 数据连接池</h1>\n<div class=\"note info\">\n<p>Druid 为监控而生的数据库连接池，它是阿里巴巴开源平台上的一个项目。Druid 是 Java 语言中最好的数据库连接池，Druid 能够提供强大的监控和扩展功能。它可以替换 DBCP 和 C3P0 连接池。Druid 提供了一个高效、功能强大、可扩展性好的数据库连接池。</p>\n</div>\n<ol>\n<li>创建 mysql 数据库 test,</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> test<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>创建测试表 test</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> test<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'主键id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>username <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'姓名'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>password <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'密码'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sex <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'女'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'性别'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span>MyISAM <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>在根目录下的 pom.xml 下的 dependencies 节点下加入下面依赖，并导入包</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>druid<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.0.25<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><pre><code>后面导入包也类似\n![](9.png)\n</code></pre>\n<ol start=\"4\">\n<li>修改 src/main/resources/application.properties 改名为 application.yml</li>\n<li>在 application.yml 下添加 druid 配置代码</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>spring:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    datasource:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      type: com.alibaba.druid.pool.DruidDataSource</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      druid:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        driver-class-name: com.mysql.jdbc.Driver</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        url: jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=UTC</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        username: root</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        password: 6113535</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        initial-size: 5</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        min-idle: 5</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        max-active: 20</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        max-wait: 60000</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        time-between-eviction-runs-millis: 60000</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        min-evictable-idle-time-millis: 300000</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        validation-query: SELECT 1 FROM DUAL</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        test-while-idle: true</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        test-on-borrow: false</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        test-on-return: false</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pool-prepared-statements: true</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        max-open-prepared-statements: 50</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        max-pool-prepared-statement-per-connection-size: 20</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        filters: stat,wall</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        use-global-data-source-stat: true</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000</pre></td></tr></table></figure><ul>\n<li>url：数据库 jdbc 连接<br />\n必须加入 serverTimezone=UTC 的参数，否则会报错</li>\n</ul>\n<pre><code>The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.\n</code></pre>\n<ul>\n<li>username：数据库用户名</li>\n<li>password：数据库密码</li>\n</ul>\n<ol start=\"6\">\n<li>创建 config 文件夹，创建 DruidConfiguration.java 文件<br />\n<img data-src=\"10.png\" alt=\"\" /><br />\n写入下面代码</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StatViewServlet</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebStatFilter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurationProperties</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FilterRegistrationBean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletRegistrationBean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DruidConfiguration</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.datasource.druid\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>destroyMethod <span class=\"token operator\">=</span> <span class=\"token string\">\"close\"</span><span class=\"token punctuation\">,</span> initMethod <span class=\"token operator\">=</span> <span class=\"token string\">\"init\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">druid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 配置 Druid 的监控后台</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">//1. 配置一个管理后台的 servlet</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ServletRegistrationBean</span> <span class=\"token function\">statViewServlet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">ServletRegistrationBean</span> bean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServletRegistrationBean</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StatViewServlet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/druid/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> initParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        initParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginUsername\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        initParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginPassword\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        initParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"allow\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        initParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deny\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"192.168.23.243\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        bean<span class=\"token punctuation\">.</span><span class=\"token function\">setInitParameters</span><span class=\"token punctuation\">(</span>initParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">return</span> bean<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">//2. 配置一个监控的 filter</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FilterRegistrationBean</span> <span class=\"token function\">druidFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token class-name\">FilterRegistrationBean</span> filterRegistrationBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FilterRegistrationBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        filterRegistrationBean<span class=\"token punctuation\">.</span><span class=\"token function\">setFilter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WebStatFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> initParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        initParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exclusion\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"*.js,*.css,/druid/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        filterRegistrationBean<span class=\"token punctuation\">.</span><span class=\"token function\">setInitParameters</span><span class=\"token punctuation\">(</span>initParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        filterRegistrationBean<span class=\"token punctuation\">.</span><span class=\"token function\">setUrlPatterns</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">return</span> filterRegistrationBean<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"7\">\n<li>重启 web 应用<br />\n<img data-src=\"11.png\" alt=\"\" /></li>\n<li>打开 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgwL2RydWlkLw==\">http://localhost:8080/druid/</span><br />\n<img data-src=\"12.png\" alt=\"\" /></li>\n<li>点击数据源，如相关信息则集成成功<br />\n<img data-src=\"13.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"数据持久化\"><a class=\"anchor\" href=\"#数据持久化\">#</a> 数据持久化</h1>\n<div class=\"note info\">\n<p>MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p>\n</div>\n<ol>\n<li>安装依赖，pom.xml 加入下面依赖，并且导入依赖</li>\n</ol>\n<ul>\n<li>lombok：快速开发插件，能自动生成 get 和 set 方法</li>\n<li>mybatis-plus-boot-starter：mp</li>\n</ul>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.projectlombok<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>lombok<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>optional</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>optional</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.baomidou<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-plus-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.3.1.tmp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>config 文件夹下创建 MyBatisConfig 文件，写入下面代码</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PaginationInterceptor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MybatisSqlSessionFactoryBean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>plugin<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Interceptor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactory</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionTemplate</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Qualifier</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Primary</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PathMatchingResourcePatternResolver</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataSourceTransactionManager</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyBatisConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;spring.datasource.druid.driver-class-name&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> driverClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;spring.datasource.druid.url&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;spring.datasource.druid.username&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;spring.datasource.druid.password&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"masterDataSource\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token annotation punctuation\">@Primary</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>driverClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> dataSource<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"masterSqlSessionFactory\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token annotation punctuation\">@Primary</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SqlSessionFactory</span> <span class=\"token function\">sqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"masterDataSource\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token class-name\">MybatisSqlSessionFactoryBean</span> bean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MybatisSqlSessionFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            bean<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            bean<span class=\"token punctuation\">.</span><span class=\"token function\">setPlugins</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Interceptor</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PaginationInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            bean<span class=\"token punctuation\">.</span><span class=\"token function\">setMapperLocations</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PathMatchingResourcePatternResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath*:mapper/*/*.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token keyword\">return</span> bean<span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"masterTransactionManager\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token annotation punctuation\">@Primary</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSourceTransactionManager</span> <span class=\"token function\">transactionManager</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"masterDataSource\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSourceTransactionManager</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"masterSqlSessionTemplate\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token annotation punctuation\">@Primary</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SqlSessionTemplate</span> <span class=\"token function\">sqlSessionTemplate</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"masterSqlSessionFactory\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">SqlSessionFactory</span> sqlSessionFactory<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionTemplate</span><span class=\"token punctuation\">(</span>sqlSessionFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"14.png\" alt=\"\" /><br />\n3. 重启 springboot，如无报错则进行下一步<br />\n 4. 编写测试类</p>\n<ul>\n<li>新建 test 实体类：test.java</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>新建 Mapper 类：TestMapper.java</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseMapper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Mapper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Mapper</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span>  <span class=\"token class-name\">TestMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>test<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>新建测试类：SampleTest.java<br />\n 如果复制后显示红色，按 alt + 回车，选择第一项导入包就可以了</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>junit4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootTest</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SampleTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TestMapper</span> testMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----- selectAll method test ------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>test<span class=\"token punctuation\">></span></span> tests <span class=\"token operator\">=</span> testMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>tests<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>运行测试类，如控制台输出相应结果则集成成功，本例数据库里没数据所以输出 0<br />\n<img data-src=\"15.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"代码生成器\"><a class=\"anchor\" href=\"#代码生成器\">#</a> 代码生成器</h1>\n<div class=\"note info\">\n<p>使用模板引擎一键生成 entity，dao，service，control 代码，并且自动实现了 CURD 的功能，以实现敏捷开放的目的</p>\n</div>\n<ol>\n<li>引入依赖<br />\n pom.xml 文件下添加下列依赖</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.baomidou<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-plus-generator<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.3.1.tmp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.freemarker<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>freemarker<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.3.30<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>创建 CodeGenerator.java<br />\n<img data-src=\"16.png\" alt=\"\" /></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MybatisPlusException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>toolkit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringPool</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>toolkit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AutoGenerator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InjectionConfig</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>po<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableInfo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NamingStrategy</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FreemarkerTemplateEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CodeGenerator</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 作者</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> AUTHOR <span class=\"token operator\">=</span> <span class=\"token string\">\"Lucas\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">//Url</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> URL <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=UTC\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// 数据库用户名</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> USERNAME <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 数据库密码</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> PASSWORD <span class=\"token operator\">=</span> <span class=\"token string\">\"6113535\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 驱动</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> DRIVER_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// 代码根目录</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> PARENT_PACKAGE <span class=\"token operator\">=</span> <span class=\"token string\">\"com.npc.app\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>     * &lt;p></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     * 读取控制台内容</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     * &lt;/p></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> tip<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token class-name\">StringBuilder</span> help <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        help<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入\"</span> <span class=\"token operator\">+</span> tip <span class=\"token operator\">+</span> <span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>help<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token class-name\">String</span> ipt <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>ipt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token keyword\">return</span> ipt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MybatisPlusException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入正确的\"</span> <span class=\"token operator\">+</span> tip <span class=\"token operator\">+</span> <span class=\"token string\">\"！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\">// 代码生成器</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token class-name\">AutoGenerator</span> mpg <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AutoGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\">// 全局配置</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token class-name\">GlobalConfig</span> gc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GlobalConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token class-name\">String</span> projectPath <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user.dir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        gc<span class=\"token punctuation\">.</span><span class=\"token function\">setOutputDir</span><span class=\"token punctuation\">(</span>projectPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/src/main/java\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        gc<span class=\"token punctuation\">.</span><span class=\"token function\">setAuthor</span><span class=\"token punctuation\">(</span>AUTHOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        gc<span class=\"token punctuation\">.</span><span class=\"token function\">setOpen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\">//gc.setSwagger2 (true); 实体属性 Swagger2 注解</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        mpg<span class=\"token punctuation\">.</span><span class=\"token function\">setGlobalConfig</span><span class=\"token punctuation\">(</span>gc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token comment\">// 数据源配置</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token class-name\">DataSourceConfig</span> dsc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSourceConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        dsc<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>URL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token comment\">// dsc.setSchemaName(\"public\");</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        dsc<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverName</span><span class=\"token punctuation\">(</span>DRIVER_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        dsc<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>USERNAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        dsc<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>PASSWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        mpg<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dsc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token comment\">// 包配置</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token class-name\">PackageConfig</span> pc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PackageConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        pc<span class=\"token punctuation\">.</span><span class=\"token function\">setModuleName</span><span class=\"token punctuation\">(</span><span class=\"token function\">scanner</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"模块名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        pc<span class=\"token punctuation\">.</span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>PARENT_PACKAGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        mpg<span class=\"token punctuation\">.</span><span class=\"token function\">setPackageInfo</span><span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\">// 自定义配置</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token class-name\">InjectionConfig</span> cfg <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InjectionConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                <span class=\"token comment\">// to do nothing</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token comment\">// 如果模板引擎是 freemarker</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token class-name\">String</span> templatePath <span class=\"token operator\">=</span> <span class=\"token string\">\"/templates/mapper.xml.ftl\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token comment\">// 如果模板引擎是 velocity</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token comment\">//String templatePath = \"/templates/mapper.xml.vm\";</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token comment\">// 自定义输出配置</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FileOutConfig</span><span class=\"token punctuation\">></span></span> focList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token comment\">// 自定义配置会被优先输出</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        focList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutConfig</span><span class=\"token punctuation\">(</span>templatePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">outputFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TableInfo</span> tableInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                <span class=\"token comment\">// 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                <span class=\"token keyword\">return</span> projectPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/src/main/resources/mapper/\"</span> <span class=\"token operator\">+</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">getModuleName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                        <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getEntityName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"Mapper\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">StringPool</span><span class=\"token punctuation\">.</span>DOT_XML<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        cfg.setFileCreate (new IFileCreate () &#123;</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            @Override</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            public boolean isCreate (ConfigBuilder configBuilder, FileType fileType, String filePath) &#123;</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                // 判断自定义文件夹是否需要创建</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                checkDir (\"调用默认方法创建的目录\");</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                return false;</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        &#125;);</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        */</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        cfg<span class=\"token punctuation\">.</span><span class=\"token function\">setFileOutConfigList</span><span class=\"token punctuation\">(</span>focList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        mpg<span class=\"token punctuation\">.</span><span class=\"token function\">setCfg</span><span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token comment\">// 配置模板</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token class-name\">TemplateConfig</span> templateConfig <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TemplateConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token comment\">// 配置自定义输出模板</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token comment\">// 指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token comment\">// templateConfig.setEntity(\"templates/entity2.java\");</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token comment\">// templateConfig.setService();</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token comment\">// templateConfig.setController();</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        templateConfig<span class=\"token punctuation\">.</span><span class=\"token function\">setXml</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        mpg<span class=\"token punctuation\">.</span><span class=\"token function\">setTemplate</span><span class=\"token punctuation\">(</span>templateConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token comment\">// 策略配置</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token class-name\">StrategyConfig</span> strategy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StrategyConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        strategy<span class=\"token punctuation\">.</span><span class=\"token function\">setNaming</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NamingStrategy</span><span class=\"token punctuation\">.</span>underline_to_camel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        strategy<span class=\"token punctuation\">.</span><span class=\"token function\">setColumnNaming</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NamingStrategy</span><span class=\"token punctuation\">.</span>underline_to_camel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token comment\">//strategy.setSuperEntityClass (\"你自己的父类实体，没有就不用设置！\");</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        strategy<span class=\"token punctuation\">.</span><span class=\"token function\">setEntityLombokModel</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        strategy<span class=\"token punctuation\">.</span><span class=\"token function\">setRestControllerStyle</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token comment\">// 公共父类</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token comment\">//strategy.setSuperControllerClass (\"你自己的父类控制器，没有就不用设置！\");</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        <span class=\"token comment\">// 写于父类中的公共字段</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token comment\">//strategy.setSuperEntityColumns(\"id\");</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token comment\">//strategy.setInclude (scanner (\"表名，多个英文逗号分割\").split (\",\"));</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        strategy<span class=\"token punctuation\">.</span><span class=\"token function\">setControllerMappingHyphenStyle</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        strategy<span class=\"token punctuation\">.</span><span class=\"token function\">setTablePrefix</span><span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">.</span><span class=\"token function\">getModuleName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        mpg<span class=\"token punctuation\">.</span><span class=\"token function\">setStrategy</span><span class=\"token punctuation\">(</span>strategy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        <span class=\"token comment\">// 选择 Freemarker 模板，如不配置默认是 Velocity</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        mpg<span class=\"token punctuation\">.</span><span class=\"token function\">setTemplateEngine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FreemarkerTemplateEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        mpg<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>配置好数据库信息后进行下一步<br />\n 3. 运行代码生成器<br />\n输入需要生成的表名，多个表用逗号分隔，这里使用前面的 test 表作为例子<br />\n<img data-src=\"17.png\" alt=\"\" /><br />\n运行完毕后，将生成 entity,dao,service,control 的接口与实现类<br />\n<img data-src=\"18.png\" alt=\"\" /><br />\n 4. 修改生成后的文件<br />\n给 dao 类加上 @mapper 注解，否则 mybatis 将找不到这个类，无法进行注入，加上 @Repository 注解解决 idea 错误提示<br />\n修改 TestMapper，在类名上添加 @Mapper</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * &lt;p></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> *  Mapper 接口</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * &lt;/p></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @author Lucas</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @since 2020-04-21</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token annotation punctuation\">@Mapper</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TestMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>测试<br />\n修改 control 类代码，来测试接口是否可用<br />\n修改 TestController：添加一个 test 函数</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GetMapping</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * &lt;p></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> *  前端控制器</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * &lt;/p></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @author Lucas</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @since 2020-04-21</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/test/test\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre><code>重启服务，浏览器上访问 http://localhost:8080/test/test/index\n正确返回\n![](19.png)\n</code></pre>\n<h1 id=\"动态api文档\"><a class=\"anchor\" href=\"#动态api文档\">#</a> 动态 API 文档</h1>\n<div class=\"note info\">\n<p>Swagger2 能动态的生成 API 接口文档，能做到对所有 API 接口一目了然，还能自定义界面</p>\n</div>\n<ol>\n<li>引入依赖<br />\n pom.xml 下添加以下依赖</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- druid 必须引入 log4j --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>log4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>log4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.2.17<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">&lt;!-- swagger2 --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.springfox<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>springfox-swagger2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.9.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.swagger<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>swagger-models<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.swagger<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>swagger-models<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.5.21<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 引入 ui 包 --></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.github.xiaoymin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>swagger-bootstrap-ui<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.9.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>添加 swagger2 配置<br />\n修改 application.yml，添加下面配置信息</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">swagger2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">base-package</span><span class=\"token punctuation\">:</span> com.npc.app</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>say<span class=\"token punctuation\">-</span>mall RESTful APIs</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>say<span class=\"token punctuation\">-</span>mall<span class=\"token punctuation\">-</span>api</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">terms-ServiceUrl</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>8080/</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">contact</span><span class=\"token punctuation\">:</span> developer@mail.com</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 1.0.0</pre></td></tr></table></figure><ul>\n<li>base-package：需要扫描的 API 方法的包名</li>\n<li>title：swagger2 标题</li>\n<li>description: swagger2 描述</li>\n<li>terms-ServiceUrl：swagger2 访问地址</li>\n<li>contact：联系方式</li>\n<li>version：版本号</li>\n</ul>\n<ol start=\"3\">\n<li>创建 SwaggerConfiguration<br />\n 在 config 文件夹下创建 SwaggerConfiguration.java，并添加下面代码<br />\n<img data-src=\"20.png\" alt=\"\" /></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Api</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableCaching</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResourceHandlerRegistry</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebMvcConfigurer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiInfoBuilder</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PathSelectors</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestHandlerSelectors</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>spi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DocumentationType</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Docket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>swagger2<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableSwagger2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token annotation punctuation\">@EnableCaching</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token annotation punctuation\">@EnableSwagger2</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SwaggerConfiguration</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">WebMvcConfigurer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;swagger2.base-package&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> BASE_PACKAGE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;swagger2.title&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> TITLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;swagger2.description&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> DESCRIPTION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;swagger2.terms-ServiceUrl&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> TERMS_SERVICE_URL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;swagger2.contact&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> CONTACT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;swagger2.version&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> VERSION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Docket</span> <span class=\"token function\">webApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Docket</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DocumentationType</span><span class=\"token punctuation\">.</span>SWAGGER_2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">apiInfo</span><span class=\"token punctuation\">(</span><span class=\"token function\">apiInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">groupName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"API接口\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//1 - 端口所属模块</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">apis</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestHandlerSelectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">basePackage</span><span class=\"token punctuation\">(</span>BASE_PACKAGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 扫描当前 package 下的 controller</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">apis</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestHandlerSelectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">withClassAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Api</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 扫描类上标有 @Api 的 controller 类</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">paths</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PathSelectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">/*** 获取 API 信息 方法 ***/</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ApiInfo</span> <span class=\"token function\">apiInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\">// 作者 名称 连接地址 邮箱 是 固定写法</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token class-name\">Contact</span> contact <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Contact</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TangYj\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\">// 返回一个 构造对象</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiInfoBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">title</span><span class=\"token punctuation\">(</span>TITLE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span>DESCRIPTION<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">termsOfServiceUrl</span><span class=\"token punctuation\">(</span>TERMS_SERVICE_URL<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">contact</span><span class=\"token punctuation\">(</span>CONTACT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">version</span><span class=\"token punctuation\">(</span>VERSION<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>     * 防止访问 doc.html 404</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>     * @param registry</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">public</span>  <span class=\"token keyword\">void</span> <span class=\"token function\">addResourceHandlers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResourceHandlerRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        registry<span class=\"token punctuation\">.</span><span class=\"token function\">addResourceHandler</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"doc.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addResourceLocations</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:/META-INF/resources/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        registry<span class=\"token punctuation\">.</span><span class=\"token function\">addResourceHandler</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/webjars/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addResourceLocations</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:/META-INF/resources/webjars/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>修改 controller 代码<br />\n修改上文创建的 TestController.java，给类添加 @Api 注解，给 api 方法添加 @ApiOperation 注解</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Api</span><span class=\"token punctuation\">(</span>tags <span class=\"token operator\">=</span> <span class=\"token string\">\"测试模块\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/test/test\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>notes <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>重启服务器<br />\n访问 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgwL2RvYy5odG1s\">http://localhost:8080/doc.html</span> （如果你配置的 swagger2 服务器是 http://localhost:8080/）<br />\n<img data-src=\"21.png\" alt=\"\" /><br />\nswagger2 已经自动生成了 api 文档</li>\n</ol>\n<h1 id=\"统一返回接口\"><a class=\"anchor\" href=\"#统一返回接口\">#</a> 统一返回接口</h1>\n<p>前后端分离的项目需要前端开发人员与后端开发人员的配置，而 API 接口返回的信息可以是多种多样的，这样就增加了交流的成本，如果我们规定好 API 返回的格式，这样开发起来就会更加的规范。</p>\n<ol>\n<li>创建 utils 文件夹，创建 result 文件夹<br />\n<img data-src=\"22.png\" alt=\"\" /></li>\n<li>创建 Result.java</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Result</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/** 错误码. */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/** 提示信息. */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/** 具体的内容. */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">T</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>msg <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">T</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>创建 ApiResponse.java</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ApiResponse</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> object<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Result</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> code<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Result</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>在 controller 里使用<br />\n返回成功请求：</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/role1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试角色1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>返回失败请求：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/role1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"权限认证系统\"><a class=\"anchor\" href=\"#权限认证系统\">#</a> 权限认证系统</h1>\n<h2 id=\"jwt认证\"><a class=\"anchor\" href=\"#jwt认证\">#</a> JWT 认证</h2>\n<p>传统认证会把用户信息保存在 session 中，然后由服务器管理，这种基于 session 的认证方式更加安全但是扩展性比较差而且是有状态的。基于 RESTful API 的原则之一是无状态且后台需要跨域进行访问，所以本项目不采用传统认证方式，而是使用 JWT 进行认证。</p>\n<blockquote>\n<p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于 JSON 的开放标准（(RFC 7519). 该 token 被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT 的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该 token 也可直接被用于认证，也可被加密。</p>\n</blockquote>\n<p>JWT 是由三段信息构成的，将这三段信息文本用。链接一起就构成了 Jwt 字符串。就像这样:</p>\n<pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n</code></pre>\n<p>第一部分我们称它为头部（header), 第二部分我们称其为载荷（payload, 类似于飞机上承载的物品)，第三部分是签证（signature).<br />\n 而 JWT 解密出来后是一个 JSON，就像这样：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  'userId'<span class=\"token operator\">:</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  'exp'<span class=\"token operator\">:</span> <span class=\"token number\">169874366552</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"认证过程\"><a class=\"anchor\" href=\"#认证过程\">#</a> 认证过程</h2>\n<h3 id=\"授权过程\"><a class=\"anchor\" href=\"#授权过程\">#</a> 授权过程</h3>\n<ol>\n<li>用户使用用户名密码来请求服务器登录 API</li>\n<li>服务器进行验证用户的信息</li>\n<li>服务器通过验证发送给用户一个 jwt token</li>\n<li>客户端存储 jwt token，并在每次请求时附送上这个 jwt token 值</li>\n</ol>\n<h3 id=\"鉴权过程\"><a class=\"anchor\" href=\"#鉴权过程\">#</a> 鉴权过程</h3>\n<ul>\n<li>客户端：客户端请求时将 jwt token 作为头发送给服务器</li>\n<li>服务器：\n<ul>\n<li>头部是否带有 token\n<ul>\n<li>有\n<ul>\n<li>验证 token, 验证权限，验证角色</li>\n</ul>\n</li>\n<li>没有\n<ul>\n<li>返回错误信息</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"集成jwt\"><a class=\"anchor\" href=\"#集成jwt\">#</a> 集成 JWT</h2>\n<ol>\n<li>在 pom.xml 下添加下列依赖，并且安装</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--   jwt     --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.auth0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>java-jwt<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.2.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>在 utils 文件夹下创建 jwt 文件夹</li>\n<li>创建 JWTToekn.java</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationToken</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JWTToken</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AuthenticationToken</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> serialVersionUID <span class=\"token operator\">=</span> <span class=\"token number\">1L</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 秘钥</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> token<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">JWTToken</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getPrincipal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> token<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> token<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>创建 JWTUtil.java</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span>JWT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWTVerifier</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>algorithms<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Algorithm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWTDecodeException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>interfaces<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DecodedJWT</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UnsupportedEncodingException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Date</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JWTUtil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 过期时间 1 天</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> EXPIRE_TIME <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     * 校验 token 是否正确</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     * @param token 密钥</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     * @param secret 用户的密码</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * @return 是否正确</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> token<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> secret<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token class-name\">Algorithm</span> algorithm <span class=\"token operator\">=</span> <span class=\"token class-name\">Algorithm</span><span class=\"token punctuation\">.</span><span class=\"token function\">HMAC256</span><span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">JWTVerifier</span> verifier <span class=\"token operator\">=</span> JWT<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span>algorithm<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">withClaim</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token class-name\">DecodedJWT</span> jwt <span class=\"token operator\">=</span> verifier<span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>     * 获得 token 中的信息无需 secret 解密也能获得</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>     * @return token 中包含的用户名</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token class-name\">DecodedJWT</span> jwt <span class=\"token operator\">=</span> JWT<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">return</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">getClaim</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">asString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">JWTDecodeException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     * 生成签名，5min 后过期</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     * @param username 用户名</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     * @param secret 用户的密码</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     * @return 加密的 token</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> secret<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token class-name\">Date</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>EXPIRE_TIME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token class-name\">Algorithm</span> algorithm <span class=\"token operator\">=</span> <span class=\"token class-name\">Algorithm</span><span class=\"token punctuation\">.</span><span class=\"token function\">HMAC256</span><span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token comment\">// 附带 username 信息</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token keyword\">return</span> JWT<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">withClaim</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">withExpiresAt</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>algorithm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UnsupportedEncodingException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>使用方法<br />\n签发 token</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> <span class=\"token class-name\">JWTUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><pre><code>验证token\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">JWTUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"集成shiro\"><a class=\"anchor\" href=\"#集成shiro\">#</a> 集成 Shiro</h2>\n<ol>\n<li>创建相关的数据库表，本文使用 mysql<br />\n 用户表：</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token punctuation\">`</span>sys_user<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">`</span>mob<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">`</span>email<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">`</span>valid<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">`</span>pticket<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">`</span>role_id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">`</span>password<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8mb4_0900_ai_ci</pre></td></tr></table></figure><pre><code>角色表：\n</code></pre>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token punctuation\">`</span>sys_role<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">`</span>description<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8mb4_0900_ai_ci</pre></td></tr></table></figure><pre><code>权限表：\n</code></pre>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token punctuation\">`</span>sys_permission<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">`</span>description<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8mb4_0900_ai_ci</pre></td></tr></table></figure><pre><code>角色-用户关系表：\n</code></pre>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token punctuation\">`</span>sys_user_role<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">`</span>uid<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">`</span>role_id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>uid<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">`</span>role_id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8mb4_0900_ai_ci</pre></td></tr></table></figure><pre><code>角色-权限关系表：\n</code></pre>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token punctuation\">`</span>sys_role_permission<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">`</span>permission_id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">`</span>role_id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>permission_id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">`</span>role_id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8mb4_0900_ai_ci</pre></td></tr></table></figure><ol start=\"2\">\n<li>插入测试数据</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> sys_user<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> sys_role<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>role<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"role1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> sys_permission<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"permission1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> sys_role_permission<span class=\"token punctuation\">(</span>permission_id<span class=\"token punctuation\">,</span>role_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> sys_user_role<span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">,</span>role_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>使用代码生成器生成代码<br />\n使用代码生成器生成五个表的 mapper,service,controller<br />\n<img data-src=\"24.png\" alt=\"\" /></li>\n<li>修改每个表的 mapper，在类上面加上 @Mapper 注解和 @Repository 注解<br />\n SysPermissionMapper.java</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Mapper</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">SysPermissionMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysPermission</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre><code>SysRoleMapper.java\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Mapper</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">SysRoleMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre><code>SysRolePermissionMapper.java\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Mapper</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">SysRolePermissionMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysRolePermission</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre><code>SysUserMapper.java\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Mapper</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">SysUserMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre><code>SysUserRoleMapper.java\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Mapper</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">SysUserRoleMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysUserRole</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>添加登录 api 与测试 api<br />\n 修改 user 的 server 接口<br />\n ISysUserService.java</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysPermission</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IService</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * &lt;p></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> *  服务类</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * &lt;/p></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @author Lucas</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @since 2020-04-29</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISysUserService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IService</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     * 获取用户角色</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * @param id</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findRoles</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     * 获取用户权限</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>     * @param id</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysPermission</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findPermissions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     * 根据用户名获取用户</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     * @param username</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SysUser</span> <span class=\"token function\">findUserByUserName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre><code>修改user的server接口实现类\nSysUserServiceImpl.java\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>conditions<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">QueryWrapper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysPermission</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysPermissionMapper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysRoleMapper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>rolePermission<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysRolePermission</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>rolePermission<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysRolePermissionMapper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysUserMapper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ISysUserService</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServiceImpl</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * &lt;p></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> *  服务实现类</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> * &lt;/p></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> * @author Lucas</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> * @since 2020-04-29</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SysUserServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ServiceImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysUserMapper</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ISysUserService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SysRoleMapper</span> sysRoleMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SysRolePermissionMapper</span> sysRolePermissionMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SysPermissionMapper</span> sysPermissionMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SysUserMapper</span> sysUserMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">// 根据用户 id 查询所有的角色信息</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findRoles</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">lambda</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SysRole</span><span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">></span></span> sysRoleList <span class=\"token operator\">=</span> sysRoleMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span> sysRoleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\">// 根据用户的 id 查询所有权限信息</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysPermission</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findPermissions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">// 获取用户所用有的角色 ID</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">lambda</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SysRole</span><span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> sysRoleIdList <span class=\"token operator\">=</span> sysRoleMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SysRole</span><span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sysRoleIdList<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token comment\">// 获取角色的权限 ID</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> sysRolePermissionIdList <span class=\"token operator\">=</span>  sysRolePermissionMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysRolePermission</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lambda</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">in</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SysRolePermission</span><span class=\"token operator\">::</span><span class=\"token function\">getRoleId</span><span class=\"token punctuation\">,</span> sysRoleIdList<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SysRolePermission</span><span class=\"token operator\">::</span><span class=\"token function\">getPermissionId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sysRolePermissionIdList<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\">// 获取权限</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysPermission</span><span class=\"token punctuation\">></span></span> sysPermissionList <span class=\"token operator\">=</span>  sysPermissionMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysPermission</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lambda</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">in</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SysPermission</span><span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">,</span> sysRolePermissionIdList<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">return</span> sysPermissionList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">// 登录</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SysUser</span> <span class=\"token function\">findUserByUserName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">lambda</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SysUser</span><span class=\"token operator\">::</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token class-name\">SysUser</span> sysUser <span class=\"token operator\">=</span> sysUserMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectOne</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">return</span> sysUser<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre><code>修改user的controller\nSysUserController.java\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysUserServiceImpl</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWTUtil</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Result</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Api</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiImplicitParam</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiImplicitParams</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiOperation</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authz<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UnauthorizedException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authz<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequiresAuthentication</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authz<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequiresPermissions</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authz<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequiresRoles</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UnsupportedEncodingException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> * &lt;p></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> *  前端控制器</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> * &lt;/p></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> * @author Lucas</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> * @since 2020-04-22</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token annotation punctuation\">@Api</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SysUserController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SysUserServiceImpl</span> sysUserService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"登录功能\"</span><span class=\"token punctuation\">,</span> notes<span class=\"token operator\">=</span><span class=\"token string\">\"用户密码登录\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiImplicitParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token annotation punctuation\">@ApiImplicitParam</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> value <span class=\"token operator\">=</span> <span class=\"token string\">\"用户名\"</span><span class=\"token punctuation\">,</span> required <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> dataType <span class=\"token operator\">=</span> <span class=\"token string\">\"String\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token annotation punctuation\">@ApiImplicitParam</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> value <span class=\"token operator\">=</span> <span class=\"token string\">\"密码\"</span><span class=\"token punctuation\">,</span> required <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> dataType <span class=\"token operator\">=</span> <span class=\"token string\">\"String\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                        <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                        <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">UnsupportedEncodingException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token class-name\">SysUser</span> user <span class=\"token operator\">=</span> sysUserService<span class=\"token punctuation\">.</span><span class=\"token function\">findUserByUserName</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> <span class=\"token class-name\">JWTUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            response<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnauthorizedException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequiresAuthentication</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/test\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"测试\"</span><span class=\"token punctuation\">,</span> notes<span class=\"token operator\">=</span><span class=\"token string\">\"测试\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequiresRoles</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"role1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/role1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"测试角色1\"</span><span class=\"token punctuation\">,</span> notes<span class=\"token operator\">=</span><span class=\"token string\">\"测试角色2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试角色1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequiresRoles</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"role2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/role2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"测试角色2\"</span><span class=\"token punctuation\">,</span> notes<span class=\"token operator\">=</span><span class=\"token string\">\"测试角色2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">role2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试角色2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequiresPermissions</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"permission1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/permission1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"测试权限\"</span><span class=\"token punctuation\">,</span> notes<span class=\"token operator\">=</span><span class=\"token string\">\"测试权限\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">permission1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试权限\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"7\">\n<li>在 pom.xml 下添加依赖并且安装包</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.shiro<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>shiro-spring<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.3.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"8\">\n<li>在 config 文件夹下创建 shiro 文件夹<br />\n<img data-src=\"23.png\" alt=\"\" /></li>\n<li>创建 ShiroFilter</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletRequest</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletResponse</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWTToken</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span>authc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BasicHttpAuthenticationFilter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShiroFilter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BasicHttpAuthenticationFilter</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     * 判断用户是否想要登入。</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     * 检测 header 里面是否包含 Authorization 字段即可</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isLoginAttempt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">HttpServletRequest</span> req <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">)</span> request<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">String</span> authorization <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> authorization <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">executeLogin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">HttpServletRequest</span> httpServletRequest <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">)</span> request<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\">String</span> authorization <span class=\"token operator\">=</span> httpServletRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">//        log.info (\"判断用户是否想要登录 x：&#123;&#125;\",authorization);</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">JWTToken</span>  token <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JWTToken</span><span class=\"token punctuation\">(</span>authorization<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">// 提交给 realm 进行登入，如果错误他会抛出异常并被捕获</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token function\">getSubject</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">// 如果没有抛出异常则代表登入成功，返回 true</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>     * 这里我们详细说明下为什么最终返回的都是 true，即允许访问</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>     * 例如我们提供一个地址 GET /article</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>     * 登入用户和游客看到的内容是不同的</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>     * 如果在这里返回了 false，请求会被直接拦截，用户看不到任何东西</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     * 所以我们在这里返回 true，Controller 中可以通过 subject.isAuthenticated () 来判断用户是否登入</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     * 如果有些资源只有登入用户才能访问，我们只需要在方法上面加上 @RequiresAuthentication 注解即可</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     * 但是这样做有一个缺点，就是不能够对 GET,POST 等请求进行分别过滤鉴权 (因为我们重写了官方的方法)，但实际上对应用影响不大</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isAccessAllowed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> mappedValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isLoginAttempt</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token function\">executeLogin</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token function\">response401</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>     * 对跨域提供支持</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">preHandle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token class-name\">HttpServletRequest</span> httpServletRequest <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">)</span> request<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token class-name\">HttpServletResponse</span> httpServletResponse <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletResponse</span><span class=\"token punctuation\">)</span> response<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        httpServletResponse<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-control-Allow-Origin\"</span><span class=\"token punctuation\">,</span> httpServletRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Origin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        httpServletResponse<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Methods\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GET,POST,OPTIONS,PUT,DELETE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        httpServletResponse<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Headers\"</span><span class=\"token punctuation\">,</span> httpServletRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Request-Headers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token comment\">// 跨域时会首先发送一个 option 请求，这里我们给 option 请求直接返回正常状态</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>httpServletRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>OPTIONS<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            httpServletResponse<span class=\"token punctuation\">.</span><span class=\"token function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">preHandle</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>     * 将非法请求跳转到 /401</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">response401</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> resp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token class-name\">HttpServletResponse</span> httpServletResponse <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletResponse</span><span class=\"token punctuation\">)</span> resp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            httpServletResponse<span class=\"token punctuation\">.</span><span class=\"token function\">sendRedirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/401\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token comment\">//log.error(e.getMessage());</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"10\">\n<li>创建 ShiroRealm.java</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysPermission</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SysUserServiceImpl</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWTToken</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWTUtil</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationInfo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationToken</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleAuthenticationInfo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authz<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthorizationInfo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authz<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleAuthorizationInfo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>realm<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthorizingRealm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>subject<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PrincipalCollection</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashSet</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShiroRealm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AuthorizingRealm</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SysUserServiceImpl</span> userService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">supports</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthenticationToken</span> token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> token <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">JWTToken</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">AuthorizationInfo</span> <span class=\"token function\">doGetAuthorizationInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PrincipalCollection</span> principals<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> <span class=\"token class-name\">JWTUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span>principals<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">// 查找用户</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token class-name\">SysUser</span> user <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">findUserByUserName</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">// 查找权限</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysPermission</span><span class=\"token punctuation\">></span></span>  sysPermissionList <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">findPermissions</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> permissions <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SysPermission</span> permisson <span class=\"token operator\">:</span> sysPermissionList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            permissions<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>permisson<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\">// 查找角色</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysRole</span><span class=\"token punctuation\">></span></span>  sysRoleList <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">findRoles</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> roles <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SysRole</span> role <span class=\"token operator\">:</span> sysRoleList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            roles<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">.</span><span class=\"token function\">getRole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token class-name\">SimpleAuthorizationInfo</span> simpleAuthorizationInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleAuthorizationInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        simpleAuthorizationInfo<span class=\"token punctuation\">.</span><span class=\"token function\">addRoles</span><span class=\"token punctuation\">(</span>roles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\">//Set&lt;String> permission = new HashSet&lt;String>(Arrays.asList(sysPermissionList.split(\",\")));</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        simpleAuthorizationInfo<span class=\"token punctuation\">.</span><span class=\"token function\">addStringPermissions</span><span class=\"token punctuation\">(</span>permissions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">return</span> simpleAuthorizationInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>     * 默认使用此方法进行用户正确与否验证，错误抛出异常即可</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">AuthenticationInfo</span> <span class=\"token function\">doGetAuthenticationInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthenticationToken</span> authenticationToken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">AuthenticationException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> authenticationToken<span class=\"token punctuation\">.</span><span class=\"token function\">getCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\">// 解密获得 username，用于和数据库进行对比</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> <span class=\"token class-name\">JWTUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>username <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AuthenticationException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token 无效！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token class-name\">SysUser</span> user <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">findUserByUserName</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AuthenticationException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户\"</span><span class=\"token operator\">+</span>username<span class=\"token operator\">+</span><span class=\"token string\">\"不存在\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">JWTUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AuthenticationException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"账户密码错误!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleAuthenticationInfo</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> <span class=\"token string\">\"my_realm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"11\">\n<li>创建 ShiroConfig.java</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Filter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>mgt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultSessionStorageEvaluator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>mgt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultSubjectDAO</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>realm<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Realm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LifecycleBeanPostProcessor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>interceptor<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthorizationAttributeSourceAdvisor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShiroFilterFactoryBean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>mgt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultWebSecurityManager</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span>autoproxy<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultAdvisorAutoProxyCreator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DependsOn</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShiroConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"securityManager\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DefaultWebSecurityManager</span> <span class=\"token function\">getManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">DefaultWebSecurityManager</span> manager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultWebSecurityManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 使用自己的 realm</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        manager<span class=\"token punctuation\">.</span><span class=\"token function\">setRealm</span><span class=\"token punctuation\">(</span><span class=\"token function\">myShiroRealm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>         * 关闭 shiro 自带的 session，详情见文档</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>         * http://shiro.apache.org/session-management.html#SessionManagement-StatelessApplications%28Sessionless%29</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token class-name\">DefaultSubjectDAO</span> subjectDAO <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultSubjectDAO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">DefaultSessionStorageEvaluator</span> defaultSessionStorageEvaluator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultSessionStorageEvaluator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        defaultSessionStorageEvaluator<span class=\"token punctuation\">.</span><span class=\"token function\">setSessionStorageEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        subjectDAO<span class=\"token punctuation\">.</span><span class=\"token function\">setSessionStorageEvaluator</span><span class=\"token punctuation\">(</span>defaultSessionStorageEvaluator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        manager<span class=\"token punctuation\">.</span><span class=\"token function\">setSubjectDAO</span><span class=\"token punctuation\">(</span>subjectDAO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> manager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Realm</span> <span class=\"token function\">myShiroRealm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">ShiroRealm</span> shiroRealm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShiroRealm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span> shiroRealm<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shiroFilter\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ShiroFilterFactoryBean</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DefaultWebSecurityManager</span> securityManager<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token class-name\">ShiroFilterFactoryBean</span> factoryBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShiroFilterFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\">// 添加自己的过滤器并且取名为 jwt</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Filter</span><span class=\"token punctuation\">></span></span> filterMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        filterMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jwt\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShiroFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setFilters</span><span class=\"token punctuation\">(</span>filterMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setSecurityManager</span><span class=\"token punctuation\">(</span>securityManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setUnauthorizedUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/401\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>         * 自定义 url 规则</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>         * http://shiro.apache.org/web.html#urls-</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> filterRuleMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token comment\">// 所有请求通过我们自己的 JWT Filter</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        filterRuleMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jwt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token comment\">// 访问 401 和 404 页面不通过我们的 Filter</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        filterRuleMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/401\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"anon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setFilterChainDefinitionMap</span><span class=\"token punctuation\">(</span>filterRuleMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">return</span> factoryBean<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>     * 下面的代码是添加注解支持</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token annotation punctuation\">@DependsOn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lifecycleBeanPostProcessor\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DefaultAdvisorAutoProxyCreator</span> <span class=\"token function\">defaultAdvisorAutoProxyCreator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token class-name\">DefaultAdvisorAutoProxyCreator</span> defaultAdvisorAutoProxyCreator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultAdvisorAutoProxyCreator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token comment\">// 强制使用 cglib，防止重复代理和可能引起代理出错的问题</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token comment\">// https://zhuanlan.zhihu.com/p/29161098</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        defaultAdvisorAutoProxyCreator<span class=\"token punctuation\">.</span><span class=\"token function\">setProxyTargetClass</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">return</span> defaultAdvisorAutoProxyCreator<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">LifecycleBeanPostProcessor</span> <span class=\"token function\">lifecycleBeanPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LifecycleBeanPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">AuthorizationAttributeSourceAdvisor</span> <span class=\"token function\">authorizationAttributeSourceAdvisor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DefaultWebSecurityManager</span> securityManager<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token class-name\">AuthorizationAttributeSourceAdvisor</span> advisor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AuthorizationAttributeSourceAdvisor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        advisor<span class=\"token punctuation\">.</span><span class=\"token function\">setSecurityManager</span><span class=\"token punctuation\">(</span>securityManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">return</span> advisor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"12\">\n<li>\n<p>创建 exception 文件夹<br />\n<img data-src=\"25.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>创建 ShiroExceptionHandeler.java<br />\n 全局拦截 shiro 异常并且返回对应的错误信息</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>npc<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Result</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShiroException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authz<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UnauthorizedException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExceptionHandler</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseStatus</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestControllerAdvice</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token annotation punctuation\">@RestControllerAdvice</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShiroExceptionHandeler</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 捕捉 shiro 的异常</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseStatus</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>UNAUTHORIZED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ShiroException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">handle401</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ShiroException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 捕捉 UnauthorizedException</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseStatus</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>UNAUTHORIZED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UnauthorizedException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">handle401</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Unauthorized\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 捕捉其他所有异常</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseStatus</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>BAD_REQUEST<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">globalException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Throwable</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ApiResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token function\">getStatus</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ex<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">HttpStatus</span> <span class=\"token function\">getStatus</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token class-name\">Integer</span> statusCode <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">)</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"javax.servlet.error.status_code\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>statusCode <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>INTERNAL_SERVER_ERROR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>statusCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"14\">\n<li>测试<br />\n运行 springboot 应用，打开 http://localhost:8080/doc.html<br />\n 访问登录 api<br />\n<img data-src=\"26.png\" alt=\"\" /><br />\n 将返回来的 token 设置成全局参数<br />\n<img data-src=\"27.png\" alt=\"\" /><br />\n测试需要 permission1 权限才能访问 api，验证通过<br />\n<img data-src=\"28.png\" alt=\"\" /><br />\n测试需要 role1 角色才能访问 api，验证通过<br />\n<img data-src=\"29.png\" alt=\"\" /><br />\n测试需要 role2 角色才能访问 api，验证不通过<br />\n<img data-src=\"30.png\" alt=\"\" /></li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "软件应用",
                "spring",
                "mybatisplus",
                "swagger"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E4%BC%98%E5%8C%96/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E4%BC%98%E5%8C%96/",
            "title": "MySQL-基本概念与优化",
            "date_published": "2020-04-17T07:51:00.000Z",
            "content_html": "<h1 id=\"mysql的逻辑结构\"><a class=\"anchor\" href=\"#mysql的逻辑结构\">#</a> Mysql 的逻辑结构</h1>\n<p><img data-src=\"1.jpg\" alt=\"Mysql的逻辑结构\" /></p>\n<p>MySQL 逻辑结构分为三层：</p>\n<ul>\n<li>客户端层：<br />\n负责连接处理，授权认证，安全服务等功能</li>\n<li>核心服务层：<br />\n负责解析，分析，优化，存储过程，触发器，视图等功能</li>\n<li>存储层：<br />\n负责数据的存储和提取，类似于 Java 接口的实现，Mysql 的执行器在执行 SQL 的时候只会关注 API 的调用，完全屏蔽了不同引擎实现间的差异。比如 Select 语句，先会判断当前用户是否拥有权限，其次到缓存（内存）查询是否有相应的结果集，如果没有再执行解析 sql，优化生成执行计划，调用 API 执行</li>\n</ul>\n<h1 id=\"事务的基本要素acid\"><a class=\"anchor\" href=\"#事务的基本要素acid\">#</a> 事务的基本要素 (ACID)</h1>\n<ul>\n<li>原子性（Atomic）：事务是一个原子操作单元，其对数据的修改，要么全部执行，要么全部不执行</li>\n<li>一致性（Consistency）：在事务开始前和结束后，数据库的完整性约束没有被破坏</li>\n<li>隔离性（Isolation）：指一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发事务之间互不干扰</li>\n<li>持久性（Durability）：指一个事务一旦提交，事务对数据库的所有更改都会保存到数据库里</li>\n</ul>\n<details class=\"info\"><summary>完整性约束</summary><div>\n<div class=\"note info\">\n<p>完整性约束 (Data Integrity) 是指数据的精确 (Accuracy) 和可靠性 (Reliability)。包括：</p>\n<ol>\n<li>实体完整性 (行)：规定表的每一行在表中是惟一的实体。</li>\n<li>域完整性 (列)：是指表中的列必须满足某种特定的数据类型约束，其中约束又包括取值范围、精度等规定。</li>\n<li>参照完整性：是指两个表的主关键字和外关键字的数据应一致，保证了表之间的数据的一致性，防止了数据丢失或无意义的数据在数据库中扩散。</li>\n<li>用户定义的完整性：不同的关系数据库系统根据其应用环境的不同，往往还需要一些特殊的约束条件。用户定义的完整性即是针对某个特定关系数据库的约束条件，它反映某一具体应用必须满足的语义要求。</li>\n</ol>\n</div>\n</div></details>\n<h1 id=\"事务的并发问题\"><a class=\"anchor\" href=\"#事务的并发问题\">#</a> 事务的并发问题</h1>\n<ul>\n<li>脏读：<br />\n事务 A 读取了事务 B 更新的数据，然后事务 B 回滚了，那么 A 读到的就是脏数据</li>\n<li>不可重复读：<br />\n在同一事务内，不同时间读取同一批数据可能会不一样，这批数据<br />\n可能会受到别的事务的影响，比如其他事务更新了这批数据并提交了，通常针对数据更新</li>\n<li>幻读：<br />\n幻读针对数据插入，A 事务对一批数据进行修改但还没有提交，此时事务 B 插入了一批与 A 事务修改前的记录一样的记录进来，并且在事务 A 之前提交了，而这时，在事务 A 查询会发现好像刚刚做的修改并未起作用，但事实是事务 B 刚插入进来的数据，让用户感觉自己出现幻觉，这就叫做幻读</li>\n</ul>\n<h1 id=\"mysql事务隔离级别\"><a class=\"anchor\" href=\"#mysql事务隔离级别\">#</a> MySQL 事务隔离级别</h1>\n<p>SQL 标准定义了四种隔离级别，MySQL 全都支持。这四种隔离级别分别是：</p>\n<ul>\n<li>读未提交（READ UNCOMMITTED）</li>\n<li>读提交 （READ COMMITTED）</li>\n<li>可重复读 （REPEATABLE READ）</li>\n<li>串行化 （SERIALIZABLE）</li>\n</ul>\n<p>从上往下，隔离强度逐渐增强，性能逐渐变差。采用哪种隔离级别要根据系统需求权衡决定，其中，可重复读是 MySQL 的默认级别。</p>\n<div class=\"note info\">\n<p>可重复读指的是在一个事务内，最开始读到的数据和事务结束前的任意时刻读到的同一批数据都是一致的。通常针对数据更新（UPDATE）操作。</p>\n</div>\n<p>事务隔离其实就是为了解决上面提到的脏读、不可重复读、幻读这几个问题，下面展示了 4 种隔离级别对这三个问题的解决程度。</p>\n<table>\n<thead>\n<tr>\n<th>隔离程度</th>\n<th>脏读</th>\n<th>不可重复读</th>\n<th>幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>读未提交</td>\n<td>可能</td>\n<td>可能</td>\n<td>可能</td>\n</tr>\n<tr>\n<td>读提交</td>\n<td>不可能</td>\n<td>可能</td>\n<td>可能</td>\n</tr>\n<tr>\n<td>可重复读</td>\n<td>不可能</td>\n<td>不可能</td>\n<td>可能</td>\n</tr>\n<tr>\n<td>串行化</td>\n<td>不可能</td>\n<td>不可能</td>\n<td>不可能</td>\n</tr>\n</tbody>\n</table>\n<p>在 MySQL 可重复读的隔离级别中并不是完全解决了幻读的问题，而是解决了读数据情况下的幻读问题。而对于修改的操作依旧存在幻读问题，就是说 MVCC 对于幻读的解决时不彻底的。<br />\n通过索引加锁，间隙锁，next-key lock 可以解决幻读的问题。</p>\n<div class=\"note info\">\n<p>MySQL InnoDB 存储引擎，实现的是基于多版本的并发控制协议 ——MVCC (Multi-Version Concurrency Control) (注：与 MVCC 相对的，是基于锁的并发控制，Lock-Based Concurrency Control)。MVCC 最大的好处，相信也是耳熟能详：读不加锁，读写不冲突。在读多写少的 OLTP 应用中，读写不冲突是非常重要的，极大的增加了系统的并发性能，这也是为什么现阶段，几乎所有的 RDBMS，都支持了 MVCC。</p>\n</div>\n<h1 id=\"mysql的锁\"><a class=\"anchor\" href=\"#mysql的锁\">#</a> MySQL 的锁</h1>\n<p>InnoDB 有三种行锁的算法：</p>\n<ol>\n<li>Record Lock：单个行记录上的锁。</li>\n<li>Gap Lock：间隙锁，锁定一个范围，但不包括记录本身。GAP 锁的目的，是为了防止同一事务的两次当前读，出现幻读的情况。</li>\n<li>Next-Key Lock：行锁和间隙锁组合起来，锁定一个范围，并且锁定记录本身。对于行的查询，都是采用该方法，主要目的是解决幻读的问题。</li>\n</ol>\n<p>innoDB 默认的隔离级别是可重复读 (Repeatable Read)，并且会以 Next-Key Lock 的方式对数据行进行加锁。Next-Key Lock 是行锁和间隙锁的组合，当 InnoDB 扫描索引记录的时候，会首先对索引记录加上行锁（Record Lock），再对索引记录两边的间隙加上间隙锁（Gap Lock）。加上间隙锁之后，其他事务就不能在这个间隙修改或者插入记录</p>\n<p>何时使用行锁，何时产生间隙锁</p>\n<ol>\n<li>只使用唯一索引查询，并且只锁定一条记录时，innoDB 会使用行锁。</li>\n<li>只使用唯一索引查询，但是检索条件是范围检索，或者是唯一检索然而检索结果不存在（试图锁住不存在的数据）时，会产生 Next-Key Lock。</li>\n<li>使用普通索引检索时，不管是何种查询，只要加锁，都会产生间隙锁。</li>\n<li>同时使用唯一索引和普通索引时，由于数据行是优先根据普通索引排序，再根据唯一索引排序，所以也会产生间隙锁。</li>\n</ol>\n<p>在 MVCC 并发控制中，读操作可以分成两类：快照读 (snapshot read) 与当前读 (current read)。快照读，读取的是记录的可见版本 (有可能是历史版本)，不用加锁。当前读，读取的是记录的最新版本，并且，当前读返回的记录，都会加上锁，保证其他事务不会再并发修改这条记录。</p>\n<ul>\n<li>快照读：<br />\n简单的 select 操作， 比如读历史记录，这些不会因为并发被修改的记录，属于快照读（有时候会加锁防止因为并发引起的数据不一致）<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">where</span> ?<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>当前读：<br />\n插入 / 更新 / 删除操作，属于当前读，需要加锁，查询看情况加锁<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">where</span> ? <span class=\"token keyword\">lock</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">share</span> <span class=\"token keyword\">mode</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">where</span> ? <span class=\"token keyword\">for</span> <span class=\"token keyword\">update</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span>…<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">update</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">set</span> ? <span class=\"token keyword\">where</span> ?<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">where</span> ?<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>共享锁 (S)：用法 lock in share mode，又称读锁，允许一个事务去读一行，阻止其他事务获得相同数据集的排他锁。若事务 T 对数据对象 A 加上 S 锁，则事务 T 可以读 A 但不能修改 A，其他事务只能再对 A 加 S 锁，而不能加 X 锁，直到 T 释放 A 上的 S 锁。这保证了其他事务可以读 A，但在 T 释放 A 上的 S 锁之前不能对 A 做任何修改。</li>\n<li>排他锁 (X)：用法 for update，又称写锁，允许获取排他锁的事务更新数据，阻止其他事务取得相同的数据集共享读锁和排他写锁。若事务 T 对数据对象 A 加上 X 锁，事务 T 可以读 A 也可以修改 A，其他事务不能再对 A 加任何锁，直到 T 释放 A 上的锁。在没有索引的情况下，InnoDB 只能使用表锁。</li>\n</ul>\n<h1 id=\"mysql查询过程\"><a class=\"anchor\" href=\"#mysql查询过程\">#</a> MySQL 查询过程</h1>\n<p><img data-src=\"1.jpg\" alt=\"MySQL查询过程\" /></p>\n<p>SQL 的执行顺序：from---where--group by---having---select---order by</p>\n<h1 id=\"mysql日志系统\"><a class=\"anchor\" href=\"#mysql日志系统\">#</a> MySQL 日志系统</h1>\n<p>MySQL 日志分为 redo log (重做日志)，undo log（回滚日志），binlog（归档日志）</p>\n<ul>\n<li>redo log：\n<ul>\n<li>作用：\n<ol>\n<li>确保事务的持久性</li>\n<li>防止在发生故障的时间点，尚有脏页未写入磁盘，在重启 mysql 服务的时候，根据 redo log 进行重做，<ins>从而达到事务的持久性这一特性</ins></li>\n</ol>\n</li>\n<li>内容：<br />\n物理格式的日志，记录的是物理数据页面的修改的信息，其 redo log 是顺序写入 redo log file 的物理文件中去的。</li>\n<li>产生：<br />\n重做日志在事务进行中不断地被写入，并日志不是随事务提交的顺序进行写入的。</li>\n<li>释放：<br />\n当对应事务的脏页写入到磁盘之后，redo log 的使命也就完成了，重做日志占用的空间就可以重用（被覆盖）。</li>\n</ul>\n</li>\n<li>binlog：\n<ul>\n<li>作用：\n<ol>\n<li><ins>用于复制，在主从复制中，从库利用主库上的 binlog 进行重播，实现主从同步</ins></li>\n<li><ins>用于数据库的基于时间点的还原</ins></li>\n</ol>\n</li>\n<li>内容：记录了执行的 SQL 语句与其的反向信息，也就意味着 delete 对应着 delete 本身和其反向的 insert；update 对应着 update 执行前后的版本的信息；insert 对应着 delete 和 insert 本身的信息。</li>\n<li>产生： 事务提交的时候</li>\n<li>释放：binlog 的默认是保持时间由参数 expire_logs_days 配置</li>\n</ul>\n</li>\n<li>undo log:\n<ul>\n<li>作用：<ins>保存事务发生前的一个版本，可以用于回滚</ins>，同时可以提供多版本并发控制下的读（MVCC），也即非锁定读</li>\n<li>内容：逻辑格式的日志，在执行 undo 的时候，仅仅是将数据从逻辑上恢复至事务之前的状态，而不是从物理页面上操作实现的，这一点是不同于 redo log 的。</li>\n<li>产生：事务开始之前，将当前是的版本生成 undo log，undo 也会产生 redo 来保证 undo log 的可靠性</li>\n<li>释放：当事务提交之后，undo log 并不能立马被删除，而是放入待清理的链表，由 purge 线程判断是否由其他事务在使用 undo 段中表的上一个事务之前的版本信息，决定是否可以清理 undo log 的日志空间。</li>\n</ul>\n</li>\n</ul>\n<p>binlog 和 redo log 的区别：</p>\n<ol>\n<li>redolog 产生在 mysql 的服务层面，binlog 产生在 mysql 的客户端层面</li>\n<li>两种日志记录的内容不一样</li>\n<li>两种日志写入的时间点不一样，binlog 在事务提交才会写入，redo log 随着事务的进行不断写入</li>\n<li>binlog 用于主重复制和数据恢复用，redo log 用于服务异常宕机的数据恢复</li>\n</ol>\n<p>&lt;h1 id=&quot;Mysql 如何保证一致性和持久性&quot;&gt;Mysql 如何保证一致性和持久性 &lt; a class=&quot;anchor&quot; href=&quot;#Mysql 如何保证一致性和持久性&quot; data-pjax-state=&quot;&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;</p>\n<p>MySQL 为了保证 ACID 中的一致性和持久性，使用了 WAL (Write-Ahead Logging, 先写日志再写磁盘)。Redo log 就是一种 WAL 的应用。当数据库忽然掉电，再重新启动时，MySQL 可以通过 Redo log 还原数据。也就是说，每次事务提交时，不用同步刷新磁盘数据文件，只需要同步刷新 Redo log 就足够了。</p>\n<h1 id=\"mysql索引\"><a class=\"anchor\" href=\"#mysql索引\">#</a> Mysql 索引</h1>\n<p>MySQL 的索引分为两种：</p>\n<ol>\n<li>Hash 索引：通常用于单行查询。</li>\n<li>B + 树索引：通常用于范围查询</li>\n</ol>\n<p>为什么选择 B + 树作为索引结构<br />\n首先先谈谈为什么不用其他数据结构来作为索引结构</p>\n<ul>\n<li>Hash 索引：<br />\nHash 索引的底层是 Hash 表，Hash 表是一种以 key-value 存储数据的结构，所以多个索引在存储关系上是完全没顺序关系的，所以区间查询是无法直接通过索引查询的，必须通过全表查询，所以哈希索引只适用于等值查询的场景</li>\n<li>二叉查找树：<br />\n二叉查找树在特殊情况下会退化成链表，无法解决平衡的问题</li>\n<li>二叉平衡树：<br />\n二叉平衡树解决了平衡的问题，但是旋转的效率太低</li>\n<li>红黑树：<br />\n舍弃严格的平衡与引入红黑节点，解决了 AVL 旋转效率过低的问题，但是还是存在问题。一是我们知道数据库查询的时间复杂度与树的高度有关。而红黑树是二叉树这就导致了查询效率较低。二是红黑树是基于内存操作的，在查询的时候需要将全部数据放进内存，我们知道有时候数据库的数据非常大，这将非常消耗内存，而 B + 树是基于磁盘查询，不用一次性把数据载入内存。</li>\n</ul>\n<p>而为什么使用 B + 树，首先看看 B + 树的数据结构，可以参考我的其他文章，<a href=\"/2020/11/05/2020/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-B%E6%A0%91%E3%80%81B-%E6%A0%91%E3%80%81B-%E6%A0%91/\"> 数据结构 - B 树、B + 树、B - 树</a>，总结起来有下面三点</p>\n<ol>\n<li>B + 树的数据都存在于叶子节点，这让查询的时间复杂度更加稳定</li>\n<li>B + 树除了叶子节点存数据，其他节点只存索引，这使得每一层树能存更多的索引，能让树的高度更低，使得查询效率更快</li>\n<li>B + 树的叶子节点以链表的方式组成，更加适用与范围查询与区间查询</li>\n</ol>\n<h2 id=\"聚簇索引与非聚簇索引\"><a class=\"anchor\" href=\"#聚簇索引与非聚簇索引\">#</a> 聚簇索引与非聚簇索引</h2>\n<ul>\n<li>聚簇索引：B+ Tree 的叶子节点存储的是整行数据和主键的值</li>\n<li>非聚簇索引：B+ Tree 的叶子节点存储了主键的值</li>\n</ul>\n<p>在 innodb 中，在聚簇索引之上创建的索引称之为辅助索引 (二级索引)，非聚簇索引都是辅助索引，像复合索引、前缀索引、唯一索引。辅助索引叶子节点存储的不再是行的物理位置，而是主键值，辅助索引访问数据总是需要二次查找。</p>\n<p><img data-src=\"3.jpg\" alt=\"innodb\" /></p>\n<p>MyISAM 使用的是非聚簇索引，非聚簇索引的两棵 B + 树看上去没什么不同，节点的结构完全一致只是存储的内容不同而已，主键索引 B + 树的节点存储了主键，辅助键索引 B + 树存储了辅助键。表数据存储在独立的地方，这两颗 B + 树的叶子节点都使用一个地址指向真正的表数据，对于表数据来说，这两个键没有任何差别。由于索引树是独立的，通过辅助键检索无需访问主键的索引树。</p>\n<p><img data-src=\"4.jpg\" alt=\"MyISAM\" /></p>\n<p>每次使用辅助索引检索都要经过两次 B + 树查找，看上去聚簇索引的效率明显要低于非聚簇索引，这不是多此一举吗？聚簇索引的优势在哪？</p>\n<ol>\n<li>由于行数据和聚簇索引的叶子节点存储在一起，同一页中会有多条行数据，访问同一数据页不同行记录时，已经把页加载到了 Buffer 中（缓存器），再次访问时，会在内存中完成访问，不必访问磁盘。这样主键和行数据是一起被载入内存的，找到叶子节点就可以立刻将行数据返回了，如果按照主键 Id 来组织数据，获得数据更快。</li>\n<li>辅助索引的叶子节点，存储主键值，而不是数据的存放地址。好处是当行数据放生变化时，索引树的节点也需要分裂变化；或者是我们需要查找的数据，在上一次 IO 读写的缓存中没有，需要发生一次新的 IO 操作时，可以避免对辅助索引的维护工作，只需要维护聚簇索引树就好了。另一个好处是，因为辅助索引存放的是主键值，减少了辅助索引占用的存储空间大小。</li>\n</ol>\n<div class=\"note info\">\n<p>注：我们知道一次 io 读写，可以获取到 16K 大小的资源，我们称之为读取到的数据区域为 Page。而我们的 B 树，B + 树的索引结构，叶子节点上存放好多个关键字（索引值）和对应的数据，都会在一次 IO 操作中被读取到缓存中，所以在访问同一个页中的不同记录时，会在内存里操作，而不用再次进行 IO 操作了。除非发生了页的分裂，即要查询的行数据不在上次 IO 操作的换村里，才会触发新的 IO 操作。</p>\n</div>\n<ol start=\"3\">\n<li>因为 MyISAM 的主索引并非聚簇索引，那么他的数据的物理地址必然是凌乱的，拿到这些物理地址，按照合适的算法进行 I/O 读取，于是开始不停的寻道不停的旋转。聚簇索引则只需一次 I/O。（强烈的对比）</li>\n<li>不过，如果涉及到大数据量的排序、全表扫描、count 之类的操作的话，还是 MyISAM 占优势些，因为索引所占空间小，这些操作是需要在内存中完成的。</li>\n</ol>\n<p><ins>当使用主键为聚簇索引时，主键最好不要使用 uuid</ins>，因为 uuid 的值太过离散，不适合排序且可能出线新增加记录的 uuid，会插入在索引树中间的位置，导致索引树调整复杂度变大，消耗更多的时间和资源。</p>\n<p>建议使用 int 类型的自增，方便排序并且默认会在索引树的末尾增加主键值，对索引树的结构影响最小。而且，主键值占用的存储空间越大，辅助索引中保存的主键值也会跟着变大，占用存储空间，也会影响到 IO 操作读取到的数据量。</p>\n<p><ins>为什么主键通常建议使用自增 id</ins></p>\n<p>聚簇索引的数据的物理存放顺序与索引顺序是一致的，即：只要索引是相邻的，那么对应的数据一定也是相邻地存放在磁盘上的。如果主键不是自增 id，那么可以想 象，它会干些什么，不断地调整数据的物理地址、分页，当然也有其他一些措施来减少这些操作，但却无法彻底避免。但，如果是自增的，那就简单了，它只需要一 页一页地写，索引结构相对紧凑，磁盘碎片少，效率也高。</p>\n<h1 id=\"mysql扫描\"><a class=\"anchor\" href=\"#mysql扫描\">#</a> MySQL 扫描</h1>\n<ul>\n<li>\n<p>全表扫描（Full Table Scans）：当 Mysql 使用全部扫描时，会读取所有的行，并检查每一行是否满足 where 限制条件，数据库将顺序地读取分配给表的每个数据块，直到读到表的最高水线处 (high water mark, HWM，标识表的最后一个数据块)。一个多块读操作可以使一次 I/O 能读取多块数据块 (db_block_multiblock_read_count 参数设定)，而不是只读取一个数据块，这极大的减少了 I/O 总次数，提高了系统的吞吐量，所以利用多块读的方法可以十分高效地实现全表扫描</p>\n</li>\n<li>\n<p>全索引扫描（full index scan）：当 MySQL 使用索引扫描时，会将索引装载进 B + 树中，通过 B + 树一级一级往下查询，直到找到存中于叶子节点的数据。使用索引扫描不需要载入全部数据，而且 B + 树查询效率极高 (一般 mysql 的 B + 树高度为 1-3)，所以使用索引扫描能大大提高查询的效率</p>\n</li>\n<li>\n<p>索引覆盖：如果一个索引包含 (或覆盖) 所有需要查询的字段的值，称为‘覆盖索引’。即只需扫描索引而无须回表查询。因为 Mysql 的 B + 树叶子节点存储着行记录与主键索引数据，mysql 能直接拿到索引的数据，例如现在有主键 id，当我们执行下面 sql 时</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> id fron <span class=\"token keyword\">table</span> <span class=\"token keyword\">where</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><p>mysql 能直接拿到 id，而不需要再回表查询，而当我们执行下面的 sql 时</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> id<span class=\"token punctuation\">,</span>name fron <span class=\"token keyword\">table</span> <span class=\"token keyword\">where</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><p>mysql 能直接拿到 id 的数据，但 name 不在索引里面，所以需要回表 (通过 ID 查询) 找到这行数据的 name。<br />\n<img data-src=\"5.jpg\" alt=\"MyISAM\" /></p>\n</li>\n</ul>\n<p><ins>全索引扫描一定比全表扫描好吗</ins><br />\n不一定，当查询的数据大于 10% 的全表数据时候，全表搜索会更快。</p>\n<p>例如：现在有 16000 行的表，每行数据都为 1k。我们知道 mysql 的每页 (page) 数据默认为 16k，那么这个表就有 1000 块。现在我要查询里面的 2000 行 (列如 id&lt;2000)。如果使用索引扫描，首先会先找到一条索引，然后再找到索引所指向的块，块里面有 16 条数据，再找到其中一条返回，上面操作将进行 2000 次，相当于遍历了 2000 次块，然而整个表的块就只有 1000 块，所以这时候使用索引扫描会比全表扫描要慢，这也是为什么当 where 条件里面有大于小于时将启用全表扫描 (大部分)</p>\n<p><ins>什么时候会启用全表扫描</ins><br />\n有时候表中即使有索引，如果使用不当，也会造成全表扫描</p>\n<ul>\n<li>条件中使用了 null</li>\n<li>使用 or 作为连接条件</li>\n<li>使用 [not] in 时</li>\n<li>使用模糊查询时</li>\n<li>使用！= 或者 &lt;&gt; 时</li>\n<li>使用 count (*) 时</li>\n<li>使用参数作为条件时</li>\n<li>模糊查询 % like</li>\n<li>索引列参与计算，使用了函数</li>\n<li>需要回表的查询结果集过大</li>\n<li>非最左前缀顺序</li>\n</ul>\n<h1 id=\"通常一棵b树可以存放多少行数据\"><a class=\"anchor\" href=\"#通常一棵b树可以存放多少行数据\">#</a> 通常一棵 B + 树可以存放多少行数据</h1>\n<p>我们知道 B + 树的数据都在叶子节点，假设一颗 2 层的 B + 树，那么根节点都是索引键的指针，那么根节点能放多少指针呢？ 1page 默认为 16k，那么根节点就有 1024<em>16=16384 字节，假设主键 ID 为 bigint 类型，长度为 8 字节，而指针大小在 InnoDB 源码中设置为 6 字节，这样一共 14 字节，那么根节点就可以存放 16384/14=1170 个指针。每个指针指向一个 page，假设一条数据为 1k，那么每个块就有 16 条记录，所以一颗二层的 B + 树就有 1170</em>16=18720 条记录。<br />\n从而一颗三层的 B + 树就有 1170<em>1170</em>16 = 21902400 条记录，所以一颗三层的 B + 树就能装载上千万数据表</p>\n<h1 id=\"数据库优化\"><a class=\"anchor\" href=\"#数据库优化\">#</a> 数据库优化</h1>\n<ul>\n<li>创建并使用正确的索引</li>\n<li>只返回需要的字段</li>\n<li>减少交互次数（批量提交）</li>\n<li>设置合理的 Fetch Size（数据每次返回给客户端的条数）</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "数据库",
                "mysql"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/Solr-%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BD%BF%E7%94%A8/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/Solr-%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BD%BF%E7%94%A8/",
            "title": "Solr-全文搜索引擎使用",
            "date_published": "2020-04-12T07:02:18.000Z",
            "content_html": "<h1 id=\"什么是solr\"><a class=\"anchor\" href=\"#什么是solr\">#</a> 什么是 Solr</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sdWNlbmUuYXBhY2hlLm9yZy9zb2xyLw==\">Solr</span> 是基于 Apache Lucene 构建的搜索服务器，Apache Lucene 是基于 Java 的开源信息检索库。它旨在驱动功能强大的文档检索应用程序 - 无论您需要根据用户的查询向其提供数据的任何地方，Solr 都能为您服务</p>\n<ul>\n<li>Solr 能为你想要搜索的数据建立索引，提高搜索效率</li>\n<li>Solr 能配置各种分词器，如英文分词器，中文分词器。分词器能将你输入的搜索文本切分成几个词，然后搜索出最匹配这几个词的数据。例如中文分词器（不同类别的中文分词分词结果不一样），输入 “我是中国人”，Solr 会将这句话切分为 “我”，“是”，“中国人” 去进行搜索。</li>\n<li>Solr 支持分布式搜索，将搜索数据分布在数个 solr 服务器上，称之为 SolrCloud 集群。当 Solr 节点接收到搜索请求时，该请求将在后台路由到碎片的副本，该碎片是要搜索的集合的一部分。</li>\n</ul>\n<h1 id=\"solr安装\"><a class=\"anchor\" href=\"#solr安装\">#</a> Solr 安装</h1>\n<ol>\n<li>下载 Solr 安装包<br />\n可从 Solr 网站获得 Solr。下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sdWNlbmUuYXBhY2hlLm9yZy9zb2xyL2Rvd25sb2Fkcy5odG1s\">最新版本</span><br />\n有三个单独的程序包：</li>\n</ol>\n<ul>\n<li>solr-8.5.0.tgz 用于 Linux / Unix / OSX 系统</li>\n<li>solr-8.5.0.zip 用于 Microsoft Windows 系统</li>\n<li>solr-8.5.0-src.tgz 软件包 Solr 源代码。如果您想在 Solr 上进行开发而不使用官方的 Git 存储库，这将很有用。</li>\n</ul>\n<ol start=\"2\">\n<li>解压 solr<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> ~/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">tar</span> zxf solr-8.5.0.tgz</pre></td></tr></table></figure>安装 Solr 之后，您将在其中看到以下目录和文件：</li>\n</ol>\n<ul>\n<li>bin/<br />\n 该目录包含几个重要的脚本，这些脚本将使使用 Solr 更加容易。\n<ul>\n<li>solr 和 solr.cmd<br />\n 这是 Solr 的控制脚本，也称为 bin/solr（* nix）/bin/solr.cmd（Windows）。该脚本是启动和停止 Solr 的首选工具。在以 SolrCloud 模式运行时，您还可以创建集合或核心，配置身份验证并使用配置文件。</li>\n<li>post<br />\n 它提供了用于发布内容到 Solr 一个简单的命令行界面。</li>\n<li>solr.in.sh 和 solr.in.cmd<br />\n 这些分别是 * nix 和 Windows 系统的属性文件。在此配置 Java，Jetty 和 Solr 的系统级属性。使用 bin/solr/ 时 bin/solr.cmd，可以覆盖许多设置，但这使您可以将所有属性设置在一个位置。</li>\n<li>install_solr_services.sh<br />\n 该脚本在 * nix 系统上用于将 Solr 作为服务安装。在将 Solr 投入生产一节中对此进行了详细描述。</li>\n</ul>\n</li>\n<li>contrib/<br />\nSolr 的 contrib 目录包括用于 Solr 的特殊功能的附加插件。</li>\n<li>dist /<br />\n 该 dist 目录包含主要的 Solr .jar 文件。</li>\n<li>docs /<br />\n 该 docs 目录包含指向 Solr 的在线 Javadocs 的链接。</li>\n<li>example/<br />\n 该 example 目录包括几种类型的示例，这些示例演示了各种 Solr 功能。有关此目录中内容的更多详细信息，请参见下面的 Solr 示例部分。</li>\n<li>licenses/<br />\n 该 licenses 目录包含 Solr 使用的第三方库的所有许可证。</li>\n<li>server/<br />\n 该目录是 Solr 应用程序的心脏所在的位置。此目录中的自述文件提供了详细的概述，但以下是一些要点：\n<ul>\n<li>Solr’s Admin UI （server/solr-webapp）</li>\n<li>Jetty libraries（server/lib）</li>\n<li>日志文件（server/logs）和日志配置（server/resources）。有关如何自定义 Solr 的默认日志记录的更多详细信息，请参阅配置日志记录部分。</li>\n<li>样本配置集（server/solr/configsets）</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>启动 solr 服务<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ bin/solr start</pre></td></tr></table></figure>如果您正在运行 Windows，则可以通过运行 bin\\solr.cmd 来启动 Solr 。<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bin<span class=\"token punctuation\">\\</span>solr.cmd start</pre></td></tr></table></figure></li>\n<li>检测 solr 是否在运行<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bin/solr status</pre></td></tr></table></figure></li>\n<li>打开浏览器<br />\n访问 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4OTgzL3NvbHIv\">http://localhost:8983/solr/</span><br />\n<img data-src=\"1.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"solr使用\"><a class=\"anchor\" href=\"#solr使用\">#</a> Solr 使用</h1>\n<p>打开 sorl 页面，我们可以看到如下的图所示的页面:<br />\n<img data-src=\"2.png\" alt=\"\" /><br />\n 左侧为操作菜单，从上往下依次是:</p>\n<ul>\n<li>仪表盘 (Dashboard):<br />\n 在仪表盘页面能看到一些系统的基本信息，如启动时间，版本号，jvm 的配置，磁盘剩余空间</li>\n<li>Log 日志 (Logging):<br />\n 可以查看各级别的日志</li>\n<li>云集群管理 (Cloud)<br />\n 集群的管理界面，看到所有的节点状态，zookeeper 的状态。</li>\n<li>数据源管理 (Collections)<br />\n 数据源的管理界面</li>\n<li>配置项查看 (Java Properties)<br />\n 能看见 java 的所有配置项</li>\n<li>线程转储 (Thread dump)<br />\n 一个诊断 Java 应用问题的工具，Thread dumps 出来的信息包含线程；线程的运行状态、标识和调用的堆栈；调用的堆栈包含完整的类名，所执行的方法</li>\n<li>建议 (Suggestions)：<br />\n对于集群的一些建议</li>\n<li>选择数据源：<br />\n选择数据源后会出现分词，查询等操作</li>\n<li>选择核心<br />\n每个核心都是 solr 的一个实例，这里可以查看 solr 的核心</li>\n</ul>\n<h1 id=\"查询\"><a class=\"anchor\" href=\"#查询\">#</a> 查询</h1>\n<p>选择数据源后，会出现 query 操作选项<br />\n<img data-src=\"3.png\" alt=\"\" /><br />\n左侧为查询的参数，右侧为查询结果，下面将详细介绍参数的使用<br />\n<img data-src=\"4.png\" alt=\"\" /></p>\n<h2 id=\"基本查询\"><a class=\"anchor\" href=\"#基本查询\">#</a> 基本查询</h2>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>默认</th>\n<th>类型</th>\n<th>说明</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fl</td>\n<td>N/A</td>\n<td>string</td>\n<td>查询的字段，多个字段用逗号隔开</td>\n<td>查询 Id,name 字段:&amp;fl=id,name</td>\n</tr>\n<tr>\n<td>q</td>\n<td>N/A</td>\n<td>string</td>\n<td>Where 条件，高亮字段放这里</td>\n<td>1.AND: &amp;q=id:1 AND (name=2)&lt;br&gt;2.OR:&amp;q=id:1 OR name=2&lt;br&gt;3. 查询 id&gt;1 并且 id&lt;=3&amp;q=id:(1 TO 3]&lt;br&gt;4. 查 id in (1,2,3)&amp;q=(id:1 OR id:2 OR id:3)</td>\n</tr>\n<tr>\n<td>fq</td>\n<td>N/A</td>\n<td>string</td>\n<td>Where 条件，非高亮字段放这里</td>\n<td>参考 q</td>\n</tr>\n<tr>\n<td>sort</td>\n<td>N/A</td>\n<td>string</td>\n<td>排序字段</td>\n<td>&amp;sort=id desc</td>\n</tr>\n<tr>\n<td>start</td>\n<td>N/A</td>\n<td>int</td>\n<td>offset</td>\n<td>&amp;start=0</td>\n</tr>\n<tr>\n<td>rows</td>\n<td>N/A</td>\n<td>int</td>\n<td>limit</td>\n<td>&amp;rows=10</td>\n</tr>\n<tr>\n<td>indent</td>\n<td>False</td>\n<td>Boolean</td>\n<td>返回的结果是否缩进，默认关闭，用   indent=true</td>\n<td>on 开启，一般调试 json,php,phps,ruby 输出才有必要用这个参数。</td>\n<td>&amp;indent=false&lt;br&gt;&amp;Indent=true</td>\n</tr>\n<tr>\n<td>wt</td>\n<td>xml</td>\n<td>String</td>\n<td>指定查询输出结构格式，默认为 “xml”。在 solrconfig.xml 中定义了查询输出格式：xml、json、python、ruby、php、phps、custom。</td>\n<td>&amp;wt=xml&lt;br&gt;&amp;wt=json</td>\n</tr>\n<tr>\n<td>omitHeader</td>\n<td>False</td>\n<td>Boolean</td>\n<td>设置是否忽略查询结果返回头信息</td>\n<td>&amp;omitHeader=false&lt;br&gt;&amp;omitHeader=true</td>\n</tr>\n<tr>\n<td>debugQuery</td>\n<td>False</td>\n<td>Boolean</td>\n<td>设置返回结果是否显示 Debug 信息。</td>\n<td>&amp;debugQuery=true&lt;br&gt;&amp;debugQuery=false</td>\n</tr>\n<tr>\n<td>timeAllowed</td>\n<td>N/A</td>\n<td>int</td>\n<td>定义要处理的查询的时间。如果处理超时，只返回部分信息。单位毫秒</td>\n<td>&amp;timeAllowed=100</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"检索运算\"><a class=\"anchor\" href=\"#检索运算\">#</a> 检索运算</h3>\n<ul>\n<li>“:”  指定字段查指定值，如返回所有值 *😗</li>\n<li>“?”  表示单个任意字符的通配</li>\n<li>“<em>”  表示多个任意字符的通配（不能在检索的项开始使用</em>或者？符号）</li>\n<li>“~”  表示模糊检索，如检索拼写类似于”roam” 的项这样写：roam~ 将找到形如 foam 和 roams 的单词；roam~ 0.8，检索返回相似度在 0.8 以上的记录。</li>\n<li>AND、||  布尔操作符</li>\n<li>OR、&amp;&amp;  布尔操作符</li>\n<li>NOT、!、-（排除操作符不能单独与项使用构成查询）<br />\n-“+”  存在操作符，要求符号”+” 后的项必须在文档相应的域中存在 ²</li>\n<li>( )  用于构成子查询</li>\n<li>[]  包含范围检索，如检索某时间段记录，包含头尾，date:[201507 TO 201510]</li>\n<li 201507=\"\" TO=\"\" 201510=\"\">{}  不包含范围检索，如检索某时间段记录，不包含头尾 date:</li>\n</ul>\n<h2 id=\"统计查询\"><a class=\"anchor\" href=\"#统计查询\">#</a> 统计查询</h2>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>默认</th>\n<th>类型</th>\n<th>说明</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>stats</td>\n<td>False</td>\n<td>Boolean</td>\n<td>是否开启统计</td>\n<td>&amp;stats=true&lt;br&gt;&amp;stats=false</td>\n</tr>\n<tr>\n<td>stats.field</td>\n<td>N/A</td>\n<td>String</td>\n<td>需要统计的字段</td>\n<td>&amp;stats.field=id</td>\n</tr>\n<tr>\n<td>stats.facet</td>\n<td>N/A</td>\n<td>String</td>\n<td>返回统计的结果集 min: 最小值 &lt;br&gt;max: 最大值 &lt;br&gt;sum: 总和 &lt;br&gt;count: 记录数，也就是多少行记录 &lt;br&gt;missing: 结果集中，有多少条记录是空值 &lt;br&gt;sumOfSquares: 平方和（x1^2 + x2<sup>2+xn</sup>2） &lt;br&gt;mean: 平均数（x1+x2+xn）/n &lt;br&gt;stddev: 标准差</td>\n<td>&amp;stats.facet=idCount</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"例按id统计\"><a class=\"anchor\" href=\"#例按id统计\">#</a> 例：按 id 统计</h3>\n<p>参数:</p>\n<pre><code>&amp;stats=true\n&amp;stats.field=id\n&amp;rows=0\n&amp;indent=true\n</code></pre>\n<p>结果：<br />\n<img data-src=\"5.png\" alt=\"\" /></p>\n<h2 id=\"分组查询\"><a class=\"anchor\" href=\"#分组查询\">#</a> 分组查询</h2>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>默认</th>\n<th>类型</th>\n<th>说明</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Group</td>\n<td>False</td>\n<td>Boolean</td>\n<td>开启分组查询</td>\n<td>&amp;group=true&lt;br&gt;&amp;group=false</td>\n</tr>\n<tr>\n<td>group.field</td>\n<td>N/A</td>\n<td>String</td>\n<td>分组字段</td>\n<td>&amp;group.field=id</td>\n</tr>\n<tr>\n<td>group.func</td>\n<td>N/A</td>\n<td>String</td>\n<td>指定聚合函数，avg：求平均值 AVG (DISTINCT</td>\n<td>ALL</td>\n<td>N)&lt;br&gt;count：求总数 COUNT (DISTINCT</td>\n<td>ALL</td>\n<td>expr</td>\n<td>*)&lt;br&gt;max：最大值 MAX (DISTINCT</td>\n<td>ALL</td>\n<td>expr)&lt;br&gt;min：最小值 MIN (DISTINCT</td>\n<td>ALL</td>\n<td>expr)&lt;br&gt;stddev： 求标准方差 STDDEV (DISTINCT</td>\n<td>ALL</td>\n<td>n)&lt;br&gt;sum： 求和 SUM（DISTINCT</td>\n<td>ALL</td>\n<td>n）&lt;br&gt;variance： 方差 VARIANCE（DISTINCT</td>\n<td>ALL</td>\n<td>n）</td>\n<td>&amp;group.func=count</td>\n</tr>\n<tr>\n<td>group.query</td>\n<td>N/A</td>\n<td>String</td>\n<td>查询语句，查询分组后集合，用法和 q 与 fq 一样</td>\n<td>&amp;group.query=address_id:1000</td>\n</tr>\n<tr>\n<td>group.limit</td>\n<td>1</td>\n<td>Int</td>\n<td>每组返回多数条结果，默认 1</td>\n<td>&amp;group.limit=200</td>\n</tr>\n<tr>\n<td>group.offset</td>\n<td>0</td>\n<td>Int</td>\n<td>指定每组结果开始位置 / 偏移量</td>\n<td>&amp;group.offset=10</td>\n</tr>\n<tr>\n<td>group.sort</td>\n<td>N/A</td>\n<td>String</td>\n<td>分组结果排序字段</td>\n<td>&amp;group.sort=id</td>\n</tr>\n<tr>\n<td>group.format</td>\n<td>grouped</td>\n<td>String</td>\n<td>两值 grouped 与 simple. 设置为 simple 可以使得结果以单一列表形式返回</td>\n<td>&amp;group.format=simple&lt;br&gt;&amp;group.format=grouped</td>\n</tr>\n<tr>\n<td>group.main</td>\n<td>Fals</td>\n<td>Boolean</td>\n<td>group.main=true 返回每个分组的第一条记录信息（没有分组的详细信息）</td>\n<td>&amp;group.main=true&lt;br&gt;&amp;group.main=false</td>\n</tr>\n<tr>\n<td>group.ngroups</td>\n<td>False</td>\n<td>Boolean</td>\n<td>设为 true 时，Solr 将返回分组数量，默认 fasle</td>\n<td>&amp;group.ngroups=false&lt;br&gt;&amp;group.ngroups=true</td>\n</tr>\n<tr>\n<td>group.truncate</td>\n<td>False</td>\n<td>Boolean</td>\n<td>设为 true 时，facet 数量将基于 group 分组中匹相关性高的文档，默认 fasle</td>\n<td>&amp;group.truncate=true&lt;br&gt;&amp;group.truncate=false</td>\n</tr>\n<tr>\n<td>group.cache.percent</td>\n<td>0</td>\n<td>int</td>\n<td>取值 0-100，设为大于 0 时，表示缓存结果，默认为 0。该项对于布尔查询，通配符查询，模糊查询有改善，却会减慢普通词查询。</td>\n<td>&amp;group.cache.percent=0&lt;br&gt;&amp;group.cache.percent=100</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"例按id分组\"><a class=\"anchor\" href=\"#例按id分组\">#</a> 例：按 id 分组</h3>\n<p>参数：</p>\n<pre><code>&amp;group=true\n&amp;group.field=id\n&amp;group.truncate=true\n</code></pre>\n<p>结果：<br />\n<img data-src=\"6.png\" alt=\"\" /></p>\n<h2 id=\"多维统计\"><a class=\"anchor\" href=\"#多维统计\">#</a> 多维统计</h2>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>默认</th>\n<th>类型</th>\n<th>说明</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>facet</td>\n<td>False</td>\n<td>Boolean</td>\n<td>开启 facet, 相当于 group by 后再 count (*) 的集合</td>\n<td>&amp;facet=true，facet=false</td>\n</tr>\n<tr>\n<td>facet.field</td>\n<td>N/A</td>\n<td>String</td>\n<td>各自分组的字段并返回 count (*)</td>\n<td>&amp;facet.field=id,name</td>\n</tr>\n<tr>\n<td>facet.prefix</td>\n<td>N/A</td>\n<td>String</td>\n<td>表示 Facet 字段值的前缀</td>\n<td>对 cpu 字段进行 Facet 查询，返回的 cpu 都是以”Intel” 开头的，”AMD” 开头的 cpu 型号将不会被统计在内:  &amp;facet.field=cpu&amp;facet.prefix=Intel</td>\n</tr>\n<tr>\n<td>facet.sort</td>\n<td>N/A</td>\n<td>Boolean</td>\n<td>表示 Facet 字段值以哪种顺序返回.</td>\n<td>可接受的值为 true (count)</td>\n<td>false (index,lex). true (count) 表示按照 count 值从大到小排列. false (index,lex) 表示按照字段值的自然顺序 (字母，数字的顺序) 排列。默认情况下为 true (count). 当 facet.limit 值为负数时，默认 &amp; facet.sort= false (index,lex).</td>\n</tr>\n<tr>\n<td>facet.limit</td>\n<td>100</td>\n<td>int</td>\n<td>限制 Facet 字段返回的结果条数，默认值为 100. 如果此值为负数，表示不限制</td>\n<td>&amp;facet.limit=10</td>\n</tr>\n<tr>\n<td>facet.offset</td>\n<td>0</td>\n<td>int</td>\n<td>返回结果集的偏移量，默认为 0</td>\n<td>&amp;facet.offset=0</td>\n</tr>\n<tr>\n<td>facet.mincount</td>\n<td>0</td>\n<td>int</td>\n<td>限制了 Facet 字段值的最小 count</td>\n<td>&amp;facet.mincount=10</td>\n</tr>\n<tr>\n<td>facet.missing</td>\n<td>N/A</td>\n<td>Boolean</td>\n<td>统计字段值为 Null 数量</td>\n<td>&amp;facet.missing=on, &amp;facet.missing=true</td>\n</tr>\n<tr>\n<td>facet.method</td>\n<td>fc</td>\n<td>String</td>\n<td>enum 适用于字段值比较少的情况，比如字段类型为布尔型，或者字段表示中国的所有省份.Solr 会遍历该字段的所有取值，并从 filterCache 里为每个值分配一个 filter (这里要求 solrconfig.xml 里对 filterCache 的设置足够大). 然后计算每个 filter 与主查询的交集.fc (表示 Field Cache) 适用于字段取值比较多，但在每个文档里出现次数比较少的情况.Solr 会遍历所有的文档，在每个文档内搜索 Cache 内的值，如果找到就将 Cache 内该值的 count 加 1.</td>\n<td>&amp;facet.method=enum.&lt;br&gt;&amp;facet.method=fc</td>\n</tr>\n<tr>\n<td>facet.enum.cache.minDf</td>\n<td>0</td>\n<td>int</td>\n<td>当 facet.method=enum 时，此参数其作用，minDf 表示 minimum document frequency. 也就是文档内出现某个关键字的最少次数。该参数默认值为 0. 设置该参数可以减少 filterCache 的内存消耗，但会增加总的查询时间 (计算交集的时间增加了). 如果设置该值的话，官方文档建议优先尝试 25-50 内的值.</td>\n<td>&amp;facet.enum.cache.minDf=30</td>\n</tr>\n<tr>\n<td>facet.date</td>\n<td>N/A</td>\n<td>String</td>\n<td>该参数表示需要进行 Date Facet 的字段名，与 facet.field 一样，该参数可以被设置多次，表示对多个字段进行 Date Facet.</td>\n<td>&amp;facet.date=birthday</td>\n</tr>\n<tr>\n<td>facet.date.start</td>\n<td>N/A</td>\n<td>Date</td>\n<td>与 facet.date 一起使用，起始时间，时间的一般格式为 1995-12-31T23:59:59Z, 另外可以使用”NOW”,”YEAR”,”MONTH” 等等\t&amp;facet.date.start=2014-01-00T09:15:00Z</td>\n</tr>\n<tr>\n<td>facet.date.end</td>\n<td>N/A</td>\n<td>Date</td>\n<td>与 facet.date 一起使用，起始时间，时间的一般格式为 1995-12-31T23:59:59Z, 另外可以使用”NOW”,”YEAR”,”MONTH” 等等\t&amp;facet.date.end=2014-01-00T09:15:00Z</td>\n</tr>\n<tr>\n<td>facet.date.gap</td>\n<td>N/A</td>\n<td>String</td>\n<td>时间间隔，如果 start 为 2009-1-1,end 为 2010-1-1.gap 设置为”+1MONTH” 表示间隔 1 个月，那么将会把这段时间划分为 12 个间隔段。注意”+” 因为是特殊字符所以应该用”%2B” 代替.\t&amp;facet.date.gap=%2B1MONTH</td>\n</tr>\n<tr>\n<td>facet.date.other</td>\n<td>N/A</td>\n<td>String</td>\n<td>取值范围为 before</td>\n<td>after</td>\n<td>between</td>\n<td>none</td>\n<td>all, 默认为 none.&lt;br&gt;before 会对 start 之前的值做统计.&lt;br&gt;after 会对 end 之后的值做统计.&lt;br&gt;between 会对 start 至 end 之间所有值做统计。如果 hardend 为 true 的话，那么该值就是各个时间段统计值的和.&lt;br&gt;none 表示该项禁用.&lt;br&gt;all 表示 before,after,all 都会统计.</td>\n<td>&amp;facet.date.other=before,&lt;br&gt;&amp;facet.date.other=after,&lt;br&gt;&amp;facet.date.other=between,&lt;br&gt;&amp;facet.date.other=none,&lt;br&gt;&amp;facet.date.other=all</td>\n</tr>\n<tr>\n<td>facet.date.hardend</td>\n<td>N/A</td>\n<td>Boolean</td>\n<td>取值可以为 true</td>\n<td>false, 默认为 false. 它表示 gap 迭代到 end 处采用何种处理。举例说明 start 为 2009-1-1,end 为 2009-12-25,gap 为”+1MONTH”,hardend 为 false 的话最后一个时间段为 2009-12-1 至 2010-1-1;hardend 为 true 的话最后一个时间段为 2009-12-1 至 2009-12-25.</td>\n<td>&amp;facet.date.hardend=true&lt;br&gt;&amp;facet.date.hardend=false</td>\n</tr>\n<tr>\n<td>facet.pivot</td>\n<td>N/A</td>\n<td>String</td>\n<td>多维统计</td>\n<td>统计各个电影类别的各导演的电影数:&lt;br&gt;&amp;facet.pivot=category,author</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"例子1\"><a class=\"anchor\" href=\"#例子1\">#</a> 例子 1</h3>\n<p>查询 2014-01 到 2014-12 的 birthday，按每月分区<br />\n参数</p>\n<pre><code>&amp;facet.date=birthday\n&amp;facet.date.start=2014-01-00T09:15:00Z\n&amp;facet.date.end=2014-12-00T09:15:00Z\n&amp;facet.date.gap=%2B1MONTH\n</code></pre>\n<p>结果</p>\n<pre><code>&quot;facet_counts&quot;:&#123;\n    &quot;facet_queries&quot;:&#123;&#125;,\n    &quot;facet_fields&quot;:&#123;&#125;,\n    &quot;facet_dates&quot;:&#123;\n      &quot;birthday&quot;:&#123;\n        &quot;2013-12-31T09:15:00Z&quot;:0,\n        &quot;2014-01-31T09:15:00Z&quot;:0,\n        &quot;2014-02-28T09:15:00Z&quot;:0,\n        &quot;2014-03-28T09:15:00Z&quot;:0,\n        &quot;2014-04-28T09:15:00Z&quot;:0,\n        &quot;2014-05-28T09:15:00Z&quot;:0,\n        &quot;2014-06-28T09:15:00Z&quot;:0,\n        &quot;2014-07-28T09:15:00Z&quot;:0,\n        &quot;2014-08-28T09:15:00Z&quot;:0,\n        &quot;2014-09-28T09:15:00Z&quot;:1,\n        &quot;2014-10-28T09:15:00Z&quot;:5,\n        &quot;2014-11-28T09:15:00Z&quot;:3,\n        &quot;gap&quot;:&quot;+1MONTH&quot;,\n        &quot;start&quot;:&quot;2013-12-31T09:15:00Z&quot;,\n        &quot;end&quot;:&quot;2014-12-28T09:15:00Z&quot;&#125;&#125;,\n&quot;facet_ranges&quot;:&#123;&#125;&#125;&#125;\n</code></pre>\n<h3 id=\"例子2\"><a class=\"anchor\" href=\"#例子2\">#</a> 例子 2</h3>\n<p>按电影类别分类，再统计类别基础上各导演的电影数<br />\n参数：</p>\n<pre><code>&amp;facet =true\n&amp;facet.pivot=genre_str,directed_by_str\n</code></pre>\n<p>结果：<br />\n<img data-src=\"7.png\" alt=\"\" /></p>\n<h2 id=\"高亮\"><a class=\"anchor\" href=\"#高亮\">#</a> 高亮</h2>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>默认</th>\n<th>类型</th>\n<th>说明</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hl</td>\n<td>false</td>\n<td>Boolean</td>\n<td>是否开启高亮</td>\n<td>&amp;hl=true&lt;br&gt;&amp;hl=false</td>\n</tr>\n<tr>\n<td>hl.fl</td>\n<td>N/A</td>\n<td>String</td>\n<td>设定高亮显示的字段，用空格或逗号隔开的字段列表。要启用某个字段的 highlight 功能，就得保证该字段在 schema 中是 stored。如果该参数未被给出，那么就会高亮默认字段 standard handler 会用 df 参数，dismax 字段用 qf 参数。你可以使用星号去方便的高亮所有字段。如果你使用了通配符，那么要考虑启用 hl.requiredFieldMatch 选</td>\n<td>&amp;hl.fl=id</td>\n</tr>\n<tr>\n<td>hl.requireFieldMatch</td>\n<td>False</td>\n<td>Boolean</td>\n<td>如果置为 true，除非用 hl.fl 指定了该字段，查询结果才会被高亮</td>\n<td>&amp;hl.requireFieldMatch=ture&lt;br&gt;&amp;hl.requireFieldMatch=false</td>\n</tr>\n<tr>\n<td>hl.usePhraseHighlighter</td>\n<td>False</td>\n<td>Boolean</td>\n<td>如果一个查询中含有短语（引号框起来的）那么会保证一定要完全匹配短语的才会被高亮</td>\n<td>&amp;hl.usePhraseHighlighter=true&lt;br&gt;&amp;hl.usePhraseHighlighter=false</td>\n</tr>\n<tr>\n<td>hl.highlightMultiTerm</td>\n<td>False</td>\n<td>Boolean</td>\n<td>如果使用通配符和模糊搜索，那么会确保与通配符匹配的 term 会高亮。默认为 false，同时 hl.usePhraseHighlighter 要为 true</td>\n<td>&amp;hl.highlightMultiTerm=true&lt;br&gt;&amp;hl.highlightMultiTerm==false</td>\n</tr>\n<tr>\n<td>hl.fragsize</td>\n<td>100</td>\n<td>Int</td>\n<td>返回的最大字符数。默认是 100. 如果为 0，那么该字段不会被 fragmented 且整个字段的值会被返回</td>\n<td>&amp;hl.fragsize=0&lt;br&gt;&amp;hl.fragsize=100</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"修改与删除\"><a class=\"anchor\" href=\"#修改与删除\">#</a> 修改与删除</h1>\n<p>可以通过 api 或者 web 界面操作：</p>\n<ul>\n<li>\n<p>api<br />\nApi：<span class=\"exturl\" data-url=\"aHR0cDovL2hkcC1lLTEuZGF0YS5kYy56amZ0LmNvbTo4ODg2L3NvbHIvcmFuZ2VyX2F1ZGl0cy91cGRhdGU=\">http://hdp-e-1.data.dc.zjft.com:8886/solr/ranger_audits/update</span><br />\nMethod:post<br />\nRequest-Handler (qt): 只能是 /update<br />\nDocument Type：文档类型<br />\n Document: 文档<br />\n Overwrite: 为 true, 说明如果 id 重复则覆盖以前的值；为 false 说明如果 id 重复不覆盖以前的</p>\n</li>\n<li>\n<p>界面操作<br />\n选择数据源后，会出现 documents 操作选项<br />\n<img data-src=\"8.png\" alt=\"\" /><br />\n<img data-src=\"9.png\" alt=\"\" /></p>\n</li>\n</ul>\n<h2 id=\"修改新增文档\"><a class=\"anchor\" href=\"#修改新增文档\">#</a> 修改 (新增) 文档</h2>\n<p><img data-src=\"10.png\" alt=\"\" /></p>\n<h2 id=\"删除文档\"><a class=\"anchor\" href=\"#删除文档\">#</a> 删除文档</h2>\n<p><img data-src=\"11.png\" alt=\"\" /></p>\n<pre><code>Document:\n&lt;delete&gt;\n&lt;query&gt;id:2&lt;/query&gt;\n&lt;/delete&gt;\n&lt;commit/&gt;\n</code></pre>\n<p>不能少，表示提交</p>\n<pre><code>&lt;commit/&gt;\n</code></pre>\n<h1 id=\"配置solr字段类型\"><a class=\"anchor\" href=\"#配置solr字段类型\">#</a> 配置 solr 字段类型</h1>\n<div class=\"note info\">\n<p>solr 在摄取数据前应该配置好字段类型，修改后仅对新数据生效，旧数据不会生效，再创建集合后就应该马上配置好</p>\n</div>\n<ol>\n<li>选 colletion 的 schema<br />\n<img data-src=\"12.png\" alt=\"\" /></li>\n<li>点击 AddFile</li>\n</ol>\n<ul>\n<li>AddFile：添加字段</li>\n<li>Add Dynamic Filed：添加通配字段，即可以使用通配符来指定字段 (如 patient_* 那么以 patient_开头的字段都会使用这个配置)</li>\n<li>Add copy filed ：添加重复数据字段</li>\n</ul>\n<ol start=\"3\">\n<li>以通配字段为例，以 map_patient_case. 开头的字段，都匹配成 string 类型，并且可以排序与索引<br />\n<img data-src=\"13.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"集成hbase\"><a class=\"anchor\" href=\"#集成hbase\">#</a> 集成 HBase</h1>\n<p>solr 配合 Hbase-indexer，通过 xml 文件指定需要索引的表与字段，当数据进入 hbase 的相应的表后，数据就会被索引到 Solr 搜索引擎。建立 Hbase 与 Solr 索引之前需要设计好字段的类型并且在 Solr 上配置好</p>\n<h2 id=\"安装hbase-indexer\"><a class=\"anchor\" href=\"#安装hbase-indexer\">#</a> 安装 Hbase-indexer</h2>\n<div class=\"note info\">\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05HREFUQS9oYmFzZS1pbmRleGVyL3dpa2kvSW5zdGFsbGF0aW9u\">HBase Indexer</span> 项目为存储在 HBase 中的内容提供索引（通过 Solr）。它提供了一种定义索引规则的灵活且可扩展的方式，并且可以按比例缩放。索引是异步执行的，因此不会影响 HBase 上的写吞吐量。SolrCloud 用于存储实际索引，以确保索引的可伸缩性。</p>\n</div>\n<ol>\n<li>\n<p>获取 HBase 索引器<br />\n签出代码并构建 tar.gz 发行版</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone git://github.com/NGDATA/hbase-indexer.git</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mvn clean package -Pdist -DskipTests</pre></td></tr></table></figure></li>\n<li>\n<p>接下来，解压缩 tar.gz 发行版（在下面的示例中，将其解压缩到 $ HOME 目录下）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> zxvf hbase-indexer-dist/target/hbase-indexer-1.0-SNAPSHOT.tar.gz -C ~</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~/hbase-indexer-1.0-SNAPSHOT</pre></td></tr></table></figure></li>\n<li>\n<p>配置 HBase 索引器<br />\n在 hbase-indexer 目录中，编辑文件 conf/hbase-indexer-site.xml 并配置 ZooKeeper 连接字符串（两次，一次用于 hbase-indexer，一次用于 hbase，或者您也可以将其复制 hbase-site.xml 到 conf 目录）。</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>hbaseindexer.zookeeper.connectstring<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>zookeeperhost<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>hbase.zookeeper.quorum<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>zookeeperhost<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>如果尚未全局定义 JAVA_HOME，并且 bin /hbase-indexer 脚本会抱怨找不到 Java，则可以在脚本中设置 JAVA_HOME conf/hbase-indexer-env.sh</p>\n</li>\n<li>\n<p>配置 HBase<br />\n 为了使用 HBase 索引器，必须在 HBase 中启用复制。还可以设置许多其他 HBase 设置来优化 HBase 索引器的工作。</p>\n<p>将以下设置添加到所有 HBase 区域服务器上的 hbase-site.xml 配置中，然后重新启动 HBase</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">&lt;!-- SEP is basically replication, so enable it --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>hbase.replication<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">&lt;!-- Source ratio of 100% makes sure that each SEP consumer is actually</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       used (otherwise, some can sit idle, especially with small clusters) --></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>replication.source.ratio<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>1.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">&lt;!-- Maximum number of hlog entries to replicate in one go. If this is</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       large, and a consumer takes a while to process the events, the</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       HBase rpc call will time out. --></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>replication.source.nb.capacity<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>1000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">&lt;!-- A custom replication source that fixes a few things and adds</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>       some functionality (doesn't interfere with normal replication</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>       usage). --></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>replication.replicationsource.implementation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>com.ngdata.sep.impl.SepReplicationSource<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>将索引器 jar 添加到 HBase<br />\nHBase 索引器包含两个必须在 HBase 的类路径中的 jar 文件。将它们从解压缩的 hbase-indexer 安装的 lib 目录复制到每个区域服务器的 HBase 的 lib 目录中。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cp</span> lib/hbase-sep-* <span class=\"token variable\">$HBASE_HOME</span>/lib</pre></td></tr></table></figure></li>\n<li>\n<p>测试 habse-indexer<br />\n 进入 habase-indexer 目录，进入 bin 目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>~/hbase-indexer-1.0-SNAPSHOT</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./bin/hbase-indexer list-indexers</pre></td></tr></table></figure><p>上面命令将输出目前索引集合</p>\n</li>\n</ol>\n<h2 id=\"solr索引hbase数据\"><a class=\"anchor\" href=\"#solr索引hbase数据\">#</a> solr 索引 Hbase 数据</h2>\n<ol>\n<li>\n<p>habse 需要打开备份<br />\n进入 hbase 命令模式后，输入下面代码，table 换成需要索引的表名</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">disable</span> <span class=\"token string\">'table'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token string\">'table'</span><span class=\"token punctuation\">,</span> &#123;NAME<span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'colFam'</span><span class=\"token punctuation\">,</span> REPLICATION_SCOPE <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'1'</span>&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">enable</span> <span class=\"token string\">'table'</span></pre></td></tr></table></figure></li>\n<li>\n<p>solr instance 设置 auto commit（已经设置，无需重复设置）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /usr/lib/ambari-infra-\tsolr/server/solr/configsets/_default/conf/solrconfig.xml</pre></td></tr></table></figure><p>修改成下面内容</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>autoCommit</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maxTime</span><span class=\"token punctuation\">></span></span>$&#123;solr.autoCommit.maxTime:15000&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maxTime</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>openSearcher</span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>openSearcher</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>autoCommit</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">&lt;!--</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  &lt;autoSoftCommit></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    &lt;maxTime>$&#123;solr.autoSoftCommit.maxTime:-1&#125;&lt;/maxTime></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  &lt;/autoSoftCommit></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  --></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>autoSoftCommit</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maxTime</span><span class=\"token punctuation\">></span></span>1000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maxTime</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>autoSoftCommit</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>改了配置后重启 solrinstance, 然后需要删除 collection，重新创建才有效！！！</p>\n</li>\n<li>\n<p>solr 创建集合<br />\n下面语句创建了一个 collertion1 的集合</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> -u infra-solr /usr/lib/ambari-infra-solr/bin/solr create_collection -c collection1 -shards <span class=\"token number\">1</span> -replicationFactor <span class=\"token number\">1</span></pre></td></tr></table></figure></li>\n<li>\n<p>启动 habse-index (已经启动可跳过)<br />\n 进入 hbase-indexer 目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nohup</span> bin/hbase-indexer server <span class=\"token operator\">>></span>/var/log/hbase-indexer.log <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure></li>\n<li>\n<p>编写 indexer 的 schema</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>name 为 solr 字段名</p>\n</li>\n<li>\n<p>value 为 hbase 字段名，支持通配符</p>\n</li>\n<li>\n<p>type 为字段类型<br />\n非宽表例子 hkpmi_patient_data.xml</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>indexer</span> <span class=\"token attr-name\">table</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hkpmi_all_wide<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>patient_id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f1:patient_data.patient_id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>process_dtm<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f1:patient_data.process_dtm<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>patient_name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f1:patient_data.patient_name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>indexer</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>宽表例子 hkpmi_patient_nok_wide.xml</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>indexer</span> <span class=\"token attr-name\">table</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hkpmi_all_wide<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token attr-name\">mapping-type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>column<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token attr-name\">unique-key-formatter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.ngdata.hbaseindexer.uniquekey.StringUniqueKeyFormatter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>patient_id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f1:patient_nok.patient_id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>p1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f1:patient_nok.p1_*<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>p2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f1:patient_nok.p2_*<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>process_dtm<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f1:patient_nok.process_dtm_*<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>indexer</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>一个 hbase table 可以建多个 indexer，每个 indexer 就是合并前的表<br />\n indexer 的 id 需要指定为该表的主键，如果没有主键，需要造一个出来，否则无法更新或删除。</p>\n</li>\n</ul>\n<ol start=\"6\">\n<li>添加索引<br />\n根据 schema 创建 indexer<br />\n$ZK_HOST 为 zookeeper 集群的 ip<br />\n$ROOT_DIR 为 habase 目录路径<br />\n运行下面脚本创建一个宽表与一个非宽表<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ROOT_DIR</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;ROOT_DIR<span class=\"token operator\">:-</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>hdp<span class=\"token operator\">/</span>3.1.0.0-78&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$ROOT_DIR</span>/hbase-indexer</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">source</span> /etc/ambari-infra-solr/conf/infra-solr-env.sh</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">ZOO_LIST</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">sed</span> -n <span class=\"token string\">\"/hbase.zookeeper.quorum/,+1&#123;s/.*&lt;value>\\(.*\\)&lt;\\/value>/<span class=\"token entity\" title=\"\\1\">\\1</span>/p&#125;\"</span> $ROOT_DIR/hbase/conf/hbase-site.xml <span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token assign-left variable\">ZK_HOST</span><span class=\"token operator\">=</span><span class=\"token variable\">$ZK_HOST</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#|  ZK_HOST=hdp-e-1.data.dc.zjft.com:2181,hdp-m-1.data.dc.zjft.com:2181,hdp-m-2.data.dc.zjft.com:2181/infra-solr</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token assign-left variable\">ZOO_LIST</span><span class=\"token operator\">=</span><span class=\"token variable\">$ZOO_LIST</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#|  ZOO_LIST=hdp-m-1.data.dc.zjft.com,hdp-m-2.data.dc.zjft.com,hdp-e-1.data.dc.zjft.com</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#创建 indexer</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>./bin/hbase-indexer add-indexer -n hkpmi_patient_data -c <span class=\"token variable\">$ROOT_DIR</span>/hbase-indexer/demo/hkpmi_patient_data.xml   -cp solr.zk<span class=\"token operator\">=</span><span class=\"token variable\">$ZK_HOST</span> -cp solr.collection<span class=\"token operator\">=</span>collection1 -z <span class=\"token variable\">$ZOO_LIST</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>./bin/hbase-indexer add-indexer -n hkpmi_patient_nok_wide -c <span class=\"token variable\">$ROOT_DIR</span>/hbase-indexer/demo/hkpmi_patient_nok_wide.xml   -cp solr.zk<span class=\"token operator\">=</span><span class=\"token variable\">$ZK_HOST</span> -cp solr.collection<span class=\"token operator\">=</span>collection1 -z <span class=\"token variable\">$ZOO_LIST</span></pre></td></tr></table></figure></li>\n</ol>\n<p>参数解析：</p>\n<ul>\n<li>n：索引名</li>\n<li>c：schema 文件路径</li>\n<li>cp：额外参数，后面带参数名与参数值</li>\n<li>solr.zk：zookeeper 集群 ip 地址，逗号分隔</li>\n<li>solr.collection：指定同步到哪个 solr 集合</li>\n</ul>\n<ol start=\"7\">\n<li>删除索引<br />\n $ROOT_DIR 为 habse-indexer 目录<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> -u hbase <span class=\"token variable\">$ROOT_DIR</span>/hbase-indexer/bin/hbase-indexer delete-indexer -n hkpmi_patient_data</pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "大数据",
                "hbase",
                "solr"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/IT%E8%BF%90%E7%BB%B4/Tomcat-%E9%85%8D%E7%BD%AESSL/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/IT%E8%BF%90%E7%BB%B4/Tomcat-%E9%85%8D%E7%BD%AESSL/",
            "title": "Tomcat-配置SSL",
            "date_published": "2020-04-11T07:01:00.000Z",
            "content_html": "<h1 id=\"操作系统\"><a class=\"anchor\" href=\"#操作系统\">#</a> 操作系统</h1>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> Linux</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> Mac OS</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\"> Windows</label></li>\n</ul>\n<h1 id=\"软件依赖\"><a class=\"anchor\" href=\"#软件依赖\">#</a> 软件依赖</h1>\n<p><span class=\"label info\">^ Lastest</span> <span class=\"label info\">~ minimum</span></p>\n<ul>\n<li>Jdk1.8~</li>\n<li>Tomcat7</li>\n</ul>\n<h1 id=\"实验环境\"><a class=\"anchor\" href=\"#实验环境\">#</a> 实验环境</h1>\n<ul>\n<li>Windows10</li>\n<li>Jdk-1.8</li>\n<li>Tomcat7</li>\n<li>服务器 Server：4x core, 8GB RAM, 50GB HDD, Win2017 server OS</li>\n<li>客户端 Server：4x core, 8GB RAM, 50GB HDD, Win2017 server OS</li>\n</ul>\n<h1 id=\"ssl与https\"><a class=\"anchor\" href=\"#ssl与https\">#</a> SSL 与 HTTPS</h1>\n<h2 id=\"ssl\"><a class=\"anchor\" href=\"#ssl\">#</a> SSL</h2>\n<p>SSL 由 Netscape 公司于 1994 年创建，它旨在通过 Web 创建安全的 Internet 通信。它是一种标准协议，用于加密浏览器和服务器之间的通信。它允许通过 Internet 安全轻松地传输账号密码、银行卡、手机号等私密信息。SSL 证书就是遵守 SSL 协议，由受信任的 CA 机构颁发的数字证书。使用 SSL 证书有许多好处：</p>\n<ol>\n<li>保障服务器和浏览器之间的通信安全</li>\n<li>验证网站的真实身份，区别于钓鱼欺诈网站</li>\n<li>加密用户的敏感信息以确保安全</li>\n<li>提高 SEO 搜索引擎排名</li>\n<li>提升用户对网站的信任</li>\n<li>有助于提高网站的在线销售业绩</li>\n</ol>\n<h2 id=\"https安全超文本传输协议\"><a class=\"anchor\" href=\"#https安全超文本传输协议\">#</a> HTTPS（安全超文本传输协议）</h2>\n<p>HTTPS 是 HTTP 的安全版本，它可以通过 SSL / TLS 连接保护在线传输的任何通信。简而言之，HTTPS=HTTP+SSL。如果想要建立 HTTPS 连接，则首先必须从受信任的证书颁发机构（CA）Gworg 机构注册 SSL 证书。安装 SSL 证书后，网站地址栏 HTTP 后面就会多一个 “S”，还有绿色安全锁标志。网站使用 HTTPS 的原因有很多：</p>\n<ol>\n<li>HTTPS 有助于在服务器和浏览器之间建立安全通信</li>\n<li>它可以保护网站免受篡改或窃听</li>\n<li>它可以保护用户免受中间人攻击</li>\n<li>各大主流浏览器纷纷要求网站从 HTTP 升级 HTTPS 访问</li>\n<li>它广泛地被银行、医疗、电子商务、社交媒体和政府等行业使用</li>\n</ol>\n<h1 id=\"单向验证与双向验证\"><a class=\"anchor\" href=\"#单向验证与双向验证\">#</a> 单向验证与双向验证</h1>\n<ul>\n<li>单向认证只要求站点部署了 ssl 证书就行，任何用户都可以去访问（IP 被限制除外等），只是服务端提供了身份认证。而双向认证则是需要是服务端需要客户端提供身份认证，只能是服务端允许的客户能去访问，安全性相对于要高一些</li>\n<li>双向认证 SSL 协议要求服务器和客户端双方都有证书，单向认证 SSL 协议不需要客户端拥有 CA 证书，以及在协商对称密码方案，对称通话密钥时，服务器发送给客户端的是没有加过密的（这并不影响 SSL 过程的安全性）密码方案</li>\n<li>如果有第三方攻击，获得的只是加密的数据，第三方要获得有用的信息，就需要对加密的数据进行解密，这时候的安全就依赖于密码方案的安全。而幸运的是，目前所用的密码方案，只要通讯密钥长度足够的长，就足够的安全。这也是我们强调要求使用 128 位加密通讯的原因。</li>\n<li>一般 Web 应用都是采用单向认证的，原因很简单，用户数目广泛，且无需做在通讯层做用户身份验证，一般都在应用逻辑层来保证用户的合法登入。但如果是企业应用对接，情况就不一样，可能会要求对客户端（相对而言）做身份验证。这时就需要做双向认证。</li>\n</ul>\n<h2 id=\"单向验证流程\"><a class=\"anchor\" href=\"#单向验证流程\">#</a> 单向验证流程</h2>\n<ol>\n<li>服务器创建密钥库，里面保存着自己的证书</li>\n<li>服务器开启 SSL，并使用自己的证书</li>\n</ol>\n<p>PS: 如果证书不是权威机构签发的，客户在访问服务器的时候，浏览器会显示红色，这时候要么服务器换成权威证书，要么客户端手动导入证书</p>\n<h2 id=\"双向验证流程\"><a class=\"anchor\" href=\"#双向验证流程\">#</a> 双向验证流程</h2>\n<ol>\n<li>服务器创建密钥库，里面保存着自己的证书密钥和实体名，后缀为 jks 或者 keystore</li>\n<li>客户端创建密钥，然后导出 cer 格式证书发给服务器</li>\n<li>服务器创建信任密钥库，把客户端的证书密钥加入到信任密钥库</li>\n<li>服务器开启 SSL，配置自己的证书与信任的密钥库</li>\n<li>客户端将密钥导入浏览器，即可访问服务器</li>\n</ol>\n<h1 id=\"证书\"><a class=\"anchor\" href=\"#证书\">#</a> 证书</h1>\n<p>SSL 证书主要的作用就是传输信息加密和网站标识，在用户与服务器之间提供有效的身份验证方案，可以有效地保障用户的隐私信息在传输的过程不被泄露。证书可分为普通证书与 CA 证书</p>\n<ul>\n<li>普通证书：私人签发的证书，没有任何认证，当网站使用普通证书时，浏览器会弹出红色警告</li>\n<li>CA 证书：权威机构颁发的可靠证书</li>\n</ul>\n<h2 id=\"普通证书\"><a class=\"anchor\" href=\"#普通证书\">#</a> 普通证书</h2>\n<p>想要生成普通证书，一般借助 java 自带的 keytool 工具<br />\n Keytool 将密钥（key）和证书（certificates）存在一个称为 keystore 的文件中。在 keystore 里，包含两种数据： 密钥实体（Key entity）—— 密钥（secret key）又或者是私钥和配对公钥（采用非对称加密）可信任的证书实体（trusted certificate entries）—— 只包含公钥<br />\n keytool 文件类型：</p>\n<ul>\n<li>Keystore: 密钥库，包括实体与证书密钥，是给服务器使用的，标准的歌声为 jks.</li>\n<li>P12: 证书的密钥，是给浏览器使用的。建立连接时，浏览器根据名字查找你拥有的密钥，然后发给服务器</li>\n<li>Cer: 用来认证某个 IP 或者域名的证书。当你访问的域名没有证书或证书没有被认证的时候，浏览器会显示红色，反之显示绿色</li>\n</ul>\n<p><img data-src=\"1.png\" alt=\"image\" /><br />\n<img data-src=\"2.png\" alt=\"image\" /></p>\n<h2 id=\"ca证书\"><a class=\"anchor\" href=\"#ca证书\">#</a> CA 证书</h2>\n<p>据 SSL 的安全强度，网站 SSL 证书的分类有以下三种</p>\n<ul>\n<li>域名型证书 DV SSL：域名型证书无须进行繁杂的书面审查程序，仅需进行域名有效性验证，申请流程便捷，证书签发快速，仅需短短几分钟，即可部署于所有主流浏览器及移动设备之上。在网络黑客、钓鱼威胁层出不穷，域名型 SSL 数字证书可有效保护通过互联网所发送的数据，为网络账户登录、邮件等机密信息资讯提供安全防护。</li>\n<li>企业型证书 OV SSL：网络市场中有数以万计的网站，而其真实性、可靠性与否，则形成了网友浏览该网站的主要疑虑。企业型证书针对网站域名及所有权进行严格书面审查，通过审核之后，于证书上标示企业资料，让访问用户可以直接了解企业身份并强化信任感，为后续其他基于互联网的服务内容提供妥善保护。</li>\n<li>增强型证书 EV SSL：增强型证书是最高级别的 SSL 证书，意味着网站为用户提供最佳信赖的浏览环境，并有助于将陌生访客转化为精准销售客户。EVSSL 的最大特点便是激活网站在浏览器的标签栏使其变绿，利用鲜明的标示告诉用户：这个网站正受到最严密的信息安全防护，同时通过证书标示增强机构信赖及网站真实合法认定。</li>\n</ul>\n<p>此外，为了确保子域名的信息安全，又出现了通配符型的证书 Wildcard SSL（一张 SSL 证书通常是颁发给完全限定的域名，但是随着网络营销日益蓬勃，许多企业开始利用子域名的操作方式运作各式营销活动）以同时保护一个域名下的所有子域名网站，大幅节省了时间和管理成本，强化了网站信息安全管理效率。</p>\n<h1 id=\"tomcat服务器ssl单向认证\"><a class=\"anchor\" href=\"#tomcat服务器ssl单向认证\">#</a> Tomcat 服务器 SSL 单向认证</h1>\n<ol>\n<li>\n<p>生成服务器证书<br />\n按  <span class=\"kbd\">Ctrl</span> + <span class=\"kbd red\">R</span> , 打开运行窗口，输入 cmd, 回车<br />\n输入以下命令:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -genkey -v -alias server -keyalg RSA -keystore c:<span class=\"token punctuation\">\\</span>ssl<span class=\"token punctuation\">\\</span>server.keystore -validity <span class=\"token number\">36500</span></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>alias: 自定义证书名</li>\n<li>keyalg: 加密算法</li>\n<li>keystore: 证书保存的文件名，确保路径存在，否则报错</li>\n<li>validity: 证书有效期，36500 表示 100 年，默认值是 90 天<br />\n<img data-src=\"3.png\" alt=\"image\" /></li>\n</ul>\n<ol start=\"2\">\n<li>修改 tomcat 配置文件<br />\n修改 Tomcat 配置文件：tomcat\\conf\\server.xml<br />\n 在下面添加如下语句：<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>#找到这行</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Service</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Catalina<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Connector</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token attr-name\">port</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>8443<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token attr-name\">protocol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.apache.coyote.http11.Http11Nio2Protocol<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token attr-name\">SSLEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token attr-name\">maxThreads</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token attr-name\">scheme</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token attr-name\">secure</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token attr-name\">clientAuth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token attr-name\">sslProtocol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TLSv1.2<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token attr-name\">keystoreFile</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c:\\\\ssl\\server.keystore<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token attr-name\">keystorePass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123456<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>Port: 端口，本例使用了 8443，默认是 443</li>\n<li>Protocol: 网络协议，这里用了 http1.2</li>\n<li>SSLEnabled: 是否启用 SSL</li>\n<li>maxThreads: 最大连接数</li>\n<li>clientAuth: false 为单向验证，true 为双向验证</li>\n<li>sslProtocol: SSL 协议，这里用的是 TLS1.2</li>\n<li>keystoreFile: 证书文件</li>\n<li>keystorePass: 证书密码</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p>验证 SSL<br />\n 配置完成后，我们启动或者重启 Tomcat，浏览器输入 https://10.34.50.140:8443/。出现如下界面表示 Tomcat SSL 已经启用，点击红色区域。<br />\n<img data-src=\"4.png\" alt=\"image\" /><br />\n<img data-src=\"5.png\" alt=\"image\" /><br />\n 因为证书是自签的，所以未经认证，浏览器呈现红色<br />\n<img data-src=\"6.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>让客户端信任服务器证书<br />\n按  <span class=\"kbd\">Ctrl</span> + <span class=\"kbd red\">R</span>, 打开运行窗口，输入 cmd, 回车</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -keystore c:<span class=\"token punctuation\">\\</span>ssl<span class=\"token punctuation\">\\</span>server.keystore -export -alias server -file c:<span class=\"token punctuation\">\\</span>ssl<span class=\"token punctuation\">\\</span>server.cer</pre></td></tr></table></figure><p>这个命令将会在 c:\\ssl\\ 目录导出一个 server.cer 的文件，这个就是证书文件<br />\n<img data-src=\"7.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>双击 server.cer</p>\n</li>\n<li>\n<p>点击安装证书<br />\n<img data-src=\"8.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>下一步<br />\n<img data-src=\"9.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>选择根 CA 证书<br />\n<img data-src=\"10.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p><img data-src=\"11.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>完成<br />\n<img data-src=\"12.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>关掉浏览器，再次打开浏览器访问网址<br />\n红色已经消失，并换成了锁，至此单向验证全部配置完成<br />\n<img data-src=\"13.png\" alt=\"image\" /></p>\n</li>\n</ol>\n<h1 id=\"tomcat服务器ssl双向认证\"><a class=\"anchor\" href=\"#tomcat服务器ssl双向认证\">#</a> Tomcat 服务器 SSL 双向认证</h1>\n<h2 id=\"生成服务器证书\"><a class=\"anchor\" href=\"#生成服务器证书\">#</a> 生成服务器证书</h2>\n<pre><code>在++服务器++命令窗口输入下面命令\n\n```bash\n\tkeytool -genkey -v -alias pbaserver -keyalg RSA -keystore c:\\ssl\\pbaserver.keystore -validity 36500\n```\n</code></pre>\n<ul>\n<li>\n<p>alias: 自定义证书名</p>\n</li>\n<li>\n<p>keyalg: 加密算法</p>\n</li>\n<li>\n<p>keystore: 证书保存的文件名，确保路径存在，否则报错</p>\n</li>\n<li>\n<p>validity: 证书有效期，36500 表示 100 年，默认值是 90 天</p>\n<p><img data-src=\"14.png\" alt=\"image\" /><br />\n 生成了一个密钥库文件<br />\n<img data-src=\"15.png\" alt=\"image\" /></p>\n</li>\n</ul>\n<h2 id=\"在客户端上生成证书\"><a class=\"anchor\" href=\"#在客户端上生成证书\">#</a> 在客户端上生成证书</h2>\n<pre><code>在++客户端++上运行下面命令\n\n```bash\nkeytool -genkey -v -alias client -keyalg RSA -storetype PKCS12 -keystore c:\\ssl\\client.p12\n```\n</code></pre>\n<ul>\n<li>\n<p>alias: 证书名</p>\n</li>\n<li>\n<p>keyalg: 加密算法</p>\n</li>\n<li>\n<p>storetype: 为浏览器生成证书，以便让服务器来验证它。为了能将证书顺利导入至 IE 和 Firefox，证书格式应该是 PKCS12</p>\n</li>\n<li>\n<p>keystore: 证书存储的位置</p>\n<p><img data-src=\"16.png\" alt=\"image\" /></p>\n</li>\n</ul>\n<h2 id=\"导出客户端证书\"><a class=\"anchor\" href=\"#导出客户端证书\">#</a> 导出客户端证书</h2>\n<pre><code>在++客户端++上运行下面命令\n\n由于不能直接将PKCS12格式的证书库导入，必须先把客户端证书导出为一个单独的CER文件\n在命令行执行下面命令:\n\n```bash\nkeytool -export -alias client -keystore c:\\ssl\\client.p12 -storetype PKCS12 -storepass 123456 -rfc -file c:\\ssl\\client.cer\n```\n</code></pre>\n<ul>\n<li>\n<p>export: 导出命令</p>\n</li>\n<li>\n<p>keystore: 密钥库文件</p>\n</li>\n<li>\n<p>storetype: 导出格式</p>\n</li>\n<li>\n<p>storepass: 密钥密码</p>\n</li>\n<li>\n<p>file: 导出的证书文件名</p>\n<p>最终得到两个文件，然后将 client.cer 的文件发给服务器<br />\n<img data-src=\"17.png\" alt=\"image\" /></p>\n</li>\n</ul>\n<h2 id=\"创建服务器信任密钥\"><a class=\"anchor\" href=\"#创建服务器信任密钥\">#</a> 创建服务器信任密钥</h2>\n<p>在<ins>服务器</ins>命令窗口输入下面命令</p>\n<p>服务器需要创建一个信任的密钥库，里面存放着服务器信任的客户端证书。拿到客户端证书后，需要将该证书导入到该密钥库。<br />\n首先先新建一个信任密钥库 trustkeystore.keystore，在命令行执行下面命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -import -v -file c:<span class=\"token punctuation\">\\</span>ssl<span class=\"token punctuation\">\\</span>client.cer -keystore c:<span class=\"token punctuation\">\\</span>ssl<span class=\"token punctuation\">\\</span>trustkeystore.keystore</pre></td></tr></table></figure><ul>\n<li>import: 导入命令</li>\n<li>file: 导入的证书文件</li>\n<li>keystore: 被导入的密钥库文件<br />\n<img data-src=\"18.png\" alt=\"image\" /></li>\n</ul>\n<p>然后查看一下服务器密钥库，输入以下命令:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -list -keystore c:<span class=\"token punctuation\">\\</span>ssl<span class=\"token punctuation\">\\</span>trustkeystore.keystore</pre></td></tr></table></figure><ul>\n<li>list: 列表命令</li>\n<li>keystore: 密钥库文件</li>\n</ul>\n<p><img data-src=\"19.png\" alt=\"image\" /><br />\n 可以看见有一个被信任的客户端证书:trustedCertEntry</p>\n<h2 id=\"客户端信任服务器证书\"><a class=\"anchor\" href=\"#客户端信任服务器证书\">#</a> 客户端信任服务器证书</h2>\n<p>在<ins>客户端</ins>上运行下面命令</p>\n<p>现在服务器是已经信任了客户端的了，但是由于是双向认证的，客户端也需要认证服务器的证书。因此需要导出服务器的证书给客户端<br />\n输入以下命令:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -keystore c:<span class=\"token punctuation\">\\</span>ssl<span class=\"token punctuation\">\\</span>pbaserver.keystore -export -alias pbaserver -file c:<span class=\"token punctuation\">\\</span>ssl<span class=\"token punctuation\">\\</span>pbaserver.cer</pre></td></tr></table></figure><ul>\n<li>keystore: 密钥库文件</li>\n<li>export：导出命令</li>\n<li>alias：证书名</li>\n<li>file: 导出的证书</li>\n</ul>\n<p><img data-src=\"20.png\" alt=\"image\" /><br />\n 然后把生成的 pbaserver.cer 发给客户端</p>\n<h2 id=\"修改tomcat配置文件\"><a class=\"anchor\" href=\"#修改tomcat配置文件\">#</a> 修改 Tomcat 配置文件</h2>\n<p>在<ins>服务器</ins>执行</p>\n<p>打开 Tomcat 根目录下的 /conf/server.xml，找到 Connector port=&quot;8443&quot; 配置段，修改为如下：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>#找到这行</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Service</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Catalina<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Connector</span> <span class=\"token attr-name\">port</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>8443<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">clientAuth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">protocol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.apache.coyote.http11.Http11Nio2Protocol<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token attr-name\">SSLEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">maxThreads</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scheme</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token attr-name\">secure</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">sslProtocol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TLSv1.2<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token attr-name\">keystoreFile</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c:\\\\ssl\\pbaserver.keystore<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keystorePass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123456<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyPass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>654321<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token attr-name\">truststoreFile</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c:\\\\ssl\\trustkeystore.keystore<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">truststorePass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123456<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><ul>\n<li>clientAuth: 设置是否双向验证，默认为 false，设置为 true 代表双向验证</li>\n<li>keystoreFile: 服务器证书文件路径</li>\n<li>keystorePass: 服务器证书密码</li>\n<li>keyPass: 服务器密钥库主密码（就是创建证书时二次输入的密码）</li>\n<li>truststoreFile: 服务器信任的密钥库，这里使用了和 keystoreFile 一样的密钥库，可以用另一个文件来存储</li>\n<li>truststorePass: 信任的密钥库的密码</li>\n<li>SSlProtocol: SSL 协议，这里使用 TLSv1.2</li>\n<li>SSLEnabled: 是否使用 SSL</li>\n<li>Protocol: 连接协议</li>\n</ul>\n<p>重启服务器</p>\n<h2 id=\"客户端导入自己的密钥\"><a class=\"anchor\" href=\"#客户端导入自己的密钥\">#</a> 客户端导入自己的密钥</h2>\n<p>在<ins>客户端</ins>上操作</p>\n<p>此时我们从客户端打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly8xMC4zNC41MC4xNDA6ODQ0My9wZW50YWhvLw==\">https://10.34.50.140:8443/pentaho/</span><br />\n<img data-src=\"21.png\" alt=\"image\" /><br />\n<img data-src=\"22.png\" alt=\"image\" /><br />\n 第一张图表示服务器已经开启了 SSL，但是由于证书不是权威机构的，所以浏览器会提示是否继续访问。我们点击继续访问进入第二张图<br />\n第二张图表示服务器拒绝了客户端的请求，因为目前客户端并没有将自己的密钥（8.4 生成的 client.p12）导入浏览器，所以服务器无法识别客户端而拒绝请求<br />\n接下来，我们开始导入客户端密钥进浏览器</p>\n<ol>\n<li>双击之前创建的客户端密钥 client.p12<br />\n<img data-src=\"23.png\" alt=\"image\" /></li>\n<li>next<br />\n<img data-src=\"24.png\" alt=\"image\" /></li>\n<li>next<br />\n<img data-src=\"25.png\" alt=\"image\" /></li>\n<li>输入密码，next<br />\n<img data-src=\"26.png\" alt=\"image\" /></li>\n<li>next<br />\n<img data-src=\"27.png\" alt=\"image\" /></li>\n<li>完成<br />\n<img data-src=\"28.png\" alt=\"image\" /></li>\n<li>关闭浏览器，再次访问，会提示是否使用该证书，点 OK<br />\n<img data-src=\"29.png\" alt=\"image\" /></li>\n<li>依然是浏览器的警告提示，点继续访问<br />\n<img data-src=\"30.png\" alt=\"image\" /></li>\n<li>再次确认使用该证书<br />\n<img data-src=\"31.png\" alt=\"image\" /></li>\n<li><img data-src=\"32.png\" alt=\"image\" /><br />\n 这次我们可以进入了～，不过浏览器仍然显示红色，因为该服务器 CA 证书是我们自己签名的，浏览器不信任，所以我们只有手动将该服务器证书设置为信任</li>\n</ol>\n<h2 id=\"客户端信任服务器证书-2\"><a class=\"anchor\" href=\"#客户端信任服务器证书-2\">#</a> 客户端信任服务器证书</h2>\n<p>在<ins>客户端</ins>上操作</p>\n<p>这时候服务器应该将证书发给客户端</p>\n<ol>\n<li>双击服务器证书<br />\n<img data-src=\"33.png\" alt=\"image\" /></li>\n<li>点击安装证书<br />\n<img data-src=\"34.png\" alt=\"image\" /></li>\n<li>next<br />\n<img data-src=\"35.png\" alt=\"image\" /></li>\n<li>选择根认证证书<br />\n<img data-src=\"36.png\" alt=\"image\" /></li>\n<li>next<br />\n<img data-src=\"37.png\" alt=\"image\" /></li>\n<li>finish<br />\n<img data-src=\"38.png\" alt=\"image\" /></li>\n<li>点 yes<br />\n<img data-src=\"39.png\" alt=\"image\" /></li>\n<li>完成<br />\n<img data-src=\"40.png\" alt=\"image\" /></li>\n<li>查看浏览器证书<br />\n<img data-src=\"41.png\" alt=\"image\" /><br />\n<img data-src=\"42.png\" alt=\"image\" /><br />\n 这是本机的密钥，就是 client.p12<br />\n<img data-src=\"43.png\" alt=\"image\" /><br />\n 这是我们刚信任的服务器证书<br />\n<img data-src=\"44.png\" alt=\"image\" /></li>\n<li>关闭浏览器，再次访问，依旧是选择我们的证书<br />\n这次已经没有浏览器的警告了，红色提示也消失，并出现一把锁，这表示客户端与服务器已经建立起了安全的 SSL 连接了。<br />\n<img data-src=\"45.png\" alt=\"image\" /></li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "IT运维",
                "java",
                "tomcat"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/IT%E8%BF%90%E7%BB%B4/Flink-%E5%BC%80%E5%8F%91%E5%8F%8A%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/IT%E8%BF%90%E7%BB%B4/Flink-%E5%BC%80%E5%8F%91%E5%8F%8A%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "title": "Flink-开发及部署指南",
            "date_published": "2020-04-11T05:12:24.000Z",
            "content_html": "<h1 id=\"操作系统\"><a class=\"anchor\" href=\"#操作系统\">#</a> 操作系统</h1>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\">  Windows</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\">  MAC</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\">  Linux</label></li>\n</ul>\n<h1 id=\"软件依赖\"><a class=\"anchor\" href=\"#软件依赖\">#</a> 软件依赖</h1>\n<ul>\n<li>HDP</li>\n<li>scala</li>\n<li>flink</li>\n</ul>\n<h1 id=\"实验环境\"><a class=\"anchor\" href=\"#实验环境\">#</a> 实验环境</h1>\n<ul>\n<li>CentOS 7</li>\n<li>HDP 3.1</li>\n<li>scala 2.11</li>\n<li>flink 2.11</li>\n</ul>\n<h1 id=\"什么是flink\"><a class=\"anchor\" href=\"#什么是flink\">#</a> 什么是 Flink</h1>\n<div class=\"note info\">\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mbGluay5hcGFjaGUub3JnL3poL2ZsaW5rLWFyY2hpdGVjdHVyZS5odG1s\">Apache Flink</span> 是一个框架和分布式处理引擎，用于在无边界和有边界数据流上进行有状态的计算。Flink 能在所有常见集群环境中运行，并能以内存速度和任意规模进行计算。</p>\n</div>\n<h2 id=\"flink特点\"><a class=\"anchor\" href=\"#flink特点\">#</a> Flink 特点</h2>\n<ol>\n<li>Apache Flink 是一个分布式系统的思想是万物皆是数据流，批处理只是流处理的特例。Flink 把数据分为两种类型：无界和有界数据</li>\n</ol>\n<ul>\n<li>无界流 有定义流的开始，但没有定义流的结束。它们会无休止地产生数据。无界流的数据必须持续处理，即数据被摄取后需要立刻处理。我们不能等到所有数据都到达再处理，因为输入是无限的，在任何时候输入都不会完成。处理无界数据通常要求以特定顺序摄取事件，例如事件发生的顺序，以便能够推断结果的完整性。</li>\n<li>有界流 有定义流的开始，也有定义流的结束。有界流可以在摄取所有数据后再进行计算。有界流所有数据可以被排序，所以并不需要有序摄取。有界流处理通常被称为批处理</li>\n</ul>\n<ol start=\"2\">\n<li>Apache Flink 是一个分布式系统，Flink 集成了所有常见的集群资源管理器，例如 Hadoop YARN、 Apache Mesos 和 Kubernetes，但同时也可以作为独立集群运行，Flink 支持 local 模式、集群模式（standalone 集群或者 Yarn 集群）、云端部署。</li>\n<li>在集群上的 Flink，应用程序被并行化为可能数千个任务发布到每一台服务器上进行处理，而且 Flink 能很容易的维护应用程序的状态</li>\n<li>Flink 基于内存进行计算，任务状态也保存在内存中，速度会非常而已能控制每条记录的状态。</li>\n</ol>\n<h2 id=\"flink-vs-spark\"><a class=\"anchor\" href=\"#flink-vs-spark\">#</a> Flink vs Spark</h2>\n<ul>\n<li>Spark：<br />\nSpark 的数据模型是弹性分布式数据集 RDD，这个内存数据结构使得 spark 可以通过固定内存做大批量计算。初期的 Spark Streaming 是通过将数据流转成批 (micro-batches)，即收集一段时间 (time-window) 内到达的所有数据，并在其上进行常规批处，所以严格意义上，还不能算作流式处理。但是 Spark 从 2.x 版本开始推出基于 Continuous Processing Mode 的 Structured Streaming，支持按事件时间处理和端到端的一致性，但是在功能上还有一些缺陷，比如对端到端的 exactly-once 语义的支持<br />\n<strong> Spark DAG 示意图</strong><br />\n<img data-src=\"1.png\" alt=\"image\" /></li>\n<li>Flink：<br />\nFlink 是统一的流和批处理框架，基本数据模型是数据流，以及事件 (Event) 的序列，Flink 从设计之初秉持了一个观点：批是流的特例。每一条数据都可以触发计算逻辑，那么 Flink 的流特性已经在延迟方面占得天然优势。<br />\n<strong>Flink workflow 示意图</strong><br />\n<img data-src=\"2.png\" alt=\"image\" /></li>\n</ul>\n<h3 id=\"应用对比\"><a class=\"anchor\" href=\"#应用对比\">#</a> 应用对比</h3>\n<table>\n<thead>\n<tr>\n<th>API</th>\n<th>Spark</th>\n<th>Flink</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>底层 api</td>\n<td>RDD</td>\n<td>Process Function</td>\n</tr>\n<tr>\n<td>核心 api</td>\n<td>DataStream/DataSet/Structured Stream</td>\n<td>DataStream/DataSet</td>\n</tr>\n<tr>\n<td>SQL</td>\n<td>Spark SQL</td>\n<td>Table Api&amp;SQL</td>\n</tr>\n<tr>\n<td>机器学习</td>\n<td>MLlib</td>\n<td>FlinkML</td>\n</tr>\n<tr>\n<td>图计算</td>\n<td>Graph</td>\n<td>Gelly</td>\n</tr>\n<tr>\n<td colspan=\"2\">其他</td>\n<td>CEP</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"开发语言\"><a class=\"anchor\" href=\"#开发语言\">#</a> 开发语言</h3>\n<table>\n<thead>\n<tr>\n<th>支持语言</th>\n<th>Spark</th>\n<th>Flink</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>java</td>\n<td>√</td>\n<td>√</td>\n</tr>\n<tr>\n<td>scala</td>\n<td>√</td>\n<td>√</td>\n</tr>\n<tr>\n<td>python</td>\n<td>√</td>\n<td>√</td>\n</tr>\n<tr>\n<td>R</td>\n<td>√</td>\n<td>×（需要第三方）</td>\n</tr>\n<tr>\n<td>SQL</td>\n<td>√</td>\n<td>√</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"flink部署\"><a class=\"anchor\" href=\"#flink部署\">#</a> Flink 部署</h1>\n<ol>\n<li>\n<p>下载<br />\n官网下载地址：<span class=\"exturl\" data-url=\"aHR0cDovL2ZsaW5rLmFwYWNoZS5vcmcvZG93bmxvYWRzLmh0bWwlRTMlODAlODI=\">http://flink.apache.org/downloads.html。</span><br />\n这里选择 flink-1.10.0-bin-scala_2.11.tgz</p>\n</li>\n<li>\n<p>解压</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> -zxvf flink-1.10.0-bin-scala_2.11.tgz</pre></td></tr></table></figure><p><img data-src=\"3.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>启动 Flink</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>进入bin目录：cd /usr/flink/flink-1.10.0/bin</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>启动flink：./start-cluster.sh</pre></td></tr></table></figure><p>启动成功如下：jps 可以看到 StandaloneSessionClusterEntrypoint 在运行说明成功！<br />\n<img data-src=\"4.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>开放端口 8081</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /etc/sysconfig/iptables</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-A INPUT -m state --state NEW -m tcp -p tcp --dport <span class=\"token number\">8081</span> -j ACCEPT</pre></td></tr></table></figure><p><img data-src=\"5.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>访问 ui 界面<br />\n输入 10.34.11.142：8081<br />\n<img data-src=\"6.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>测试<br />\n打开 3 个会话</p>\n<ol>\n<li>第一个，启动监听客户端端口</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>输入： <span class=\"token function\">nc</span> -lk <span class=\"token number\">8888</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">## 注意：端口可以自己定</span></pre></td></tr></table></figure><p><img data-src=\"7.png\" alt=\"image\" /></p>\n<ol start=\"2\">\n<li>第二个，启动 flink 的自带 demo</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## 切换到 flink 安装目录下</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/flink/flink-1.10.0/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">## 启动程序，注意：端口号跟第一个端口一致</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>bin/flink run examples/streaming/SocketWindowWordCount.jar --port <span class=\"token number\">8888</span></pre></td></tr></table></figure><p><img data-src=\"8.png\" alt=\"image\" /></p>\n<ol start=\"3\">\n<li>第三个，启动日志监控</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#其中.out 文件会根据服务器名称自己变化</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">tail</span> -f flink-root-taskexecutor-0-hdp-s-2.data.dc.zjft.com.out</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>在第一个会话输入</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>zijin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>aa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>日志可以监控到</pre></td></tr></table></figure><p><img data-src=\"9.png\" alt=\"image\" /></p>\n<p>ui 界面信息<br />\n<img data-src=\"10.png\" alt=\"image\" /></p>\n</li>\n</ol>\n<h1 id=\"flink集群\"><a class=\"anchor\" href=\"#flink集群\">#</a> Flink 集群</h1>\n<h2 id=\"集群安装部署\"><a class=\"anchor\" href=\"#集群安装部署\">#</a> 集群安装部署</h2>\n<ol>\n<li>\n<p>资源规划</p>\n<table>\n<thead>\n<tr>\n<th>Host Name</th>\n<th>ip</th>\n<th>role</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hdp-m-1</td>\n<td>10.34.11.70</td>\n<td>master</td>\n</tr>\n<tr>\n<td>hdp-s-1</td>\n<td>10.34.11.142</td>\n<td>slave</td>\n</tr>\n<tr>\n<td>hdp-s-2</td>\n<td>10.34.11.154</td>\n<td>slave</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>配置 flink-conf.yaml 文件<br />\n在所有机器上配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 配置主节点（即配置 master 节点）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">jobmanager.rpc.address</span><span class=\"token punctuation\">:</span> hdp<span class=\"token punctuation\">-</span>m<span class=\"token punctuation\">-</span>1.data.dc.zjft.com</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#jobmanager 内存大小</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key atrule\">jobmanager.heap.size</span><span class=\"token punctuation\">:</span> 4096m</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#taskmanager 内存大小</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">taskmanager.memory.process.size</span><span class=\"token punctuation\">:</span> 4096m</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#配置 task 任务槽数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key atrule\">taskmanager.numberOfTaskSlots</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#设置并行数，就是是集群总核数</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token key atrule\">parallelism.default</span><span class=\"token punctuation\">:</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#web ui 端口</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key atrule\">rest.port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8899</span></pre></td></tr></table></figure></li>\n<li>\n<p>配置 masters</p>\n<p>在所有机器上配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#有多个 master 可以加多个，记得端口带上，和 flink-conf.yaml 配置的要一样，删掉本来 masters 配置文件中的 localhost:8081</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hdp<span class=\"token punctuation\">-</span>m<span class=\"token punctuation\">-</span>1.data.dc.zjft.com<span class=\"token punctuation\">:</span><span class=\"token number\">8899</span></pre></td></tr></table></figure></li>\n<li>\n<p>配置 slaves</p>\n<p>在所有机器上配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#将子节点的 ip 或者域名加上</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hdp<span class=\"token punctuation\">-</span>s<span class=\"token punctuation\">-</span>1.data.dc.zjft.com</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hdp<span class=\"token punctuation\">-</span>s<span class=\"token punctuation\">-</span>2.data.dc.zjft.com</pre></td></tr></table></figure></li>\n<li>\n<p>开放 8899 端口</p>\n<p>只配置 master 节点</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /etc/stsconfig/iptables</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#加入下面这句</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-A INPUT -m state --state NEW -m tcp -p tcp --dport <span class=\"token number\">8899</span> -j ACCEPT</pre></td></tr></table></figure><p><img data-src=\"11.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>启动测试</p>\n<p>只需要启动 master 服务</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/flink/flink-1.10.0/bin</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./start-cluster.sh</pre></td></tr></table></figure><p>可以有三个 manager<br />\n<img data-src=\"12.png\" alt=\"image\" /></p>\n</li>\n</ol>\n<h2 id=\"配置集群高可用\"><a class=\"anchor\" href=\"#配置集群高可用\">#</a> 配置集群高可用</h2>\n<p>HDP 的 zookeeper 集群代管理 Flink 服务。</p>\n<ol>\n<li>\n<p>进入 flink 配置目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/flink/flink-1.10.0/conf</pre></td></tr></table></figure></li>\n<li>\n<p>修改 flink-conf.yaml</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> flink-conf.yaml</pre></td></tr></table></figure><p>添加下列配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">high-availability</span><span class=\"token punctuation\">:</span> zookeeper</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">high-availability.zookeeper.path.root</span><span class=\"token punctuation\">:</span> /flink</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">high-availability.cluster-id</span><span class=\"token punctuation\">:</span> /cluster_one</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">high-availability.storageDir</span><span class=\"token punctuation\">:</span> file<span class=\"token punctuation\">:</span>///flink/recovery</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key atrule\">high-availability.zookeeper.quorum</span><span class=\"token punctuation\">:</span> 10.34.11.124<span class=\"token punctuation\">:</span><span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>10.34.11.70<span class=\"token punctuation\">:</span><span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>10.34.11.133<span class=\"token punctuation\">:</span><span class=\"token number\">2181</span></pre></td></tr></table></figure></li>\n<li>\n<p>修改 masters</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> masters</pre></td></tr></table></figure><p>添加下列配置</p>\n<pre><code>10.34.11.70:8899\n10.34.11.154:8899\n</code></pre>\n</li>\n<li>\n<p>修改 zoo.cfg</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> zoo.cfg</pre></td></tr></table></figure><p>添加下列配置</p>\n<pre><code>server.1=hdp-e-1.data.dc.zjft.com:2888:3888\nserver.2=hdp-m-1.data.dc.zjft.com:2888:3888\nserver.3=hdp-m-2.data.dc.zjft.com:2888:3888\n将配置分发到各个节点\nscp flink-conf.yaml,masters,zoo.cfg root@10.34.11.142:/usr/flink/flink-\t1.10.0/conf\nscp flink-conf.yaml,masters,zoo.cfg root@10.34.11.154:/usr/flink/flink-\t1.10.0/conf\n</code></pre>\n</li>\n<li>\n<p>重启 flink</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>启动 flink 之前要确保 zookeeper 启动正常，再启动flink</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/flink/flink-1.10.0/conf</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>start-cluster.sh</pre></td></tr></table></figure><p>可以看到，启动了两个 standalonesession 进程，也就是两个 jobmanager 进程<br />\n<img data-src=\"13.png\" alt=\"image\" /></p>\n</li>\n<li>\n<p>测试高可用</p>\n<ol>\n<li>查看 leader<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#在 zookeeper 中查看哪个进程是 leader</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token builtin class-name\">cd</span> /usr/hdp/3.1.0.0-78/zookeeper/bin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t./zkCli.sh</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tget /flink/cluster_one/leader/rest_server_lock</pre></td></tr></table></figure></li>\n</ol>\n<p>可以看见 10.34.11.70:8899 为 leader<br />\n<img data-src=\"14.png\" alt=\"image\" /></p>\n<ol start=\"2\">\n<li>手动杀手 leader 节点<br />\n查找 leader 节点的端口</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>jps</pre></td></tr></table></figure><p><img data-src=\"15.png\" alt=\"image\" /><br />\n 杀死进程</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">kill</span> -9 <span class=\"token number\">22519</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 执行成功之后需要等待一会，因为切换需要时间，然后在 zookeeper 客户端中查看 leader 节点信息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>get /flink/cluster_one/leader/rest_server_lock</pre></td></tr></table></figure><p>leader 节点从 70 切换到了 154<br />\n<img data-src=\"16.png\" alt=\"image\" /></p>\n</li>\n</ol>\n<h1 id=\"flink基础使用\"><a class=\"anchor\" href=\"#flink基础使用\">#</a> Flink 基础使用</h1>\n<h2 id=\"开发\"><a class=\"anchor\" href=\"#开发\">#</a> 开发</h2>\n<p>Flink 代码由三部分组成</p>\n<ul>\n<li>source：source 作为整个 stream 中的入口</li>\n<li>computer：数据处理逻辑</li>\n<li>sink：sink 作为整个 stream 的终点。</li>\n</ul>\n<ol>\n<li>maven 依赖<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scala.version</span><span class=\"token punctuation\">></span></span>2.11.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scala.version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scala.binary.version</span><span class=\"token punctuation\">></span></span>2.11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scala.binary.version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>flink.version</span><span class=\"token punctuation\">></span></span>1.10.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>flink.version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hbase.version</span><span class=\"token punctuation\">></span></span>2.0.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>hbase.version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">&lt;!--flink--></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.kafka<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>kafka-clients<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.flink<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>flink-streaming-scala_2.11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;flink.version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>compile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.flink<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>flink-connector-kafka_2.11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;flink.version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.flink<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>flink-clients_2.11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;flink.version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> <span class=\"token comment\">&lt;!--     &lt;dependency></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          &lt;groupId>org.apache.flink&lt;/groupId></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          &lt;artifactId>flink-sql-client_2.11&lt;/artifactId></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          &lt;version>$&#123;flink.version&#125;&lt;/version></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      &lt;/dependency>--></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">&lt;!--hbase--></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.hbase<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>hbase-client<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;hbase.version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.hbase<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>hbase-server<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;hbase.version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.hbase<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>hbase-mapreduce<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;hbase.version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>postgresql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>postgresql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>9.1-901-1.jdbc4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.scala-lang<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>scala-library<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;scala.version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>source 模块和 computer 模块<br />\n以 kafka 为数据源，因为不用逻辑处理，所以直接传入，其中 source 和 sink 的数据可以自定义处理<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>zjft<span class=\"token punctuation\">.</span>flink</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Properties</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>zjft<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KafkaOffset</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>zjft<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">.</span>postgreSQL<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PostgreSQLSink</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>serialization<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleStringSchema</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>scala<span class=\"token punctuation\">.</span></span>_</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>connectors<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FlinkKafkaConsumer</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>connectors<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>internals<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KafkaTopicPartition</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConsumerConfig</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>serialization<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringDeserializer</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>object <span class=\"token class-name\">FlinkApp</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  def <span class=\"token class-name\">FlinkApp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 启动 flink 环境</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    val env<span class=\"token operator\">:</span> <span class=\"token class-name\">StreamExecutionEnvironment</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">StreamExecutionEnvironment</span><span class=\"token punctuation\">.</span>getExecutionEnvironment</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    val properties<span class=\"token operator\">:</span> <span class=\"token class-name\">Properties</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">//val JDBC_HOST = \"10.34.11.141\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">//val JDBC_PORT = \"2345\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token comment\">// val JDBC_DATABASES = \"postgres\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">//val JDBC_USER = \"gpadmin\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">//val JDBC_PASSWORD =\"cloud.Zijin\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">//val JDBC_TABLE =\"public.flinkdata\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    val topic <span class=\"token operator\">=</span> <span class=\"token string\">\"ha-demo-1\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    val hostAddress<span class=\"token operator\">=</span><span class=\"token string\">\"10.34.11.142:6667\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">var</span> clientId <span class=\"token operator\">=</span> <span class=\"token string\">\"1213\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">//var commitInterval = 10</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>scala<span class=\"token punctuation\">.</span></span>_</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    env<span class=\"token punctuation\">.</span><span class=\"token function\">setParallelism</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    env<span class=\"token punctuation\">.</span><span class=\"token function\">enableCheckpointing</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 指定 kafka 的启动集群</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConsumerConfig</span><span class=\"token punctuation\">.</span>BOOTSTRAP_SERVERS_CONFIG<span class=\"token punctuation\">,</span> hostAddress<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 指定消费者组</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConsumerConfig</span><span class=\"token punctuation\">.</span>GROUP_ID_CONFIG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"OffsetControl\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">// 指定 key 的反序列化类型</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">//    properties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, classOf[StringDeserializer].getName)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// 指定 value 的反序列化类型</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">//    properties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, classOf[StringDeserializer].getName)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">// 指定自动消费的策略</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// 到 hbase 中的 offset 表拿到 offset，并 put 到一个 HashMap [KafkaTopicPartition,java.lang.Long] 的 map 中</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">var</span> offset <span class=\"token operator\">=</span> <span class=\"token class-name\">KafkaOffset<span class=\"token punctuation\">.</span>Create</span><span class=\"token punctuation\">(</span>clientId<span class=\"token punctuation\">,</span>commitInterval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLatestOffset</span><span class=\"token punctuation\">(</span>clientId<span class=\"token punctuation\">,</span> topic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toLong</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">var</span> offsets  <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>HashMap</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">KafkaTopicPartition</span><span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>Long</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    offsets<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">KafkaTopicPartition</span><span class=\"token punctuation\">(</span>topic<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">// 创建 kafka 消费者</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">var</span> consumer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FlinkKafkaConsumer</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>topic<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleStringSchema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setStartFromSpecificOffsets</span><span class=\"token punctuation\">(</span>offsets<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">// 加入数据源</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    val kafkaData<span class=\"token operator\">:</span><span class=\"token class-name\">DataStream</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span>consumer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    kafkaData<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    val sink <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PostgreSQLSink2</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span>topic<span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">// 将结果 sink 入到 pg 中</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    kafkaData<span class=\"token punctuation\">.</span><span class=\"token function\">addSink</span><span class=\"token punctuation\">(</span> sink<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    env<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kafkasource\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t```</pre></td></tr></table></figure></li>\n<li>sink 模块<br />\n sink 中主要 3 个方法的重写</li>\n</ol>\n<ul>\n<li>\n<p>open</p>\n</li>\n<li>\n<p>invoke</p>\n</li>\n<li>\n<p>close</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>zjft<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">.</span>postgreSQL</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>zjft<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Message</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RichSinkFunction</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">Connection</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">PreparedStatement</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>zjft<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KafkaOffset</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostgreSQLSink2</span><span class=\"token punctuation\">(</span>offset1<span class=\"token operator\">:</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">,</span> topic1<span class=\"token operator\">:</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> partition1<span class=\"token operator\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">RichSinkFunction</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">var</span> m<span class=\"token operator\">:</span><span class=\"token class-name\">Message</span> <span class=\"token operator\">=</span> _</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// JDBC 连接信息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  val JDBC_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:postgresql://10.34.11.141:2345/postgres\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  val JDBC_USER <span class=\"token operator\">=</span> <span class=\"token string\">\"gpadmin\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  val JDBC_PASSWORD <span class=\"token operator\">=</span><span class=\"token string\">\"cloud.Zijin\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">var</span> conn<span class=\"token operator\">:</span><span class=\"token class-name\">Connection</span><span class=\"token operator\">=</span>_</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  val JDBC_DRIVER_CLASS<span class=\"token operator\">=</span><span class=\"token string\">\"org.postgresql.Driver\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">private</span> val serialVersionUID <span class=\"token operator\">=</span> <span class=\"token number\">1L</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> connection<span class=\"token operator\">:</span><span class=\"token class-name\">Connection</span> <span class=\"token operator\">=</span> _</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> preparedStatement<span class=\"token operator\">:</span><span class=\"token class-name\">PreparedStatement</span> <span class=\"token operator\">=</span> _</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">var</span> offset<span class=\"token operator\">:</span><span class=\"token class-name\">Long</span><span class=\"token operator\">=</span>offset1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">var</span> offset_before<span class=\"token operator\">:</span><span class=\"token class-name\">Long</span><span class=\"token operator\">=</span>offset1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">var</span> topic<span class=\"token operator\">:</span><span class=\"token class-name\">String</span><span class=\"token operator\">=</span>topic1</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">var</span> partition<span class=\"token operator\">:</span><span class=\"token class-name\">String</span><span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">//classOf[org.postgresql.Driver]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    * open 方法是初始化方法，会在 invoke 方法之前执行，执行一次。</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  def <span class=\"token function\">postgreSQLSink</span><span class=\"token punctuation\">(</span>offset1<span class=\"token operator\">:</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">,</span>topic1<span class=\"token operator\">:</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span>partition1<span class=\"token operator\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    offset <span class=\"token operator\">=</span> offset1</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    offset_before <span class=\"token operator\">=</span> offset1</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    topic <span class=\"token operator\">=</span> topic1</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    partition <span class=\"token operator\">=</span> partition1</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   override def <span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span>parameters<span class=\"token operator\">:</span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">// 加载 JDBC 驱动</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span>JDBC_DRIVER_CLASS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// 获取数据库连接</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    connection <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>JDBC_URL<span class=\"token punctuation\">,</span>JDBC_USER<span class=\"token punctuation\">,</span>JDBC_PASSWORD<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>     val sql<span class=\"token operator\">:</span><span class=\"token class-name\">String</span> <span class=\"token operator\">=</span>s<span class=\"token string\">\"\"</span><span class=\"token string\">\"insert into public.flinkdata values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\"</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>     preparedStatement <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"entry open\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">//     println(preparedStatement)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span>parameters<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    * invoke () 方法解析一个元组数据，并插入到数据库中。</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    *</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    * @param data 输入的数据</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    * @throws Exception</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre> <span class=\"token annotation punctuation\">@throws</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Exception</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  override def <span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Unit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>   <span class=\"token keyword\">var</span> data1<span class=\"token operator\">=</span>data<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\";\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>   <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"entry invoke\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">35</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">38</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">37</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">39</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">38</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">39</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">43</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">43</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">44</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">46</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">46</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">47</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">49</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">51</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">52</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">51</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">52</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">54</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">53</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">54</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">55</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">56</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">58</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">59</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">61</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">62</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">61</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">63</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">62</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">63</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">67</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">67</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">68</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">69</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">71</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">71</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">72</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">74</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">73</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">74</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">77</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">76</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">77</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">78</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">79</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">81</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">81</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">82</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">83</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">84</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">86</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">85</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">86</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">87</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">88</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">89</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">92</span><span class=\"token punctuation\">,</span><span class=\"token function\">data1</span><span class=\"token punctuation\">(</span><span class=\"token number\">91</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">93</span><span class=\"token punctuation\">,</span>offset<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>     offset <span class=\"token operator\">=</span> offset<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>     preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">executeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>offset<span class=\"token operator\">-</span>offset_before<span class=\"token operator\">==</span>commitInterval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token comment\">//  KafkaOffset.getCurrent().commit(offset.toInt,topic)</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>  offset_before<span class=\"token operator\">=</span>offset</pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>     <span class=\"token keyword\">case</span> e<span class=\"token operator\">:</span> <span class=\"token class-name\">Exception</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>       e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>     * close () 是 tear down 的方法，在销毁时执行，关闭连接。</pre></td></tr><tr><td data-num=\"160\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token comment\">//   @Overridee</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>  override def <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>preparedStatement <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>       preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>       <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"entry preparedStatement close\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>connection <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>       <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"entry connection close\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>       connection<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>     <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"运行\"><a class=\"anchor\" href=\"#运行\">#</a> 运行</h2>\n<ol>\n<li>首先将写好文件打包成 jar 包</li>\n<li>运行<br />\n Flink 有两种运行两种方式\n<ul>\n<li>在命令行执行<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>flink run -c com.zjft.flink.FlinkApp /spark-demo/xzy/flink_demo/ha-flink-demo.jar</pre></td></tr></table></figure></li>\n</ul>\n-c 为 jar 文件位置\n<ul>\n<li>在 Flink web ui 上配置运行</li>\n</ul>\n<ol>\n<li>进入 Flink web 界面，点击 Flink web ui 首页中的 submit new job<br />\n<img data-src=\"17.png\" alt=\"\" /><br />\n2. 点击 Add new<br />\n<img data-src=\"18.png\" alt=\"\" /><br />\n3. 上传打包好的 jar 包，点击 submit 提交执行<br />\n<img data-src=\"19.png\" alt=\"\" /><br />\n 4. 查看执行结果<br />\n<img data-src=\"20.png\" alt=\"\" /></li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "IT运维",
                "flink"
            ]
        },
        {
            "id": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Pentaho-CDE%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/",
            "url": "http://yrmlnf.coding-pages.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/Pentaho-CDE%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/",
            "title": "Pentaho-CDE开发指南",
            "date_published": "2020-04-07T13:24:05.000Z",
            "content_html": "<h1 id=\"操作系统\"><a class=\"anchor\" href=\"#操作系统\">#</a> 操作系统</h1>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> Linux</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> Mac OS</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\"> Windows</label></li>\n</ul>\n<h1 id=\"软件依赖\"><a class=\"anchor\" href=\"#软件依赖\">#</a> 软件依赖</h1>\n<p><span class=\"label info\">^ Lastest</span> <span class=\"label info\">~ minimum</span></p>\n<ul>\n<li>Jdk1.8~</li>\n<li>pentaho-8.3</li>\n</ul>\n<h1 id=\"实验环境\"><a class=\"anchor\" href=\"#实验环境\">#</a> 实验环境</h1>\n<ul>\n<li>Windows10</li>\n<li>Jdk-1.8</li>\n<li>postgres-12</li>\n<li>pentaho-8.3</li>\n</ul>\n<h1 id=\"pba\"><a class=\"anchor\" href=\"#pba\">#</a> PBA</h1>\n<p>PBA 全称 Pentaho Business Ananalyze，是 Hitachi 旗下一款基于 Java 的轻量级 BI 平台。PBA 具有开发图表，展示图表，提供 API 服务，展示报表，管理图表报表文件功能</p>\n<p>PBA 占用内存比较大，请确保机器有 8G 内存，否则需要修改 Tomcat 的虚拟内存</p>\n<h2 id=\"安装pba\"><a class=\"anchor\" href=\"#安装pba\">#</a> 安装 PBA</h2>\n<ol>\n<li>到官网或者<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvcGVudGFoby9maWxlcy8=\"> sourceforge</span> 下载源码<br />\n<img data-src=\"1.png\" alt=\"\" /></li>\n<li>下载完后解压，双击 start-pentaho.bat<br />\n<img data-src=\"2.png\" alt=\"\" /></li>\n<li>出现这个提示，点击确定<br />\n<img data-src=\"3.png\" alt=\"\" /></li>\n<li>第一次启动比较久，下图为启动成功（如果页面卡了，在这命令行里按回车）<br />\n<img data-src=\"4.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"cde\"><a class=\"anchor\" href=\"#cde\">#</a> CDE</h1>\n<p>CDE 是 pentaho 内置的插件，用来制作 Dashboard 和 chart<br />\nCDE 分为三个层次，分别是数据层，组件层，视图层<br />\n下图四个按钮为视图层，组件层，数据层，预览<br />\n<img data-src=\"35.png\" alt=\"\" /></p>\n<h2 id=\"数据层\"><a class=\"anchor\" href=\"#数据层\">#</a> 数据层</h2>\n<p>数据层为组件提供数据来源，数据层分为三个区域：</p>\n<ul>\n<li>左边为创建数据源区域，选择数据源的类型，点击一下即可创建</li>\n<li>中间为创建好的数据源</li>\n<li>右边为每个数据源的配置项<br />\n<img data-src=\"36.png\" alt=\"\" /></li>\n</ul>\n<h2 id=\"组件层\"><a class=\"anchor\" href=\"#组件层\">#</a> 组件层</h2>\n<p>组件层有两个功能，一是渲染数据层传过来的数据，二是控制变量参数传给数据层，是一个承上启下的作用<br />\n组件大概可分为四类：</p>\n<ul>\n<li>参数组件：用来装变量的容器，筛选组件的值会自动放入参数组件</li>\n<li>筛选组件：常用的筛选组件有下拉组件，单选组件，多选组件，文本输入组件，指定参数后，筛选组件的值变化后将自动放入参数组件，可以监听参数变化刷新组件。</li>\n<li>图表组件：指定数据源后，展示对应的图表。常用图表有柱状图，折现图，饼图，散点图等，可以监听参数变化刷新组件。</li>\n<li>其他功能组件：完成一些特别功能的组件。<br />\n<img data-src=\"37.png\" alt=\"\" /></li>\n</ul>\n<h2 id=\"视图层\"><a class=\"anchor\" href=\"#视图层\">#</a> 视图层</h2>\n<p>视图文件使用了 boostrap3 的栅栏的布局，一行有 12 格，适配各种屏幕大小<br />\n工具栏依次是：</p>\n<ul>\n<li>保存 CDE 布局</li>\n<li>选择 CDE 布局</li>\n<li>添加 js 或者 css 资源</li>\n<li>添加 boostrap 面板</li>\n<li>添加表单</li>\n<li>添加行</li>\n<li>添加列</li>\n<li>添加空行</li>\n<li>添加图片</li>\n<li>添加 HTML</li>\n<li>复制元素</li>\n<li>删除元素</li>\n</ul>\n<p>布局结构分为资源文件和布局</p>\n<ul>\n<li>资源文件：有 js 文件和 css 文件，可以引用上传到 pentaho 的文件</li>\n<li>布局：分为行，列，空行，图片，html 代码<br />\n<img data-src=\"38.png\" alt=\"\" /></li>\n</ul>\n<h2 id=\"基础使用\"><a class=\"anchor\" href=\"#基础使用\">#</a> 基础使用</h2>\n<ol>\n<li>\n<p>浏览器打开  <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgw\">http://localhost:8080</span> ， 点击以评估者身份登录，点击管理员下面的登录按钮<br />\n<img data-src=\"5.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>新建 cde<br />\n 创建新的 CDE，并保存<br />\n<img data-src=\"6.png\" alt=\"\" /><br />\n<img data-src=\"24.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>创建数据层，这里选择使用 jdbc，也可以配置成 jndi<br />\n 输入数据源名，驱动名，用户名，密码，jdbc Url，查询语句<br />\n<img data-src=\"7.png\" alt=\"\" /><br />\n Query</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span>dim_date</pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>例子中的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>数据源名字，后面组件层会用到</td>\n<td>localhost</td>\n</tr>\n<tr>\n<td>Driver</td>\n<td>驱动类名</td>\n<td>org.postgresql.Driver</td>\n</tr>\n<tr>\n<td>Password</td>\n<td>数据库密码</td>\n</tr>\n<tr>\n<td>Username</td>\n<td>数据库用户名</td>\n</tr>\n<tr>\n<td>Access Level</td>\n<td>数据源权限等级</td>\n<td>Public</td>\n</tr>\n<tr>\n<td>URL</td>\n<td>SQL Url</td>\n<td>jdbc:postgresql://localhost:5432/postgres</td>\n</tr>\n<tr>\n<td>Query</td>\n<td>查询语句</td>\n<td>SELECT * FROM public.dim_date</td>\n</tr>\n<tr>\n<td>Parameters</td>\n<td>查询参数，内容为参数名，参数值</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Calculated Columns</td>\n<td>对某些列做一些计算</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Columns</td>\n<td></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Output Columns</td>\n<td></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Output Model</td>\n<td></td>\n<td>include</td>\n</tr>\n<tr>\n<td>Cache Keys</td>\n<td>缓存的列</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Cache Duration</td>\n<td>缓存时间</td>\n<td>3600</td>\n</tr>\n<tr>\n<td>Cache</td>\n<td>是否开启缓存</td>\n<td>True</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>创建组件层，这里选择用 table 来演示<br />\n<img data-src=\"8.png\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>例子中的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>组件名，没什么用</td>\n<td>table</td>\n</tr>\n<tr>\n<td>Listeners</td>\n<td>需要监听的参数</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Column Headers</td>\n<td>table 组件特有，表头</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Column Types</td>\n<td>table 组件特有，列的类型</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Parameters</td>\n<td>参数，参数将会传入数据</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Datasource</td>\n<td>选择数据源，对应数据源的 Name</td>\n<td>localhost</td>\n</tr>\n<tr>\n<td>HtmlObject</td>\n<td>用于挂载的 html dom 节点，例如值为 app，则将会渲染到 id 为 app 的 html 元素上，一般使用 div 作为容器</td>\n<td>table</td>\n</tr>\n<tr>\n<td>Click Action</td>\n<td>点击事件</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>创建视图层，先添加一个行，再添加一个列，最后添加一个 html 元素<br />\n<img data-src=\"9.png\" alt=\"\" /><br />\n<img data-src=\"17.png\" alt=\"\" /><br />\n id=table 对应组件的 HtmlObject</p>\n</li>\n<li>\n<p>运行 CDE<br />\n<img data-src=\"18.png\" alt=\"\" /><br />\n<img data-src=\"10.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h2 id=\"配置参数\"><a class=\"anchor\" href=\"#配置参数\">#</a> 配置参数</h2>\n<p>以上面的 table 为例，创建一个 id 下拉列表来动态刷新 table</p>\n<ol>\n<li>步骤</li>\n</ol>\n<ul>\n<li>创建查询 id 的数据源，用于筛选组件显示数值</li>\n<li>创建参数组件</li>\n<li>创建筛选组件，配置好数据源与参数容器，当筛选组件值变化时会自动将值放入该容器</li>\n<li>图表组件监听参数，当参数值变化时图表将会自动刷新</li>\n<li 变量名=\"\">图表组件的数据源 SQL 语句加入变量，变量使用方法：$</li>\n<li>创建筛选组件的 html 元素，这样筛选组件才会显示出来</li>\n</ul>\n<ol start=\"2\">\n<li>创建查询 id 的数据层，还是选择 jdbc，只是简单的查询所有 id 出来<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> dim_date_id <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span>dim_date</pre></td></tr></table></figure></li>\n</ol>\n<p><img data-src=\"11.png\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>| 属性</th>\n<th>描述</th>\n<th>例子中的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>数据源名字，后面组件层会用到</td>\n<td>localhost</td>\n</tr>\n<tr>\n<td>Driver</td>\n<td>驱动类名</td>\n<td>org.postgresql.Driver</td>\n</tr>\n<tr>\n<td>Password</td>\n<td>数据库密码</td>\n</tr>\n<tr>\n<td>Username</td>\n<td>数据库用户名</td>\n</tr>\n<tr>\n<td>Access Level</td>\n<td>数据源权限等级</td>\n<td>Public</td>\n</tr>\n<tr>\n<td>URL</td>\n<td>SQL Url</td>\n<td>jdbc:postgresql://localhost:5432/postgres</td>\n</tr>\n<tr>\n<td>Query</td>\n<td>查询语句</td>\n<td>SELECT dim_date_id FROM public.dim_date</td>\n</tr>\n<tr>\n<td>Parameters</td>\n<td>查询参数，内容为参数名，参数值</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Calculated Columns</td>\n<td>对某些列做一些计算</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Columns</td>\n<td></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Output Columns</td>\n<td></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Output Model</td>\n<td></td>\n<td>include</td>\n</tr>\n<tr>\n<td>Cache Keys</td>\n<td>缓存的列</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Cache Duration</td>\n<td>缓存时间</td>\n<td>3600</td>\n</tr>\n<tr>\n<td>Cache</td>\n<td>是否开启缓存</td>\n<td>True</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>\n<p>创建变量参数，用来装载变量<br />\n<img data-src=\"12.png\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>例子中值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>参数名，查询组件会用到</td>\n<td>p_id</td>\n</tr>\n<tr>\n<td>Property value</td>\n<td>默认值</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Bookmarkable</td>\n<td></td>\n<td>False</td>\n</tr>\n<tr>\n<td>Public</td>\n<td>是否公开</td>\n<td>False</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>创建查询组件，这里我选择了下拉列表<br />\n<img data-src=\"13.png\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>例子中的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>组件名，没啥用</td>\n<td>selectId</td>\n</tr>\n<tr>\n<td>Parameter</td>\n<td>绑定的参数，对应参数的 Name</td>\n<td>p_id</td>\n</tr>\n<tr>\n<td>Listeners</td>\n<td>监听的参数 可以监听多个，当参数变化后会自动传入数据源中，这里其实可以去掉，因为 query_id 数据源没有用到参数</td>\n<td>['p_id']</td>\n</tr>\n<tr>\n<td>Parameters</td>\n<td>参数，提供给 Datasource 使用</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>jQuery Plugin</td>\n<td>添加 jq 拓展</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Value as id</td>\n<td>是否作为 ID</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Datasource</td>\n<td>查询的数据源，这里是 query_id</td>\n<td>query_id</td>\n</tr>\n<tr>\n<td>Values array</td>\n<td>常量值</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>HtmlObject</td>\n<td>挂载的 Html dom 对象，例如值为 app，则将会渲染到 id 为 app 的 html 元素上，一般使用 div 作为容器</td>\n<td>selectId</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>修改数据展示组件 (table)<br />\n<img data-src=\"33.png\" alt=\"\" /><br />\n<img data-src=\"34.png\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>例子中的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>组件名，没什么用</td>\n<td>table</td>\n</tr>\n<tr>\n<td>Listeners</td>\n<td>需要监听的参数</td>\n<td>[&quot;p_id&quot;]</td>\n</tr>\n<tr>\n<td>Column Headers</td>\n<td>table 组件特有，表头</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Column Types</td>\n<td>table 组件特有，列的类型</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Parameters</td>\n<td>参数，参数将会传入数据</td>\n<td>[[&quot;p_id&quot;,&quot;p_id&quot;]]</td>\n</tr>\n<tr>\n<td>Datasource</td>\n<td>选择数据源，对应数据源的 Name</td>\n<td>localhost</td>\n</tr>\n<tr>\n<td>HtmlObject</td>\n<td>用于挂载的 html dom 节点，例如值为 app，则将会渲染到 id 为 app 的 html 元素上，一般使用 div 作为容器</td>\n<td>table</td>\n</tr>\n<tr>\n<td>Click Action</td>\n<td>点击事件</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>修改数据源<br />\n原 sql</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span>dim_date</pre></td></tr></table></figure><p>修改为 ${p_id} 为设置变量名</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span>dim_date <span class=\"token keyword\">where</span> dim_date_id <span class=\"token operator\">=</span> $&#123;p_id&#125;</pre></td></tr></table></figure><p>添加使用到的参数<br />\n<img data-src=\"15.png\" alt=\"\" /><br />\n<img data-src=\"14.png\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>例子中的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>数据源名字，后面组件层会用到</td>\n<td>localhost</td>\n</tr>\n<tr>\n<td>Driver</td>\n<td>驱动类名</td>\n<td>org.postgresql.Driver</td>\n</tr>\n<tr>\n<td>Password</td>\n<td>数据库密码</td>\n</tr>\n<tr>\n<td>Username</td>\n<td>数据库用户名</td>\n</tr>\n<tr>\n<td>Access Level</td>\n<td>数据源权限等级</td>\n<td>Public</td>\n</tr>\n<tr>\n<td>URL</td>\n<td>SQL Url</td>\n<td>jdbc:postgresql://localhost:5432/postgres</td>\n</tr>\n<tr p_id=\"\">\n<td>Query</td>\n<td>查询语句</td>\n<td>SELECT * FROM public.dim_date where dim_date_id = $</td>\n</tr>\n<tr>\n<td>Parameters</td>\n<td>查询参数，内容为参数名，参数值</td>\n<td>[[&quot;p_id&quot;,&quot;p_id&quot;]]</td>\n</tr>\n<tr>\n<td>Calculated Columns</td>\n<td>对某些列做一些计算</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Columns</td>\n<td></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Output Columns</td>\n<td></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Output Model</td>\n<td></td>\n<td>include</td>\n</tr>\n<tr>\n<td>Cache Keys</td>\n<td>缓存的列</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Cache Duration</td>\n<td>缓存时间</td>\n<td>3600</td>\n</tr>\n<tr>\n<td>Cache</td>\n<td>是否开启缓存</td>\n<td>True</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>添加查询组件的视图<br />\n在原来的 table 上添加筛选组件的 html 挂载点<br />\n原来：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>table<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>改为：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>table<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"16.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>运行<br />\n<img data-src=\"30.png\" alt=\"\" /><br />\n<img data-src=\"31.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h1 id=\"集成echarts\"><a class=\"anchor\" href=\"#集成echarts\">#</a> 集成 Echarts</h1>\n<div class=\"note info\">\n<p>ECharts，缩写来自 Enterprise Charts，商业级数据图表，一个纯 Javascript 的图表库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（IE6/7/8/9/10/11，chrome，firefox，Safari 等），底层依赖轻量级的 Canvas 类库 ZRender，提供直观，生动，可交互，可高度个性化定制的数据可视化图表。创新的拖拽重计算、数据视图、值域漫游等特性大大增强了用户体验，赋予了用户对数据进行挖掘、整合的能力。</p>\n</div>\n<h2 id=\"基础使用-2\"><a class=\"anchor\" href=\"#基础使用-2\">#</a> 基础使用</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWNoYXJ0c2pzLmNvbS96aC9idWlsZGVyLmh0bWw=\">获取 Echarts</span>，点击超链接打开网页，选择你要使用到的组件，点下载后会获得一个 echarts.min.js 文件。首页下载的会是一个 zip 包，这里下载的是打包好的一个 js 文件<br />\n<img data-src=\"20.png\" alt=\"\" /><br />\n<img data-src=\"20-1.png\" alt=\"\" /></li>\n<li>上传 echarts 到 pentaho<br />\n<img data-src=\"21.png\" alt=\"\" /><br />\n 选择一个文件夹点上传，选择文件后上传即可<br />\n<img data-src=\"22.png\" alt=\"\" /><br />\n上传完后记得勾选显示隐藏文件，pentaho 默认不显示普通资源文件<br />\n<img data-src=\"23.png\" alt=\"\" /></li>\n<li>新建 CDE<br />\n 创建新的 CDE，并保存<br />\n<img data-src=\"24.png\" alt=\"\" /></li>\n<li>引入 echarts<br />\n 点击工具栏的添加资源，选 js 和引用已存在文件<br />\n<img data-src=\"25.png\" alt=\"\" /></li>\n<li>输入名字 echarts (不然会找不到 js 文件)，选择已经上传好的 echarts 文件<br />\n<img data-src=\"26.png\" alt=\"\" /></li>\n<li>再新建一个 js 文件，用来写生成 echarts 的 js 代码<br />\n这里选择自己写代码<br />\n<img data-src=\"27.png\" alt=\"\" /></li>\n<li>copy 一份官网的例子写在 js 里<br />\n<img data-src=\"28.png\" alt=\"\" /><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> myChart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 指定图表的配置项和数据</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            text<span class=\"token operator\">:</span> <span class=\"token string\">'ECharts 入门示例'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            data<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'销量'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"衬衫\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"羊毛衫\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"雪纺衫\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"裤子\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"高跟鞋\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"袜子\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            name<span class=\"token operator\">:</span> <span class=\"token string\">'销量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// 使用刚指定的配置项和数据显示图表。</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>新建 html 代码<br />\n<img data-src=\"29.png\" alt=\"\" /><br />\n html 内容<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>400px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>运行<br />\n<img data-src=\"32.png\" alt=\"\" /></li>\n</ol>\n<h2 id=\"动态图表\"><a class=\"anchor\" href=\"#动态图表\">#</a> 动态图表</h2>\n<p>在 cde 里使用原生 echarts 会有一个问题，就是无法获取参数，无法获取数据源与无法监听参数，本章将解决这三个问题</p>\n<ol>\n<li>步骤</li>\n</ol>\n<ul>\n<li>创建参数，用于 echarts 数据源</li>\n<li>创建下拉筛选组件，用于动态选择参数</li>\n<li>创建 echarts 数据源，并获取 api</li>\n<li>jq 获取参数，js 配置 echarts，并通过 ajax 获取数据</li>\n<li>创建 echarts 视图</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>新建一个 cde，并引入 echarts<br />\n<img data-src=\"39.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>创建参数容器<br />\n<img data-src=\"40.png\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>例子中值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>id</td>\n</tr>\n<tr>\n<td>Property value</td>\n</tr>\n<tr>\n<td>Bookmarkable</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Public</td>\n<td>False</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>创建下拉筛选组件<br />\n<img data-src=\"41.png\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>例子中的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>selectId</td>\n</tr>\n<tr>\n<td>Paramete</td>\n<td>id</td>\n</tr>\n<tr>\n<td>Listeners</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Parameters</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>jQuery Plugin</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Value as id</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Datasource</td>\n<td>query_id</td>\n</tr>\n<tr>\n<td>Values array</td>\n<td>[[&quot;id&quot;,&quot;1&quot;],[&quot;id&quot;,&quot;2&quot;],[&quot;id&quot;,&quot;3&quot;],[&quot;id&quot;,&quot;4&quot;]]</td>\n</tr>\n<tr>\n<td>HtmlObject</td>\n<td>id</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>创建下拉组件视图<br />\n<img data-src=\"42.png\" alt=\"\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>运行结果<br />\n<img data-src=\"43.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>创建 echarts 数据源<br />\n<img data-src=\"44.png\" alt=\"\" /><br />\n将传进来的参数作为输出结果传出去</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> $&#123;id&#125;</pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>例子中的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>localhost</td>\n</tr>\n<tr>\n<td>Driver</td>\n<td>org.postgresql.Driver</td>\n</tr>\n<tr>\n<td>Password</td>\n</tr>\n<tr>\n<td>Username</td>\n</tr>\n<tr>\n<td>Access Level</td>\n<td>Public</td>\n</tr>\n<tr>\n<td>URL</td>\n<td>jdbc:postgresql://localhost:5432/postgres</td>\n</tr>\n<tr id=\"\">\n<td>Query</td>\n<td>select $</td>\n</tr>\n<tr>\n<td>Parameters</td>\n<td>[[&quot;id&quot;,&quot;id&quot;,&quot;Integer&quot;,&quot;&quot;,&quot;&quot;]]</td>\n</tr>\n<tr>\n<td>Calculated Column</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Columns</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Output Columns</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Output Model</td>\n<td>include</td>\n</tr>\n<tr>\n<td>Cache Keys</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>Cache Duration</td>\n<td>3600</td>\n</tr>\n<tr>\n<td>Cache</td>\n<td>True</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>保存 cde</p>\n</li>\n<li>\n<p>当在 cde 里面创建一个数据源时，pentaho 会在该文件目录下创建一个同名 cda 文件，打开该文件<br />\n CDA 是 pentaho 的 api 插件，以后将新开一文章来讲解 CDA 的使用方法<br />\n<img data-src=\"45.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>测试数据源<br />\n选择刚才创建好的 echarts 数据源，输入参数，点击运行<br />\n<img data-src=\"46.png\" alt=\"\" /><br />\n可以看剧数据源将参数作为输出<br />\n<img data-src=\"47.png\" alt=\"\" /><br />\n点击 Query Url，复制 api<br />\n<img data-src=\"48.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>回到 cde，创建一个模板组件<br />\n<img data-src=\"49.png\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>性</th>\n<th>描述</th>\n<th>例子中的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>组件名，没什么用</td>\n<td>echarts</td>\n</tr>\n<tr>\n<td>Listeners</td>\n<td>需要监听的参数</td>\n<td>[&quot;id&quot;]</td>\n</tr>\n<tr>\n<td>Parameters</td>\n<td>参数，参数将会传入数据源</td>\n<td>[[&quot;id&quot;,&quot;id&quot;]]</td>\n</tr>\n<tr>\n<td>Datasource</td>\n<td>选择数据源，对应数据源的 Name</td>\n<td>localhost</td>\n</tr>\n<tr>\n<td>HtmlObject</td>\n<td>用于挂载的 html dom 节点，例如值为 app，则将会渲染到 id 为 app 的 html 元素上，一般使用 div 作为容器</td>\n<td>echarts</td>\n</tr>\n<tr>\n<td>Model Handler</td>\n<td>处理数据的函数</td>\n</tr>\n<tr>\n<td>Template</td>\n<td>模板函数，执行 js</td>\n<td>写在下面</td>\n</tr>\n<tr>\n<td>Template Library</td>\n<td>模板库</td>\n</tr>\n<tr>\n<td>Events</td>\n<td>点击事件等事件</td>\n</tr>\n<tr>\n<td>Formatters</td>\n<td>格式化数据</td>\n</tr>\n<tr>\n<td>Model root element</td>\n<td>数据源的根节点</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 获取参数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#id select option:selected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#id select option:selected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> result<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>$<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    type <span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    url <span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost:8080/pentaho/plugin/cda/api/doQuery?path=/public/test.cda&amp;dataAccessId=localhost&amp;paramid=\"</span><span class=\"token operator\">+</span>id<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    async <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    dataType <span class=\"token operator\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    data <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function-variable function\">success</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     d<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>resultset<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">var</span> myChart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 指定图表的配置项和数据</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      text<span class=\"token operator\">:</span> <span class=\"token string\">'ECharts 入门示例'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      data<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'销量'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"衬衫\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      name<span class=\"token operator\">:</span> <span class=\"token string\">'销量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      data<span class=\"token operator\">:</span> d</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">// 使用刚指定的配置项和数据显示图表。</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// 返回</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>挂载模板组件<br />\n在筛选组件的上面加一个 column，name 写 echarts 对应模板组件的 HtmlObject<br />\n<img data-src=\"50.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>创建 echarts 的挂载点<br />\n修改原来 html，在筛选组件下加上 echarts div</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>改为</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>400px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>400px</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>运行<br />\n模板组件的数据源必须要返回值否则会报错，初始参数的值为 null，所以初始运行会报错<br />\n<img data-src=\"51.png\" alt=\"\" /><br />\n当我们改变下拉组件的值，参数不再为 null，模板组件刷新，echart 通过 ajax 动态渲染视图<br />\n<img data-src=\"52.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h1 id=\"相关链接\"><a class=\"anchor\" href=\"#相关链接\">#</a> 相关链接</h1>\n<p>CDE 官方配置文档：<span class=\"exturl\" data-url=\"aHR0cDovL3dlYmRldGFpbHMuZ2l0aHViLmlvL2NjYy8jdHlwZT1saW5lJmFtcDthbmNob3I9dGltZS1zZXJpZXMtbGluZQ==\">http://webdetails.github.io/ccc/#type=line&amp;anchor=time-series-line</span></p>\n",
            "tags": [
                "计算机科学",
                "大数据",
                "数据可视化",
                "bi",
                "pentaho"
            ]
        }
    ]
}